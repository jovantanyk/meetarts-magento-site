!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"NOfunction"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE={})}(this,function(e){"use strict";const b="127",V=100,w=300,L=301,C=302,P=303,D=304,I=306,N=307,F=1e3,G=1001,W=1002,O=1003,j=1004,q=1005,z=1006,X=1007,Y=1008,Pe=1009,Z=1012,J=1014,De=1015,Ie=1016,Q=1020,K=1022,Ne=1023,$=1026,ee=1027,B=33776,H=33777,U=33778,te=33779,ne=35840,re=35841,ie=35842,ae=35843,se=37492,oe=37496,le=2300,ce=2301,he=2302,ue=2400,de=2401,pe=2402,fe=2500,me=2501,Be=3e3,ge=3001,ve=3007,ye=3002,xe=3004,_e=35044,be=35048,we="300 es";function Me(){}Object.assign(Me.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)},hasEventListener:function(e,t){var n;return void 0!==this._listeners&&void 0!==(n=this._listeners)[e]&&-1!==n[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){var n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}},dispatchEvent:function(n){if(void 0!==this._listeners){var e=this._listeners[n.type];if(void 0!==e){n.target=this;var r=e.slice(0);for(let e=0,t=r.length;e<t;e++)r[e].call(this,n);n.target=null}}}});const i=[];for(let e=0;e<256;e++)i[e]=(e<16?"0":"")+e.toString(16);let Te=1234567;const Ee={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(i[255&e]+i[e>>8&255]+i[e>>16&255]+i[e>>24&255]+"-"+i[255&t]+i[t>>8&255]+"-"+i[t>>16&15|64]+i[t>>24&255]+"-"+i[63&n|128]+i[n>>8&255]+"-"+i[n>>16&255]+i[n>>24&255]+i[255&r]+i[r>>8&255]+i[r>>16&255]+i[r>>24&255]).toUpperCase()},clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},inverseLerp:function(e,t,n){return e!==t?(n-e)/(t-e):0},lerp:function(e,t,n){return(1-n)*e+n*t},damp:function(e,t,n,r){return Ee.lerp(e,t,1-Math.exp(-n*r))},pingpong:function(e,t=1){return t-Math.abs(Ee.euclideanModulo(e,2*t)-t)},smoothstep:function(e,t,n){return e<=t?0:n<=e?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:n<=e?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return((Te=16807*(Te=void 0!==e?e%2147483647:Te)%2147483647)-1)/2147483646},degToRad:function(e){return e*Ee.DEG2RAD},radToDeg:function(e){return e*Ee.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,n,r,i){var a=Math.cos,s=Math.sin,o=a(n/2),l=s(n/2),c=a((t+r)/2),h=s((t+r)/2),u=a((t-r)/2),d=s((t-r)/2),p=a((r-t)/2),f=s((r-t)/2);switch(i){case"XYX":e.set(o*h,l*u,l*d,o*c);break;case"YZY":e.set(l*d,o*h,l*u,o*c);break;case"ZXZ":e.set(l*u,l*d,o*h,o*c);break;case"XZX":e.set(o*h,l*f,l*p,o*c);break;case"YXY":e.set(l*p,o*h,l*f,o*c);break;case"ZYZ":e.set(l*f,l*p,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}};class Se{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){var t=this.x,n=this.y,e=e.elements;return this.x=e[0]*t+e[3]*n+e[6],this.y=e[1]*t+e[4]*n+e[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,e=this.y-e.y;return t*t+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){var n=Math.cos(t),t=Math.sin(t),r=this.x-e.x,i=this.y-e.y;return this.x=r*n-i*t+e.x,this.y=r*t+i*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}Se.prototype.isVector2=!0;class v{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,i,a,s,o,l){var c=this.elements;return c[0]=e,c[1]=r,c[2]=s,c[3]=t,c[4]=i,c[5]=o,c[6]=n,c[7]=a,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){var t=this.elements,e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){e=e.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){var e=e.elements,t=t.elements,n=this.elements,r=e[0],i=e[3],a=e[6],s=e[1],o=e[4],l=e[7],c=e[2],h=e[5],e=e[8],u=t[0],d=t[3],p=t[6],f=t[1],m=t[4],g=t[7],v=t[2],y=t[5],t=t[8];return n[0]=r*u+i*f+a*v,n[3]=r*d+i*m+a*y,n[6]=r*p+i*g+a*t,n[1]=s*u+o*f+l*v,n[4]=s*d+o*m+l*y,n[7]=s*p+o*g+l*t,n[2]=c*u+h*f+e*v,n[5]=c*d+h*m+e*y,n[8]=c*p+h*g+e*t,this}multiplyScalar(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],e=e[8];return t*a*e-t*s*l-n*i*e+n*s*o+r*i*l-r*a*o}invert(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],c=e[8],h=c*a-s*l,u=s*o-c*i,d=l*i-a*o,p=t*h+n*u+r*d;return 0==p?this.set(0,0,0,0,0,0,0,0,0):(e[0]=h*(h=1/p),e[1]=(r*l-c*n)*h,e[2]=(s*n-r*a)*h,e[3]=u*h,e[4]=(c*t-r*o)*h,e[5]=(r*i-s*t)*h,e[6]=d*h,e[7]=(n*o-l*t)*h,e[8]=(a*t-n*i)*h,this)}transpose(){var e=this.elements,t=e[1];return e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,i,a,s){var o=Math.cos(i),i=Math.sin(i);return this.set(n*o,n*i,-n*(o*a+i*s)+a+e,-r*i,r*o,-r*(-i*a+o*s)+s+t,0,0,1),this}scale(e,t){var n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){var t=Math.cos(e),e=Math.sin(e),n=this.elements,r=n[0],i=n[3],a=n[6],s=n[1],o=n[4],l=n[7];return n[0]=t*r+e*s,n[3]=t*i+e*o,n[6]=t*a+e*l,n[1]=-e*r+t*s,n[4]=-e*i+t*o,n[7]=-e*a+t*l,this}translate(e,t){var n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){var t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(t,n=0){for(let e=0;e<9;e++)this.elements[e]=t[e+n];return this}toArray(e=[],t=0){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}let He;v.prototype.isMatrix3=!0;const Ue={getDataURL:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;var n;return 2048<(t=e instanceof HTMLCanvasElement?e:((He=void 0===He?document.createElementNS("http://www.w3.org/1999/xhtml","canvas"):He).width=e.width,He.height=e.height,n=He.getContext("2d"),e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),He)).width||2048<t.height?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}};let Oe=0;class h extends Me{constructor(e=h.DEFAULT_IMAGE,t=h.DEFAULT_MAPPING,n=1001,r=1001,i=1006,a=1008,s=1023,o=1009,l=1,c=3e3){super(),Object.defineProperty(this,"id",{value:Oe++}),this.uuid=Ee.generateUUID(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new Se(0,0),this.repeat=new Se(1,1),this.center=new Se(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new v,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this}toJSON(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];var n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){var r=this.image;if(void 0===r.uuid&&(r.uuid=Ee.generateUUID()),!t&&void 0===e.images[r.uuid]){let n;if(Array.isArray(r)){n=[];for(let e=0,t=r.length;e<t;e++)r[e].isDataTexture?n.push(ze(r[e].image)):n.push(ze(r[e]))}else n=ze(r);e.images[r.uuid]={uuid:r.uuid,url:n}}n.image=r.uuid}return t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping===w){if(e.applyMatrix3(this.matrix),e.x<0||1<e.x)switch(this.wrapS){case F:e.x=e.x-Math.floor(e.x);break;case G:e.x=e.x<0?0:1;break;case W:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||1<e.y)switch(this.wrapT){case F:e.y=e.y-Math.floor(e.y);break;case G:e.y=e.y<0?0:1;break;case W:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}this.flipY&&(e.y=1-e.y)}return e}set needsUpdate(e){!0===e&&this.version++}}function ze(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Ue.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}h.DEFAULT_IMAGE=void 0,h.DEFAULT_MAPPING=w,h.prototype.isTexture=!0;class Ae{constructor(e=0,t=0,n=0,r=1){this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){var t=this.x,n=this.y,r=this.z,i=this.w,e=e.elements;return this.x=e[0]*t+e[4]*n+e[8]*r+e[12]*i,this.y=e[1]*t+e[5]*n+e[9]*r+e[13]*i,this.z=e[2]*t+e[6]*n+e[10]*r+e[14]*i,this.w=e[3]*t+e[7]*n+e[11]*r+e[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,i;const a=e.elements,s=a[0],o=a[4],l=a[8],c=a[1],h=a[5],u=a[9],d=a[2],p=a[6],f=a[10];if(Math.abs(o-c)<.01&&Math.abs(l-d)<.01&&Math.abs(u-p)<.01)if(Math.abs(o+c)<.1&&Math.abs(l+d)<.1&&Math.abs(u+p)<.1&&Math.abs(s+h+f-3)<.1)this.set(1,0,0,0);else{t=Math.PI;const e=(s+1)/2,a=(h+1)/2,m=(f+1)/2,g=(o+c)/4,v=(l+d)/4,y=(u+p)/4;e>a&&e>m?i=e<.01?(n=0,r=.707106781):(n=Math.sqrt(e),r=g/n,v/n):a>m?i=a<.01?(n=.707106781,r=0,.707106781):(r=Math.sqrt(a),n=g/r,y/r):m<.01?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(m),n=v/i,r=y/i),this.set(n,r,i,t)}else{let e=Math.sqrt((p-u)*(p-u)+(l-d)*(l-d)+(c-o)*(c-o));Math.abs(e)<.001&&(e=1),this.x=(p-u)/e,this.y=(l-d)/e,this.z=(c-o)/e,this.w=Math.acos((s+h+f-1)/2)}return this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}Ae.prototype.isVector4=!0;class Fe extends Me{constructor(e,t,n){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Ae(0,0,e,t),this.scissorTest=!1,this.viewport=new Ae(0,0,e,t),n=n||{},this.texture=new h(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:z,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}Fe.prototype.isWebGLRenderTarget=!0;class Ge extends Fe{constructor(e,t,n){super(e,t,n),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}Ge.prototype.isWebGLMultisampleRenderTarget=!0;class f{constructor(e=0,t=0,n=0,r=1){this._x=e,this._y=t,this._z=n,this._w=r}static slerp(e,t,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,r)}static slerpFlat(t,n,r,i,a,s,o){let l=r[i+0],c=r[i+1],h=r[i+2],u=r[i+3];var d=a[s+0],p=a[s+1],f=a[s+2],s=a[s+3];if(0===o)t[n+0]=l,t[n+1]=c,t[n+2]=h,t[n+3]=u;else if(1===o)t[n+0]=d,t[n+1]=p,t[n+2]=f,t[n+3]=s;else{if(u!==s||l!==d||c!==p||h!==f){let e=1-o;const n=l*d+c*p+h*f+u*s,r=0<=n?1:-1,i=1-n*n;if(i>Number.EPSILON){const a=Math.sqrt(i),s=Math.atan2(a,n*r);e=Math.sin(e*s)/a,o=Math.sin(o*s)/a}const a=o*r;if(l=l*e+d*a,c=c*e+p*a,h=h*e+f*a,u=u*e+s*a,e===1-o){const t=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=t,c*=t,h*=t,u*=t}}t[n]=l,t[n+1]=c,t[n+2]=h,t[n+3]=u}}static multiplyQuaternionsFlat(e,t,n,r,i,a){var s=n[r],o=n[r+1],l=n[r+2],n=n[r+3],r=i[a],c=i[a+1],h=i[a+2],i=i[a+3];return e[t]=s*i+n*r+o*h-l*c,e[t+1]=o*i+n*c+l*r-s*h,e[t+2]=l*i+n*h+s*c-o*r,e[t+3]=n*i-s*r-o*c-l*h,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=e._x,r=e._y,i=e._z,a=e._order,e=Math.cos,s=Math.sin,o=e(n/2),l=e(r/2),c=e(i/2),h=s(n/2),u=s(r/2),d=s(i/2);switch(a){case"XYZ":this._x=h*l*c+o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c-h*u*d;break;case"YXZ":this._x=h*l*c+o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c+h*u*d;break;case"ZXY":this._x=h*l*c-o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c-h*u*d;break;case"ZYX":this._x=h*l*c-o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c+h*u*d;break;case"YZX":this._x=h*l*c+o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c-h*u*d;break;case"XZY":this._x=h*l*c-o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c+h*u*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){var t=t/2,n=Math.sin(t);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(t),this._onChangeCallback(),this}setFromRotationMatrix(e){var e=e.elements,t=e[0],n=e[4],r=e[8],i=e[1],a=e[5],s=e[9],o=e[2],l=e[6],c=e[10],h=t+a+c;if(0<h){const e=.5/Math.sqrt(h+1);this._w=.25/e,this._x=(l-s)*e,this._y=(r-o)*e,this._z=(i-n)*e}else if(a<t&&c<t){const e=2*Math.sqrt(1+t-a-c);this._w=(l-s)/e,this._x=.25*e,this._y=(n+i)/e,this._z=(r+o)/e}else if(c<a){const e=2*Math.sqrt(1+a-t-c);this._w=(r-o)/e,this._x=(n+i)/e,this._y=.25*e,this._z=(s+l)/e}else{const e=2*Math.sqrt(1+c-t-a);this._w=(i-n)/e,this._x=(r+o)/e,this._y=(s+l)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=n,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ee.clamp(this.dot(e),-1,1)))}rotateTowards(e,t){var n=this.angleTo(e);return 0!==n&&(t=Math.min(1,t/n),this.slerp(e,t)),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(this._x=this._x*(e=1/e),this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){var n=e._x,r=e._y,i=e._z,e=e._w,a=t._x,s=t._y,o=t._z,t=t._w;return this._x=n*t+e*a+r*o-i*s,this._y=r*t+e*s+i*a-n*o,this._z=i*t+e*o+n*s-r*a,this._w=e*t-n*a-r*s-i*o,this._onChangeCallback(),this}slerp(t,n){if(0!==n){if(1===n)return this.copy(t);var r=this._x,i=this._y,a=this._z,s=this._w;let e=s*t._w+r*t._x+i*t._y+a*t._z;if(e<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,e=-e):this.copy(t),1<=e)this._w=s,this._x=r,this._y=i,this._z=a;else{t=1-e*e;if(t<=Number.EPSILON){const t=1-n;this._w=t*s+n*this._w,this._x=t*r+n*this._x,this._y=t*i+n*this._y,this._z=t*a+n*this._z,this.normalize()}else{var t=Math.sqrt(t),o=Math.atan2(t,e),l=Math.sin((1-n)*o)/t,n=Math.sin(n*o)/t;this._w=s*l+this._w*n,this._x=r*l+this._x*n,this._y=i*l+this._y*n,this._z=a*l+this._z*n}this._onChangeCallback()}}return this}slerpQuaternions(e,t,n){this.copy(e).slerp(t,n)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}f.prototype.isQuaternion=!0;class Re{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Ve.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Ve.setFromAxisAngle(e,t))}applyMatrix3(e){var t=this.x,n=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[3]*n+e[6]*r,this.y=e[1]*t+e[4]*n+e[7]*r,this.z=e[2]*t+e[5]*n+e[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){var t=this.x,n=this.y,r=this.z,e=e.elements,i=1/(e[3]*t+e[7]*n+e[11]*r+e[15]);return this.x=(e[0]*t+e[4]*n+e[8]*r+e[12])*i,this.y=(e[1]*t+e[5]*n+e[9]*r+e[13])*i,this.z=(e[2]*t+e[6]*n+e[10]*r+e[14])*i,this}applyQuaternion(e){var t=this.x,n=this.y,r=this.z,i=e.x,a=e.y,s=e.z,e=e.w,o=e*t+a*r-s*n,l=e*n+s*t-i*r,c=e*r+i*n-a*t,t=-i*t-a*n-s*r;return this.x=o*e+t*-i+l*-s-c*-a,this.y=l*e+t*-a+c*-i-o*-s,this.z=c*e+t*-s+o*-a-l*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){var t=this.x,n=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[4]*n+e[8]*r,this.y=e[1]*t+e[5]*n+e[9]*r,this.z=e[2]*t+e[6]*n+e[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){var n=e.x,r=e.y,e=e.z,i=t.x,a=t.y,t=t.z;return this.x=r*t-e*a,this.y=e*i-n*t,this.z=n*a-r*i,this}projectOnVector(e){var t=e.lengthSq();return 0===t?this.set(0,0,0):(t=e.dot(this)/t,this.copy(e).multiplyScalar(t))}projectOnPlane(e){return ke.copy(this).projectOnVector(e),this.sub(ke)}reflect(e){return this.sub(ke.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());return 0===t?Math.PI/2:(e=this.dot(e)/t,Math.acos(Ee.clamp(e,-1,1)))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,n=this.y-e.y,e=this.z-e.z;return t*t+n*n+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){var r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){e=e.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),e=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=e,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}Re.prototype.isVector3=!0;const ke=new Re,Ve=new f;class We{constructor(e=new Re(1/0,1/0,1/0),t=new Re(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(n){let r=1/0,i=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=n.length;e<t;e+=3){var c=n[e],h=n[e+1],u=n[e+2];c<r&&(r=c),h<i&&(i=h),u<a&&(a=u),c>s&&(s=c),h>o&&(o=h),u>l&&(l=u)}return this.min.set(r,i,a),this.max.set(s,o,l),this}setFromBufferAttribute(n){let r=1/0,i=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=n.count;e<t;e++){var c=n.getX(e),h=n.getY(e),u=n.getZ(e);c<r&&(r=c),h<i&&(i=h),u<a&&(a=u),c>s&&(s=c),h>o&&(o=h),u>l&&(l=u)}return this.min.set(r,i,a),this.max.set(s,o,l),this}setFromPoints(n){this.makeEmpty();for(let e=0,t=n.length;e<t;e++)this.expandByPoint(n[e]);return this}setFromCenterAndSize(e,t){t=qe.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new Re),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new Re),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);var t=e.geometry,n=(void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),Xe.copy(t.boundingBox),Xe.applyMatrix4(e.matrixWorld),this.union(Xe)),e.children);for(let e=0,t=n.length;e<t;e++)this.expandByObject(n[e]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new Re),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,qe),qe.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return n=0<e.normal.x?(t=e.normal.x*this.min.x,e.normal.x*this.max.x):(t=e.normal.x*this.max.x,e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){return!this.isEmpty()&&(this.getCenter(et),tt.subVectors(this.max,et),Ye.subVectors(e.a,et),Ze.subVectors(e.b,et),Je.subVectors(e.c,et),Qe.subVectors(Ze,Ye),Ke.subVectors(Je,Ze),$e.subVectors(Ye,Je),!!it([0,-Qe.z,Qe.y,0,-Ke.z,Ke.y,0,-$e.z,$e.y,Qe.z,0,-Qe.x,Ke.z,0,-Ke.x,$e.z,0,-$e.x,-Qe.y,Qe.x,0,-Ke.y,Ke.x,0,-$e.y,$e.x,0],Ye,Ze,Je,tt))&&!!it([1,0,0,0,1,0,0,0,1],Ye,Ze,Je,tt)&&(nt.crossVectors(Qe,Ke),it([nt.x,nt.y,nt.z],Ye,Ze,Je,tt))}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new Re),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return qe.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(qe).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(je[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),je[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),je[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),je[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),je[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),je[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),je[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),je[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(je)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}We.prototype.isBox3=!0;const je=[new Re,new Re,new Re,new Re,new Re,new Re,new Re,new Re],qe=new Re,Xe=new We,Ye=new Re,Ze=new Re,Je=new Re,Qe=new Re,Ke=new Re,$e=new Re,et=new Re,tt=new Re,nt=new Re,rt=new Re;function it(n,r,i,a,s){for(let e=0,t=n.length-3;e<=t;e+=3){rt.fromArray(n,e);var o=s.x*Math.abs(rt.x)+s.y*Math.abs(rt.y)+s.z*Math.abs(rt.z),l=r.dot(rt),c=i.dot(rt),h=a.dot(rt);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>o)return!1}return!0}const at=new We,st=new Re,ot=new Re,lt=new Re;class ct{constructor(e=new Re,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(n,e){var r=this.center;void 0!==e?r.copy(e):at.setFromPoints(n).getCenter(r);let i=0;for(let e=0,t=n.length;e<t;e++)i=Math.max(i,r.distanceToSquared(n[e]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){var n=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new Re),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new We),this.isEmpty()?e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){lt.subVectors(e,this.center);var t=lt.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.add(lt.multiplyScalar(n/e)),this.radius+=n}return this}union(e){return ot.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(st.copy(e.center).add(ot)),this.expandByPoint(st.copy(e.center).sub(ot)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const ht=new Re,ut=new Re,dt=new Re,pt=new Re,ft=new Re,mt=new Re,gt=new Re;class vt{constructor(e=new Re,t=new Re(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new Re),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ht)),this}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new Re),t.subVectors(e,this.origin);e=t.dot(this.direction);return e<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(e).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){var t=ht.subVectors(e,this.origin).dot(this.direction);return(t<0?this.origin:(ht.copy(this.direction).multiplyScalar(t).add(this.origin),ht)).distanceToSquared(e)}distanceSqToSegment(e,t,n,r){ut.copy(e).add(t).multiplyScalar(.5),dt.copy(t).sub(e).normalize(),pt.copy(this.origin).sub(ut);var e=.5*e.distanceTo(t),t=-this.direction.dot(dt),i=pt.dot(this.direction),a=-pt.dot(dt),s=pt.lengthSq(),o=Math.abs(1-t*t);let l,c,h,u;if(0<o)if(l=t*a-i,c=t*i-a,u=e*o,0<=l)if(c>=-u)if(c<=u){const e=1/o;l*=e,c*=e,h=l*(l+t*c+2*i)+c*(t*l+c+2*a)+s}else c=e,l=Math.max(0,-(t*c+i)),h=-l*l+c*(c+2*a)+s;else c=-e,l=Math.max(0,-(t*c+i)),h=-l*l+c*(c+2*a)+s;else h=c<=-u?(l=Math.max(0,-(-t*e+i)),c=0<l?-e:Math.min(Math.max(-e,-a),e),-l*l+c*(c+2*a)+s):c<=u?(l=0,(c=Math.min(Math.max(-e,-a),e))*(c+2*a)+s):(l=Math.max(0,-(t*e+i)),c=0<l?e:Math.min(Math.max(-e,-a),e),-l*l+c*(c+2*a)+s);else c=0<t?-e:e,l=Math.max(0,-(t*c+i)),h=-l*l+c*(c+2*a)+s;return n&&n.copy(this.direction).multiplyScalar(l).add(this.origin),r&&r.copy(dt).multiplyScalar(c).add(ut),h}intersectSphere(e,t){ht.subVectors(e.center,this.origin);var n=ht.dot(this.direction),r=ht.dot(ht)-n*n,e=e.radius*e.radius;return e<r||(r=n+(e=Math.sqrt(e-r)),(n=n-e)<0&&r<0)?null:n<0?this.at(r,t):this.at(n,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){var t=e.normal.dot(this.direction);return 0===t?0===e.distanceToPoint(this.origin)?0:null:0<=(e=-(this.origin.dot(e.normal)+e.constant)/t)?e:null}intersectPlane(e,t){e=this.distanceToPlane(e);return null===e?null:this.at(e,t)}intersectsPlane(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,i,a,s,o;var l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return r=0<=l?(n=(e.min.x-u.x)*l,(e.max.x-u.x)*l):(n=(e.max.x-u.x)*l,(e.min.x-u.x)*l),a=0<=c?(i=(e.min.y-u.y)*c,(e.max.y-u.y)*c):(i=(e.max.y-u.y)*c,(e.min.y-u.y)*c),n>a||i>r||((i>n||n!=n)&&(n=i),(a<r||r!=r)&&(r=a),o=0<=h?(s=(e.min.z-u.z)*h,(e.max.z-u.z)*h):(s=(e.max.z-u.z)*h,(e.min.z-u.z)*h),n>o)||s>r||((s>n||n!=n)&&(n=s),(r=o<r||r!=r?o:r)<0)?null:this.at(0<=n?n:r,t)}intersectsBox(e){return null!==this.intersectBox(e,ht)}intersectTriangle(e,t,n,r,i){ft.subVectors(t,e),mt.subVectors(n,e),gt.crossVectors(ft,mt);let a,s=this.direction.dot(gt);if(0<s){if(r)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}pt.subVectors(this.origin,e);t=a*this.direction.dot(mt.crossVectors(pt,mt));return t<0||(n=a*this.direction.dot(ft.cross(pt)))<0||t+n>s||(r=-a*pt.dot(gt))<0?null:this.at(r/s,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Le{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,i,a,s,o,l,c,h,u,d,p,f,m){var g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=i,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Le).fromArray(this.elements)}copy(e){var t=this.elements,e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],this}copyPosition(e){var t=this.elements,e=e.elements;return t[12]=e[12],t[13]=e[13],t[14]=e[14],this}setFromMatrix3(e){e=e.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){var t=this.elements,n=e.elements,r=1/yt.setFromMatrixColumn(e,0).length(),i=1/yt.setFromMatrixColumn(e,1).length(),e=1/yt.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*i,t[5]=n[5]*i,t[6]=n[6]*i,t[7]=0,t[8]=n[8]*e,t[9]=n[9]*e,t[10]=n[10]*e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,r=e.y,i=e.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(r),l=Math.sin(r),c=Math.cos(i),h=Math.sin(i);if("XYZ"===e.order){const e=a*c,n=a*h,r=s*c,i=s*h;t[0]=o*c,t[4]=-o*h,t[8]=l,t[1]=n+r*l,t[5]=e-i*l,t[9]=-s*o,t[2]=i-e*l,t[6]=r+n*l,t[10]=a*o}else if("YXZ"===e.order){const e=o*c,n=o*h,r=l*c,i=l*h;t[0]=e+i*s,t[4]=r*s-n,t[8]=a*l,t[1]=a*h,t[5]=a*c,t[9]=-s,t[2]=n*s-r,t[6]=i+e*s,t[10]=a*o}else if("ZXY"===e.order){const e=o*c,n=o*h,r=l*c,i=l*h;t[0]=e-i*s,t[4]=-a*h,t[8]=r+n*s,t[1]=n+r*s,t[5]=a*c,t[9]=i-e*s,t[2]=-a*l,t[6]=s,t[10]=a*o}else if("ZYX"===e.order){const e=a*c,n=a*h,r=s*c,i=s*h;t[0]=o*c,t[4]=r*l-n,t[8]=e*l+i,t[1]=o*h,t[5]=i*l+e,t[9]=n*l-r,t[2]=-l,t[6]=s*o,t[10]=a*o}else if("YZX"===e.order){const e=a*o,n=a*l,r=s*o,i=s*l;t[0]=o*c,t[4]=i-e*h,t[8]=r*h+n,t[1]=h,t[5]=a*c,t[9]=-s*c,t[2]=-l*c,t[6]=n*h+r,t[10]=e-i*h}else if("XZY"===e.order){const e=a*o,n=a*l,r=s*o,i=s*l;t[0]=o*c,t[4]=-h,t[8]=l*c,t[1]=e*h+i,t[5]=a*c,t[9]=n*h-r,t[2]=r*h-n,t[6]=s*c,t[10]=i*h+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(_t,e,bt)}lookAt(e,t,n){var r=this.elements;return Tt.subVectors(e,t),0===Tt.lengthSq()&&(Tt.z=1),Tt.normalize(),wt.crossVectors(n,Tt),0===wt.lengthSq()&&(1===Math.abs(n.z)?Tt.x+=1e-4:Tt.z+=1e-4,Tt.normalize(),wt.crossVectors(n,Tt)),wt.normalize(),Mt.crossVectors(Tt,wt),r[0]=wt.x,r[4]=Mt.x,r[8]=Tt.x,r[1]=wt.y,r[5]=Mt.y,r[9]=Tt.y,r[2]=wt.z,r[6]=Mt.z,r[10]=Tt.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){var e=e.elements,t=t.elements,n=this.elements,r=e[0],i=e[4],a=e[8],s=e[12],o=e[1],l=e[5],c=e[9],h=e[13],u=e[2],d=e[6],p=e[10],f=e[14],m=e[3],g=e[7],v=e[11],e=e[15],y=t[0],x=t[4],_=t[8],b=t[12],w=t[1],M=t[5],T=t[9],E=t[13],S=t[2],A=t[6],R=t[10],L=t[14],C=t[3],P=t[7],D=t[11],t=t[15];return n[0]=r*y+i*w+a*S+s*C,n[4]=r*x+i*M+a*A+s*P,n[8]=r*_+i*T+a*R+s*D,n[12]=r*b+i*E+a*L+s*t,n[1]=o*y+l*w+c*S+h*C,n[5]=o*x+l*M+c*A+h*P,n[9]=o*_+l*T+c*R+h*D,n[13]=o*b+l*E+c*L+h*t,n[2]=u*y+d*w+p*S+f*C,n[6]=u*x+d*M+p*A+f*P,n[10]=u*_+d*T+p*R+f*D,n[14]=u*b+d*E+p*L+f*t,n[3]=m*y+g*w+v*S+e*C,n[7]=m*x+g*M+v*A+e*P,n[11]=m*_+g*T+v*R+e*D,n[15]=m*b+g*E+v*L+e*t,this}multiplyScalar(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],a=e[1],s=e[5],o=e[9],l=e[13],c=e[2],h=e[6],u=e[10],d=e[14];return e[3]*(+i*o*h-r*l*h-i*s*u+n*l*u+r*s*d-n*o*d)+e[7]*(+t*o*d-t*l*u+i*a*u-r*a*d+r*l*c-i*o*c)+e[11]*(+t*l*h-t*s*d-i*a*h+n*a*d+i*s*c-n*l*c)+e[15]*(-r*s*c-t*o*h+t*s*u+r*a*h-n*a*u+n*o*c)}transpose(){var e=this.elements,t=e[1];return e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){var r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],c=e[8],h=e[9],u=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],v=h*m*l-f*u*l+f*o*d-s*m*d-h*o*g+s*u*g,y=p*u*l-c*m*l-p*o*d+a*m*d+c*o*g-a*u*g,x=c*f*l-p*h*l+p*s*d-a*f*d-c*s*g+a*h*g,_=p*h*o-c*f*o-p*s*u+a*f*u+c*s*m-a*h*m,b=t*v+n*y+r*x+i*_;return 0==b?this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0):(e[0]=v*(v=1/b),e[1]=(f*u*i-h*m*i-f*r*d+n*m*d+h*r*g-n*u*g)*v,e[2]=(s*m*i-f*o*i+f*r*l-n*m*l-s*r*g+n*o*g)*v,e[3]=(h*o*i-s*u*i-h*r*l+n*u*l+s*r*d-n*o*d)*v,e[4]=y*v,e[5]=(c*m*i-p*u*i+p*r*d-t*m*d-c*r*g+t*u*g)*v,e[6]=(p*o*i-a*m*i-p*r*l+t*m*l+a*r*g-t*o*g)*v,e[7]=(a*u*i-c*o*i+c*r*l-t*u*l-a*r*d+t*o*d)*v,e[8]=x*v,e[9]=(p*h*i-c*f*i-p*n*d+t*f*d+c*n*g-t*h*g)*v,e[10]=(a*f*i-p*s*i+p*n*l-t*f*l-a*n*g+t*s*g)*v,e[11]=(c*s*i-a*h*i-c*n*l+t*h*l+a*n*d-t*s*d)*v,e[12]=_*v,e[13]=(c*f*r-p*h*r+p*n*u-t*f*u-c*n*m+t*h*m)*v,e[14]=(p*s*r-a*f*r-p*n*o+t*f*o+a*n*m-t*s*m)*v,e[15]=(a*h*r-c*s*r+c*n*o-t*h*o-a*n*u+t*s*u)*v,this)}scale(e){var t=this.elements,n=e.x,r=e.y,e=e.z;return t[0]*=n,t[4]*=r,t[8]*=e,t[1]*=n,t[5]*=r,t[9]*=e,t[2]*=n,t[6]*=r,t[10]*=e,t[3]*=n,t[7]*=r,t[11]*=e,this}getMaxScaleOnAxis(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,e))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){var t=Math.cos(e),e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this}makeRotationY(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this}makeRotationZ(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){var n=Math.cos(t),t=Math.sin(t),r=1-n,i=e.x,a=e.y,e=e.z,s=r*i,o=r*a;return this.set(s*i+n,s*a-t*e,s*e+t*a,0,s*a+t*e,o*a+n,o*e-t*i,0,s*e-t*a,o*e+t*i,r*e*e+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this}compose(e,t,n){var r=this.elements,i=t._x,a=t._y,s=t._z,t=t._w,o=i+i,l=a+a,c=s+s,h=i*o,u=i*l,i=i*c,d=a*l,a=a*c,s=s*c,o=t*o,l=t*l,t=t*c,c=n.x,p=n.y,n=n.z;return r[0]=(1-(d+s))*c,r[1]=(u+t)*c,r[2]=(i-l)*c,r[3]=0,r[4]=(u-t)*p,r[5]=(1-(h+s))*p,r[6]=(a+o)*p,r[7]=0,r[8]=(i+l)*n,r[9]=(a-o)*n,r[10]=(1-(h+d))*n,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){var r=this.elements;let i=yt.set(r[0],r[1],r[2]).length();var a=yt.set(r[4],r[5],r[6]).length(),s=yt.set(r[8],r[9],r[10]).length(),e=(this.determinant()<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],xt.copy(this),1/i),r=1/a,o=1/s;return xt.elements[0]*=e,xt.elements[1]*=e,xt.elements[2]*=e,xt.elements[4]*=r,xt.elements[5]*=r,xt.elements[6]*=r,xt.elements[8]*=o,xt.elements[9]*=o,xt.elements[10]*=o,t.setFromRotationMatrix(xt),n.x=i,n.y=a,n.z=s,this}makePerspective(e,t,n,r,i,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var s=this.elements,o=2*i/(n-r),l=(t+e)/(t-e),n=(n+r)/(n-r),r=-(a+i)/(a-i),a=-2*a*i/(a-i);return s[0]=2*i/(t-e),s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=o,s[9]=n,s[13]=0,s[2]=0,s[6]=0,s[10]=r,s[14]=a,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,n,r,i,a){var s=this.elements,o=1/(t-e),l=1/(n-r),c=1/(a-i),t=(t+e)*o,e=(n+r)*l,n=(a+i)*c;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-t,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-e,s[2]=0,s[6]=0,s[10]=-2*c,s[14]=-n,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){var t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(t,n=0){for(let e=0;e<16;e++)this.elements[e]=t[e+n];return this}toArray(e=[],t=0){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}Le.prototype.isMatrix4=!0;const yt=new Re,xt=new Le,_t=new Re(0,0,0),bt=new Re(1,1,1),wt=new Re,Mt=new Re,Tt=new Re,Et=new Le,St=new f;class At{constructor(e=0,t=0,n=0,r=At.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,n){var r=Ee.clamp,e=e.elements,i=e[0],a=e[4],s=e[8],o=e[1],l=e[5],c=e[9],h=e[2],u=e[6],d=e[10];switch(t=t||this._order){case"XYZ":this._y=Math.asin(r(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-a,i)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-r(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(s,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-h,i),this._z=0);break;case"ZXY":this._x=Math.asin(r(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,i));break;case"ZYX":this._y=Math.asin(-r(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(o,i)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(r(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-h,i)):(this._x=0,this._y=Math.atan2(s,d));break;case"XZY":this._z=Math.asin(-r(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(s,i)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Et.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Et,t,n)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return St.setFromEuler(this),this.setFromQuaternion(St,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new Re(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}At.prototype.isEuler=!0,At.DefaultOrder="XYZ",At.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Rt{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}}let Lt=0;const Ct=new Re,Pt=new f,Dt=new Le,It=new Re,Nt=new Re,Bt=new Re,Ht=new f,Ut=new Re(1,0,0),Ot=new Re(0,1,0),zt=new Re(0,0,1),Ft={type:"added"},Gt={type:"removed"};function c(){Object.defineProperty(this,"id",{value:Lt++}),this.uuid=Ee.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=c.DefaultUp.clone();const e=new Re,t=new At,n=new f,r=new Re(1,1,1);t._onChange(function(){n.setFromEuler(t,!1)}),n._onChange(function(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Le},normalMatrix:{value:new v}}),this.matrix=new Le,this.matrixWorld=new Le,this.matrixAutoUpdate=c.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Rt,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}c.DefaultUp=new Re(0,1,0),c.DefaultMatrixAutoUpdate=!0,c.prototype=Object.assign(Object.create(Me.prototype),{constructor:c,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return Pt.setFromAxisAngle(e,t),this.quaternion.multiply(Pt),this},rotateOnWorldAxis:function(e,t){return Pt.setFromAxisAngle(e,t),this.quaternion.premultiply(Pt),this},rotateX:function(e){return this.rotateOnAxis(Ut,e)},rotateY:function(e){return this.rotateOnAxis(Ot,e)},rotateZ:function(e){return this.rotateOnAxis(zt,e)},translateOnAxis:function(e,t){return Ct.copy(e).applyQuaternion(this.quaternion),this.position.add(Ct.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(Ut,e)},translateY:function(e){return this.translateOnAxis(Ot,e)},translateZ:function(e){return this.translateOnAxis(zt,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(Dt.copy(this.matrixWorld).invert())},lookAt:function(e,t,n){e.isVector3?It.copy(e):It.set(e,t,n);e=this.parent;this.updateWorldMatrix(!0,!1),Nt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Dt.lookAt(Nt,It,this.up):Dt.lookAt(It,Nt,this.up),this.quaternion.setFromRotationMatrix(Dt),e&&(Dt.extractRotation(e.matrixWorld),Pt.setFromRotationMatrix(Dt),this.quaternion.premultiply(Pt.invert()))},add:function(e){if(1<arguments.length)for(let e=0;e<arguments.length;e++)this.add(arguments[e]);else e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),(e.parent=this).children.push(e),e.dispatchEvent(Ft)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e);return this},remove:function(e){if(1<arguments.length)for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);else{var t=this.children.indexOf(e);-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Gt))}return this},clear:function(){for(let e=0;e<this.children.length;e++){var t=this.children[e];t.parent=null,t.dispatchEvent(Gt)}return this.children.length=0,this},attach:function(e){return this.updateWorldMatrix(!0,!1),Dt.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Dt.multiply(e.parent.matrixWorld)),e.applyMatrix4(Dt),this.add(e),e.updateWorldMatrix(!1,!0),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(n,r){if(this[n]===r)return this;for(let e=0,t=this.children.length;e<t;e++){var i=this.children[e].getObjectByProperty(n,r);if(void 0!==i)return i}},getWorldPosition:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new Re),this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new f),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Nt,e,Bt),e},getWorldScale:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new Re),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Nt,Ht,e),e},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new Re),this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(n){n(this);var r=this.children;for(let e=0,t=r.length;e<t;e++)r[e].traverse(n)},traverseVisible:function(n){if(!1!==this.visible){n(this);var r=this.children;for(let e=0,t=r.length;e<t;e++)r[e].traverseVisible(n)}},traverseAncestors:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(n){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||n)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),n=!(this.matrixWorldNeedsUpdate=!1));var r=this.children;for(let e=0,t=r.length;e<t;e++)r[e].updateMatrixWorld(n)},updateWorldMatrix:function(n,e){var t=this.parent;if(!0===n&&null!==t&&t.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const n=this.children;for(let e=0,t=n.length;e<t;e++)n[e].updateWorldMatrix(!1,!0)}},toJSON:function(n){const r=void 0===n||"string"==typeof n,i={},a=(r&&(n={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"}),{});function s(e,t){return void 0===e[t.uuid]&&(e[t.uuid]=t.toJSON(n)),t.uuid}if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),!1===this.frustumCulled&&(a.frustumCulled=!1),0!==this.renderOrder&&(a.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),a.layers=this.layers.mask,a.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(a.matrixAutoUpdate=!1),this.isInstancedMesh&&(a.type="InstancedMesh",a.count=this.count,a.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor)&&(a.instanceColor=this.instanceColor.toJSON()),this.isMesh||this.isLine||this.isPoints){a.geometry=s(n.geometries,this.geometry);const r=this.geometry.parameters;if(void 0!==r&&void 0!==r.shapes){const i=r.shapes;if(Array.isArray(i))for(let e=0,t=i.length;e<t;e++){const a=i[e];s(n.shapes,a)}else s(n.shapes,i)}}if(this.isSkinnedMesh&&(a.bindMode=this.bindMode,a.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton)&&(s(n.skeletons,this.skeleton),a.skeleton=this.skeleton.uuid),void 0!==this.material)if(Array.isArray(this.material)){const r=[];for(let e=0,t=this.material.length;e<t;e++)r.push(s(n.materials,this.material[e]));a.material=r}else a.material=s(n.materials,this.material);if(0<this.children.length){a.children=[];for(let e=0;e<this.children.length;e++)a.children.push(this.children[e].toJSON(n).object)}if(0<this.animations.length){a.animations=[];for(let e=0;e<this.animations.length;e++){const i=this.animations[e];a.animations.push(s(n.animations,i))}}if(r){const r=e(n.geometries),a=e(n.materials),s=e(n.textures),t=e(n.images),o=e(n.shapes),l=e(n.skeletons),c=e(n.animations);0<r.length&&(i.geometries=r),0<a.length&&(i.materials=a),0<s.length&&(i.textures=s),0<t.length&&(i.images=t),0<o.length&&(i.shapes=o),0<l.length&&(i.skeletons=l),0<c.length&&(i.animations=c)}return i.object=a,i;function e(e){var t=[];for(const r in e){var n=e[r];delete n.metadata,t.push(n)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){var n=t.children[e];this.add(n.clone())}return this}});const kt=new Re,Vt=new Re,Wt=new v;class jt{constructor(e=new Re(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){n=kt.subVectors(n,t).cross(Vt.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new Re),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){void 0===t&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new Re);var n=e.delta(kt),r=this.normal.dot(n);return 0===r?0===this.distanceToPoint(e.start)?t.copy(e.start):null:(r=-(e.start.dot(this.normal)+this.constant)/r)<0||1<r?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){var t=this.distanceToPoint(e.start),e=this.distanceToPoint(e.end);return t<0&&0<e||e<0&&0<t}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new Re),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){t=t||Wt.getNormalMatrix(e),e=this.coplanarPoint(kt).applyMatrix4(e),t=this.normal.applyMatrix3(t).normalize();return this.constant=-e.dot(t),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}jt.prototype.isPlane=!0;const qt=new Re,Xt=new Re,Yt=new Re,Zt=new Re,Jt=new Re,Qt=new Re,Kt=new Re,$t=new Re,en=new Re,tn=new Re;class p{constructor(e=new Re,t=new Re,n=new Re){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){void 0===r&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new Re),r.subVectors(n,t),qt.subVectors(e,t),r.cross(qt);n=r.lengthSq();return 0<n?r.multiplyScalar(1/Math.sqrt(n)):r.set(0,0,0)}static getBarycoord(e,t,n,r,i){qt.subVectors(r,t),Xt.subVectors(n,t),Yt.subVectors(e,t);var r=qt.dot(qt),n=qt.dot(Xt),e=qt.dot(Yt),t=Xt.dot(Xt),a=Xt.dot(Yt),s=r*t-n*n;return void 0===i&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new Re),0==s?i.set(-2,-1,-1):i.set(1-(t=(t*e-n*a)*(i=1/s))-(s=(r*a-n*e)*i),s,t)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,Zt),0<=Zt.x&&0<=Zt.y&&Zt.x+Zt.y<=1}static getUV(e,t,n,r,i,a,s,o){return this.getBarycoord(e,t,n,r,Zt),o.set(0,0),o.addScaledVector(i,Zt.x),o.addScaledVector(a,Zt.y),o.addScaledVector(s,Zt.z),o}static isFrontFacing(e,t,n,r){return qt.subVectors(n,t),Xt.subVectors(e,t),qt.cross(Xt).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return qt.subVectors(this.c,this.b),Xt.subVectors(this.a,this.b),.5*qt.cross(Xt).length()}getMidpoint(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new Re),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return p.getNormal(this.a,this.b,this.c,e)}getPlane(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new jt),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return p.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,i){return p.getUV(e,this.a,this.b,this.c,t,n,r,i)}containsPoint(e){return p.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return p.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new Re);var n=this.a,r=this.b,i=this.c;let a,s;Jt.subVectors(r,n),Qt.subVectors(i,n),$t.subVectors(e,n);var o=Jt.dot($t),l=Qt.dot($t);if(o<=0&&l<=0)return t.copy(n);en.subVectors(e,r);var c=Jt.dot(en),h=Qt.dot(en);if(0<=c&&h<=c)return t.copy(r);var u=o*h-c*l;if(u<=0&&0<=o&&c<=0)return a=o/(o-c),t.copy(n).addScaledVector(Jt,a);tn.subVectors(e,i);var e=Jt.dot(tn),d=Qt.dot(tn);return 0<=d&&e<=d?t.copy(i):(o=e*l-o*d)<=0&&0<=l&&d<=0?(s=l/(l-d),t.copy(n).addScaledVector(Qt,s)):(l=c*d-e*h)<=0&&0<=h-c&&0<=e-d?(Kt.subVectors(i,r),s=(h-c)/(h-c+(e-d)),t.copy(r).addScaledVector(Kt,s)):(i=1/(l+o+u),a=o*i,s=u*i,t.copy(n).addScaledVector(Jt,a).addScaledVector(Qt,s))}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let nn=0;function a(){Object.defineProperty(this,"id",{value:nn++}),this.uuid=Ee.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=V,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}a.prototype=Object.assign(Object.create(Me.prototype),{constructor:a,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(void 0!==e)for(const r in e){var t,n=e[r];void 0===n?console.warn("THREE.Material: '"+r+"' parameter is undefined."):"shading"===r?(console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n):void 0!==(t=this[r])?t&&t.isColor?t.set(n):t&&t.isVector3&&n&&n.isVector3?t.copy(n):this[r]=n:console.warn("THREE."+this.type+": '"+r+"' is not a property of this material.")}},toJSON:function(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(e){var t=[];for(const r in e){var n=e[r];delete n.metadata,t.push(n)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity)&&(n.envMapIntensity=this.envMapIntensity),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),0<this.alphaTest&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),1<this.wireframeLinewidth&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){const t=r(e.textures),i=r(e.images);0<t.length&&(n.textures=t),0<i.length&&(n.images=i)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;var n=t.clippingPlanes;let r=null;if(null!==n){const t=n.length;r=new Array(t);for(let e=0;e!==t;++e)r[e]=n[e].clone()}return this.clippingPlanes=r,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(a.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}});const rn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},an={h:0,s:0,l:0},sn={h:0,s:0,l:0};function on(e,t,n){return n<0&&(n+=1),1<n&&--n,n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function ln(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function cn(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class Ce{constructor(e,t,n){return void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){return e=Ee.euclideanModulo(e,1),t=Ee.clamp(t,0,1),n=Ee.clamp(n,0,1),0===t?this.r=this.g=this.b=n:(this.r=on(t=2*n-(n=n<=.5?n*(1+t):n+t-n*t),n,e+1/3),this.g=on(t,n,e),this.b=on(t,n,e-1/3)),this}setStyle(t){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let e;var i=r[1],a=r[2];switch(i){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,n(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,n(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const r=parseFloat(e[1])/360,s=parseInt(e[2],10)/100,o=parseInt(e[3],10)/100;return n(e[4]),this.setHSL(r,s,o)}}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=r[1],n=t.length;if(3===n)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===n)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&0<t.length?this.setColorName(t):this}setColorName(e){var t=rn[e];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){t=0<t?1/t:1;return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=ln(e.r),this.g=ln(e.g),this.b=ln(e.b),this}copyLinearToSRGB(e){return this.r=cn(e.r),this.g=cn(e.g),this.b=cn(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});var t=this.r,n=this.g,r=this.b,i=Math.max(t,n,r),a=Math.min(t,n,r);let s,o;var l=(a+i)/2;if(a===i)s=0,o=0;else{const e=i-a;switch(o=l<=.5?e/(i+a):e/(2-i-a),i){case t:s=(n-r)/e+(n<r?6:0);break;case n:s=(r-t)/e+2;break;case r:s=(t-n)/e+4}s/=6}return e.h=s,e.s=o,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,n){return this.getHSL(an),an.h+=e,an.s+=t,an.l+=n,this.setHSL(an.h,an.s,an.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(an),e.getHSL(sn);var e=Ee.lerp(an.h,sn.h,t),n=Ee.lerp(an.s,sn.s,t),t=Ee.lerp(an.l,sn.l,t);return this.setHSL(e,n,t),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Ce.NAMES=rn,Ce.prototype.isColor=!0,Ce.prototype.r=1,Ce.prototype.g=1,Ce.prototype.b=1;class hn extends a{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new Ce(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this}}hn.prototype.isMeshBasicMaterial=!0;const r=new Re,un=new Se;function E(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=_e,this.updateRange={offset:0,count:-1},this.version=0}function dn(e,t,n){E.call(this,new Int8Array(e),t,n)}function pn(e,t,n){E.call(this,new Uint8Array(e),t,n)}function fn(e,t,n){E.call(this,new Uint8ClampedArray(e),t,n)}function mn(e,t,n){E.call(this,new Int16Array(e),t,n)}function gn(e,t,n){E.call(this,new Uint16Array(e),t,n)}function vn(e,t,n){E.call(this,new Int32Array(e),t,n)}function yn(e,t,n){E.call(this,new Uint32Array(e),t,n)}function xn(e,t,n){E.call(this,new Uint16Array(e),t,n)}function k(e,t,n){E.call(this,new Float32Array(e),t,n)}function _n(e,t,n){E.call(this,new Float64Array(e),t,n)}function bn(n){if(0===n.length)return-1/0;let r=n[0];for(let e=1,t=n.length;e<t;++e)n[e]>r&&(r=n[e]);return r}Object.defineProperty(E.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(E.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(n,r,i){n*=this.itemSize,i*=r.itemSize;for(let e=0,t=this.itemSize;e<t;e++)this.array[n+e]=r.array[i+e];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(n){var r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",t),e=new Ce),r[i++]=e.r,r[i++]=e.g,r[i++]=e.b}return this},copyVector2sArray:function(n){var r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",t),e=new Se),r[i++]=e.x,r[i++]=e.y}return this},copyVector3sArray:function(n){var r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",t),e=new Re),r[i++]=e.x,r[i++]=e.y,r[i++]=e.z}return this},copyVector4sArray:function(n){var r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",t),e=new Ae),r[i++]=e.x,r[i++]=e.y,r[i++]=e.z,r[i++]=e.w}return this},applyMatrix3:function(n){if(2===this.itemSize)for(let e=0,t=this.count;e<t;e++)un.fromBufferAttribute(this,e),un.applyMatrix3(n),this.setXY(e,un.x,un.y);else if(3===this.itemSize)for(let e=0,t=this.count;e<t;e++)r.fromBufferAttribute(this,e),r.applyMatrix3(n),this.setXYZ(e,r.x,r.y,r.z);return this},applyMatrix4:function(n){for(let e=0,t=this.count;e<t;e++)r.x=this.getX(e),r.y=this.getY(e),r.z=this.getZ(e),r.applyMatrix4(n),this.setXYZ(e,r.x,r.y,r.z);return this},applyNormalMatrix:function(n){for(let e=0,t=this.count;e<t;e++)r.x=this.getX(e),r.y=this.getY(e),r.z=this.getZ(e),r.applyNormalMatrix(n),this.setXYZ(e,r.x,r.y,r.z);return this},transformDirection:function(n){for(let e=0,t=this.count;e<t;e++)r.x=this.getX(e),r.y=this.getY(e),r.z=this.getZ(e),r.transformDirection(n),this.setXYZ(e,r.x,r.y,r.z);return this},set:function(e,t=0){return this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){var e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==_e&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}),(dn.prototype=Object.create(E.prototype)).constructor=dn,(pn.prototype=Object.create(E.prototype)).constructor=pn,(fn.prototype=Object.create(E.prototype)).constructor=fn,(mn.prototype=Object.create(E.prototype)).constructor=mn,gn.prototype=Object.create(E.prototype),gn.prototype.constructor=gn,(vn.prototype=Object.create(E.prototype)).constructor=vn,yn.prototype=Object.create(E.prototype),yn.prototype.constructor=yn,((xn.prototype=Object.create(E.prototype)).constructor=xn).prototype.isFloat16BufferAttribute=!0,(k.prototype=Object.create(E.prototype)).constructor=k,(_n.prototype=Object.create(E.prototype)).constructor=_n;const wn={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Mn(e,t){return new wn[e](t)}let Tn=0;const En=new Le,Sn=new c,An=new Re,Rn=new We,Ln=new We,u=new Re;function S(){Object.defineProperty(this,"id",{value:Tn++}),this.uuid=Ee.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}S.prototype=Object.assign(Object.create(Me.prototype),{constructor:S,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){return Array.isArray(e)?this.index=new(65535<bn(e)?yn:gn)(e,1):this.index=e,this},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},hasAttribute:function(e){return void 0!==this.attributes[e]},addGroup:function(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);var n=this.attributes.normal;if(void 0!==n){const t=(new v).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(e),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(e){return En.makeRotationX(e),this.applyMatrix4(En),this},rotateY:function(e){return En.makeRotationY(e),this.applyMatrix4(En),this},rotateZ:function(e){return En.makeRotationZ(e),this.applyMatrix4(En),this},translate:function(e,t,n){return En.makeTranslation(e,t,n),this.applyMatrix4(En),this},scale:function(e,t,n){return En.makeScale(e,t,n),this.applyMatrix4(En),this},lookAt:function(e){return Sn.lookAt(e),Sn.updateMatrix(),this.applyMatrix4(Sn.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(An).negate(),this.translate(An.x,An.y,An.z),this},setFromPoints:function(n){var r=[];for(let e=0,t=n.length;e<t;e++){var i=n[e];r.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new k(r,3)),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new We);var e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new Re(-1/0,-1/0,-1/0),new Re(1/0,1/0,1/0));else{if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),n)for(let e=0,t=n.length;e<t;e++){var r=n[e];Rn.setFromBufferAttribute(r),this.morphTargetsRelative?(u.addVectors(this.boundingBox.min,Rn.min),this.boundingBox.expandByPoint(u),u.addVectors(this.boundingBox.max,Rn.max),this.boundingBox.expandByPoint(u)):(this.boundingBox.expandByPoint(Rn.min),this.boundingBox.expandByPoint(Rn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new ct);var r=this.attributes.position,i=this.morphAttributes.position;if(r&&r.isGLBufferAttribute)console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new Re,1/0);else if(r){var a=this.boundingSphere.center;if(Rn.setFromBufferAttribute(r),i)for(let e=0,t=i.length;e<t;e++){var s=i[e];Ln.setFromBufferAttribute(s),this.morphTargetsRelative?(u.addVectors(Rn.min,Ln.min),Rn.expandByPoint(u),u.addVectors(Rn.max,Ln.max),Rn.expandByPoint(u)):(Rn.expandByPoint(Ln.min),Rn.expandByPoint(Ln.max))}Rn.getCenter(a);let n=0;for(let e=0,t=r.count;e<t;e++)u.fromBufferAttribute(r,e),n=Math.max(n,a.distanceToSquared(u));if(i)for(let e=0,t=i.length;e<t;e++){var o=i[e],l=this.morphTargetsRelative;for(let e=0,t=o.count;e<t;e++)u.fromBufferAttribute(o,e),l&&(An.fromBufferAttribute(r,e),u.add(An)),n=Math.max(n,a.distanceToSquared(u))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeTangents:function(){const e=this.index,r=this.attributes;if(null===e||void 0===r.position||void 0===r.normal||void 0===r.uv)console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");else{const s=e.array,o=r.position.array,l=r.normal.array,c=r.uv.array,t=o.length/3,h=(void 0===r.tangent&&this.setAttribute("tangent",new E(new Float32Array(4*t),4)),r.tangent.array),u=[],d=[];for(let e=0;e<t;e++)u[e]=new Re,d[e]=new Re;const p=new Re,f=new Re,m=new Re,g=new Se,v=new Se,y=new Se,x=new Re,_=new Re;let n=this.groups;for(let e=0,t=(n=0===n.length?[{start:0,count:s.length}]:n).length;e<t;++e){const r=n[e],o=r.start;for(let e=o,t=o+r.count;e<t;e+=3)i(s[e+0],s[e+1],s[e+2])}const b=new Re,w=new Re,M=new Re,T=new Re;for(let e=0,t=n.length;e<t;++e){const r=n[e],o=r.start;for(let e=o,t=o+r.count;e<t;e+=3)a(s[e+0]),a(s[e+1]),a(s[e+2])}function i(e,t,n){p.fromArray(o,3*e),f.fromArray(o,3*t),m.fromArray(o,3*n),g.fromArray(c,2*e),v.fromArray(c,2*t),y.fromArray(c,2*n),f.sub(p),m.sub(p),v.sub(g),y.sub(g);var r=1/(v.x*y.y-y.x*v.y);isFinite(r)&&(x.copy(f).multiplyScalar(y.y).addScaledVector(m,-v.y).multiplyScalar(r),_.copy(m).multiplyScalar(v.x).addScaledVector(f,-y.x).multiplyScalar(r),u[e].add(x),u[t].add(x),u[n].add(x),d[e].add(_),d[t].add(_),d[n].add(_))}function a(e){M.fromArray(l,3*e),T.copy(M);var t=u[e],t=(b.copy(t),b.sub(M.multiplyScalar(M.dot(t))).normalize(),w.crossVectors(T,t),w.dot(d[e])<0?-1:1);h[4*e]=b.x,h[4*e+1]=b.y,h[4*e+2]=b.z,h[4*e+3]=t}}},computeVertexNormals:function(){var r=this.index,i=this.getAttribute("position");if(void 0!==i){let n=this.getAttribute("normal");if(void 0===n)n=new E(new Float32Array(3*i.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);var a=new Re,s=new Re,o=new Re,l=new Re,c=new Re,h=new Re,u=new Re,d=new Re;if(r)for(let e=0,t=r.count;e<t;e+=3){var p=r.getX(e+0),f=r.getX(e+1),m=r.getX(e+2);a.fromBufferAttribute(i,p),s.fromBufferAttribute(i,f),o.fromBufferAttribute(i,m),u.subVectors(o,s),d.subVectors(a,s),u.cross(d),l.fromBufferAttribute(n,p),c.fromBufferAttribute(n,f),h.fromBufferAttribute(n,m),l.add(u),c.add(u),h.add(u),n.setXYZ(p,l.x,l.y,l.z),n.setXYZ(f,c.x,c.y,c.z),n.setXYZ(m,h.x,h.y,h.z)}else for(let e=0,t=i.count;e<t;e+=3)a.fromBufferAttribute(i,e+0),s.fromBufferAttribute(i,e+1),o.fromBufferAttribute(i,e+2),u.subVectors(o,s),d.subVectors(a,s),u.cross(d),n.setXYZ(e+0,u.x,u.y,u.z),n.setXYZ(e+1,u.x,u.y,u.z),n.setXYZ(e+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(e,t){if(e&&e.isBufferGeometry){void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var n=this.attributes;for(const o in n)if(void 0!==e.attributes[o]){var r=n[o].array,i=e.attributes[o],a=i.array,i=i.itemSize*t,s=Math.min(a.length,r.length-i);for(let e=0,t=i;e<s;e++,t++)r[t]=a[e]}return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e)},normalizeNormals:function(){var n=this.attributes.normal;for(let e=0,t=n.count;e<t;e++)u.fromBufferAttribute(n,e),u.normalize(),n.setXYZ(e,u.x,u.y,u.z)},toNonIndexed:function(){function n(e,n){var r=e.array,i=e.itemSize,e=e.normalized,a=new r.constructor(n.length*i);let s=0,o=0;for(let e=0,t=n.length;e<t;e++){s=n[e]*i;for(let e=0;e<i;e++)a[o++]=r[s++]}return new E(a,i,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const r=new S,i=this.index.array,a=this.attributes;for(const e in a){const s=n(a[e],i);r.setAttribute(e,s)}const e=this.morphAttributes;for(const a in e){const s=[],o=e[a];for(let e=0,t=o.length;e<t;e++){const a=n(o[e],i);s.push(a)}r.morphAttributes[a]=s}r.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let e=0,t=s.length;e<t;e++){const i=s[e];r.addGroup(i.start,i.count,i.materialIndex)}return r},toJSON:function(){var n={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),0<Object.keys(this.userData).length&&(n.userData=this.userData),void 0!==this.parameters){const r=this.parameters;for(const i in r)void 0!==r[i]&&(n[i]=r[i])}else{n.data={attributes:{}};const r=this.index,i=(null!==r&&(n.data.index={type:r.array.constructor.name,array:Array.prototype.slice.call(r.array)}),this.attributes);for(const r in i){const a=i[r];n.data.attributes[r]=a.toJSON(n.data)}const a={};let e=!1;for(const r in this.morphAttributes){const i=this.morphAttributes[r],s=[];for(let e=0,t=i.length;e<t;e++){const a=i[e];s.push(a.toJSON(n.data))}0<s.length&&(a[r]=s,e=!0)}e&&(n.data.morphAttributes=a,n.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;0<s.length&&(n.data.groups=JSON.parse(JSON.stringify(s)));var t=this.boundingSphere;null!==t&&(n.data.boundingSphere={center:t.center.toArray(),radius:t.radius})}return n},clone:function(){return(new S).copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const n={},r=(this.name=e.name,e.index),i=(null!==r&&this.setIndex(r.clone(n)),e.attributes);for(const e in i){const r=i[e];this.setAttribute(e,r.clone(n))}var t=e.morphAttributes;for(const e in t){const r=[],i=t[e];for(let e=0,t=i.length;e<t;e++)r.push(i[e].clone(n));this.morphAttributes[e]=r}this.morphTargetsRelative=e.morphTargetsRelative;var a=e.groups;for(let e=0,t=a.length;e<t;e++){const n=a[e];this.addGroup(n.start,n.count,n.materialIndex)}var s=e.boundingBox,s=(null!==s&&(this.boundingBox=s.clone()),e.boundingSphere);return null!==s&&(this.boundingSphere=s.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Cn=new Le,Pn=new vt,Dn=new ct,In=new Re,Nn=new Re,Bn=new Re,Hn=new Re,Un=new Re,On=new Re,zn=new Re,Fn=new Re,Gn=new Re,kn=new Se,Vn=new Se,Wn=new Se,jn=new Re,qn=new Re;function A(e=new S,t=new hn){c.call(this),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}function Xn(e,n,r,t,i,a,s,o,l,c,h,u){In.fromBufferAttribute(i,c),Nn.fromBufferAttribute(i,h),Bn.fromBufferAttribute(i,u);var d=e.morphTargetInfluences;if(n.morphTargets&&a&&d){zn.set(0,0,0),Fn.set(0,0,0),Gn.set(0,0,0);for(let e=0,t=a.length;e<t;e++){const n=d[e],r=a[e];0!==n&&(Hn.fromBufferAttribute(r,c),Un.fromBufferAttribute(r,h),On.fromBufferAttribute(r,u),s?(zn.addScaledVector(Hn,n),Fn.addScaledVector(Un,n),Gn.addScaledVector(On,n)):(zn.addScaledVector(Hn.sub(In),n),Fn.addScaledVector(Un.sub(Nn),n),Gn.addScaledVector(On.sub(Bn),n)))}In.add(zn),Nn.add(Fn),Bn.add(Gn)}e.isSkinnedMesh&&n.skinning&&(e.boneTransform(c,In),e.boneTransform(h,Nn),e.boneTransform(u,Bn));i=function(e,t,n,r,i,a,s,o){if(null===(1===t.side?r.intersectTriangle(s,a,i,!0,o):r.intersectTriangle(i,a,s,2!==t.side,o)))return null;qn.copy(o),qn.applyMatrix4(e.matrixWorld);r=n.ray.origin.distanceTo(qn);return r<n.near||r>n.far?null:{distance:r,point:qn.clone(),object:e}}(e,n,r,t,In,Nn,Bn,jn);if(i){o&&(kn.fromBufferAttribute(o,c),Vn.fromBufferAttribute(o,h),Wn.fromBufferAttribute(o,u),i.uv=p.getUV(jn,In,Nn,Bn,kn,Vn,Wn,new Se)),l&&(kn.fromBufferAttribute(l,c),Vn.fromBufferAttribute(l,h),Wn.fromBufferAttribute(l,u),i.uv2=p.getUV(jn,In,Nn,Bn,kn,Vn,Wn,new Se));const e={a:c,b:h,c:u,normal:new Re,materialIndex:0};p.getNormal(In,Nn,Bn,e.normal),i.face=e}return i}A.prototype=Object.assign(Object.create(c.prototype),{constructor:A,isMesh:!0,copy:function(e){return c.prototype.copy.call(this,e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this},updateMorphTargets:function(){const n=this.geometry;if(n.isBufferGeometry){var e=n.morphAttributes,t=Object.keys(e);if(0<t.length){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){var r=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=e}}}}else{e=n.morphTargets;void 0!==e&&0<e.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(r,i){const e=this.geometry,a=this.material,s=this.matrixWorld;if(void 0!==a&&(null===e.boundingSphere&&e.computeBoundingSphere(),Dn.copy(e.boundingSphere),Dn.applyMatrix4(s),!1!==r.ray.intersectsSphere(Dn))&&(Cn.copy(s).invert(),Pn.copy(r.ray).applyMatrix4(Cn),null===e.boundingBox||!1!==Pn.intersectsBox(e.boundingBox))){let n;if(e.isBufferGeometry){const s=e.index,d=e.attributes.position,p=e.morphAttributes.position,f=e.morphTargetsRelative,m=e.attributes.uv,g=e.attributes.uv2,v=e.groups,y=e.drawRange;if(null!==s)if(Array.isArray(a))for(let e=0,t=v.length;e<t;e++){var o=v[e],l=a[o.materialIndex];for(let e=Math.max(o.start,y.start),t=Math.min(o.start+o.count,y.start+y.count);e<t;e+=3){const a=s.getX(e),x=s.getX(e+1),_=s.getX(e+2);(n=Xn(this,l,r,Pn,d,p,f,m,g,a,x,_))&&(n.faceIndex=Math.floor(e/3),n.face.materialIndex=o.materialIndex,i.push(n))}}else for(let e=Math.max(0,y.start),t=Math.min(s.count,y.start+y.count);e<t;e+=3){var c=s.getX(e),h=s.getX(e+1),u=s.getX(e+2);(n=Xn(this,a,r,Pn,d,p,f,m,g,c,h,u))&&(n.faceIndex=Math.floor(e/3),i.push(n))}else if(void 0!==d)if(Array.isArray(a))for(let e=0,t=v.length;e<t;e++){const s=v[e],b=a[s.materialIndex];for(let e=Math.max(s.start,y.start),t=Math.min(s.start+s.count,y.start+y.count);e<t;e+=3)(n=Xn(this,b,r,Pn,d,p,f,m,g,e,e+1,e+2))&&(n.faceIndex=Math.floor(e/3),n.face.materialIndex=s.materialIndex,i.push(n))}else for(let e=Math.max(0,y.start),t=Math.min(d.count,y.start+y.count);e<t;e+=3)(n=Xn(this,a,r,Pn,d,p,f,m,g,e,e+1,e+2))&&(n.faceIndex=Math.floor(e/3),i.push(n))}else e.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}});class Yn extends S{constructor(e=1,t=1,n=1,r=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:a};const b=this,w=(r=Math.floor(r),i=Math.floor(i),a=Math.floor(a),[]),M=[],T=[],E=[];let S=0,A=0;function s(n,r,i,a,s,o,e,l,c,h,t){var u=o/c,d=e/h,p=o/2,f=e/2,m=l/2,g=c+1,v=h+1;let y=0,x=0;var _=new Re;for(let t=0;t<v;t++){const b=t*d-f;for(let e=0;e<g;e++){const S=e*u-p;_[n]=S*a,_[r]=b*s,_[i]=m,M.push(_.x,_.y,_.z),_[n]=0,_[r]=0,_[i]=0<l?1:-1,T.push(_.x,_.y,_.z),E.push(e/c),E.push(1-t/h),y+=1}}for(let t=0;t<h;t++)for(let e=0;e<c;e++){const i=S+e+g*t,a=S+e+g*(t+1),s=S+(e+1)+g*(t+1),o=S+(e+1)+g*t;w.push(i,a,o),w.push(a,s,o),x+=6}b.addGroup(A,x,t),A+=x,S+=y}s("z","y","x",-1,-1,n,t,e,a,i,0),s("z","y","x",1,-1,n,t,-e,a,i,1),s("x","z","y",1,1,e,n,t,r,a,2),s("x","z","y",1,-1,e,n,-t,r,a,3),s("x","y","z",1,-1,e,t,n,r,i,4),s("x","y","z",-1,-1,e,t,-n,r,i,5),this.setIndex(w),this.setAttribute("position",new k(M,3)),this.setAttribute("normal",new k(T,3)),this.setAttribute("uv",new k(E,2))}}function Zn(e){var t={};for(const r in e){t[r]={};for(const i in e[r]){var n=e[r][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?t[r][i]=n.clone():Array.isArray(n)?t[r][i]=n.slice():t[r][i]=n}}return t}function t(t){var n={};for(let e=0;e<t.length;e++){var r=Zn(t[e]);for(const t in r)n[t]=r[t]}return n}const Jn={clone:Zn,merge:t};function Qn(e){a.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}function Kn(){c.call(this),this.type="Camera",this.matrixWorldInverse=new Le,this.projectionMatrix=new Le,this.projectionMatrixInverse=new Le}function R(e=50,t=1,n=.1,r=2e3){Kn.call(this),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}((Qn.prototype=Object.create(a.prototype)).constructor=Qn).prototype.isShaderMaterial=!0,Qn.prototype.copy=function(e){return a.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Zn(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this},Qn.prototype.toJSON=function(e){var t=a.prototype.toJSON.call(this,e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){var n=this.uniforms[r].value;n&&n.isTexture?t.uniforms[r]={type:"t",value:n.toJSON(e).uuid}:n&&n.isColor?t.uniforms[r]={type:"c",value:n.getHex()}:n&&n.isVector2?t.uniforms[r]={type:"v2",value:n.toArray()}:n&&n.isVector3?t.uniforms[r]={type:"v3",value:n.toArray()}:n&&n.isVector4?t.uniforms[r]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?t.uniforms[r]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?t.uniforms[r]={type:"m4",value:n.toArray()}:t.uniforms[r]={value:n}}0<Object.keys(this.defines).length&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const r={};for(const e in this.extensions)!0===this.extensions[e]&&(r[e]=!0);return 0<Object.keys(r).length&&(t.extensions=r),t},Kn.prototype=Object.assign(Object.create(c.prototype),{constructor:Kn,isCamera:!0,copy:function(e,t){return c.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new Re),this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){c.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(e,t){c.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),R.prototype=Object.assign(Object.create(Kn.prototype),{constructor:R,isPerspectiveCamera:!0,copy:function(e,t){return Kn.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){e=.5*this.getFilmHeight()/e;this.fov=2*Ee.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){var e=Math.tan(.5*Ee.DEG2RAD*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*Ee.RAD2DEG*Math.atan(Math.tan(.5*Ee.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,r,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=this.near;let t=e*Math.tan(.5*Ee.DEG2RAD*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r;var a=this.view;if(null!==this.view&&this.view.enabled){const e=a.fullWidth,s=a.fullHeight;i+=a.offsetX*r/e,t-=a.offsetY*n/s,r*=a.width/e,n*=a.height/s}const s=this.filmOffset;0!==s&&(i+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(e){e=c.prototype.toJSON.call(this,e);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});class $n extends c{constructor(e,t,n){super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget?console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter."):(this.renderTarget=n,(n=new R(90,1,e,t)).layers=this.layers,n.up.set(0,-1,0),n.lookAt(new Re(1,0,0)),this.add(n),(n=new R(90,1,e,t)).layers=this.layers,n.up.set(0,-1,0),n.lookAt(new Re(-1,0,0)),this.add(n),(n=new R(90,1,e,t)).layers=this.layers,n.up.set(0,0,1),n.lookAt(new Re(0,1,0)),this.add(n),(n=new R(90,1,e,t)).layers=this.layers,n.up.set(0,0,-1),n.lookAt(new Re(0,-1,0)),this.add(n),(n=new R(90,1,e,t)).layers=this.layers,n.up.set(0,-1,0),n.lookAt(new Re(0,0,1)),this.add(n),(n=new R(90,1,e,t)).layers=this.layers,n.up.set(0,-1,0),n.lookAt(new Re(0,0,-1)),this.add(n))}update(e,t){null===this.parent&&this.updateMatrixWorld();var n=this.renderTarget,[r,i,a,s,o,l]=this.children,c=e.xr.enabled,h=e.getRenderTarget(),u=(e.xr.enabled=!1,n.texture.generateMipmaps);n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,i),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,o),n.texture.generateMipmaps=u,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(h),e.xr.enabled=c}}class er extends h{constructor(e,t,n,r,i,a,s,o,l,c){super(e=void 0!==e?e:[],t=void 0!==t?t:L,n,r,i,a,s=void 0!==s?s:K,o,l,c),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}er.prototype.isCubeTexture=!0;class tr extends Fe{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),super(e,e,t),t=t||{},this.texture=new er(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:z,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=Ne,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={tEquirect:{value:null}},r="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",i="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",a=new Yn(5,5,5),s=new Qn({name:"CubemapFromEquirect",uniforms:Zn(n),vertexShader:r,fragmentShader:i,side:1,blending:0});s.uniforms.tEquirect.value=t;var o=new A(a,s),l=t.minFilter;return t.minFilter===Y&&(t.minFilter=z),new $n(1,10,this).update(e,o),t.minFilter=l,o.geometry.dispose(),o.material.dispose(),this}clear(t,n,r,i){var e=t.getRenderTarget();for(let e=0;e<6;e++)t.setRenderTarget(this,e),t.clear(n,r,i);t.setRenderTarget(e)}}tr.prototype.isWebGLCubeRenderTarget=!0;class nr extends h{constructor(e,t,n,r,i,a,s,o,l,c,h,u){super(null,a,s,o,l,c,r,i,h,u),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=void 0!==l?l:O,this.minFilter=void 0!==c?c:O,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}nr.prototype.isDataTexture=!0;const rr=new ct,ir=new Re;class ar{constructor(e=new jt,t=new jt,n=new jt,r=new jt,i=new jt,a=new jt){this.planes=[e,t,n,r,i,a]}set(e,t,n,r,i,a){var s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(r),s[4].copy(i),s[5].copy(a),this}copy(t){var n=this.planes;for(let e=0;e<6;e++)n[e].copy(t.planes[e]);return this}setFromProjectionMatrix(e){var t=this.planes,e=e.elements,n=e[0],r=e[1],i=e[2],a=e[3],s=e[4],o=e[5],l=e[6],c=e[7],h=e[8],u=e[9],d=e[10],p=e[11],f=e[12],m=e[13],g=e[14],e=e[15];return t[0].setComponents(a-n,c-s,p-h,e-f).normalize(),t[1].setComponents(a+n,c+s,p+h,e+f).normalize(),t[2].setComponents(a+r,c+o,p+u,e+m).normalize(),t[3].setComponents(a-r,c-o,p-u,e-m).normalize(),t[4].setComponents(a-i,c-l,p-d,e-g).normalize(),t[5].setComponents(a+i,c+l,p+d,e+g).normalize(),this}intersectsObject(e){var t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),rr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(rr)}intersectsSprite(e){return rr.center.set(0,0,0),rr.radius=.7071067811865476,rr.applyMatrix4(e.matrixWorld),this.intersectsSphere(rr)}intersectsSphere(e){var t=this.planes,n=e.center,r=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<r)return!1;return!0}intersectsBox(t){var n=this.planes;for(let e=0;e<6;e++){var r=n[e];if(ir.x=(0<r.normal.x?t.max:t.min).x,ir.y=(0<r.normal.y?t.max:t.min).y,ir.z=(0<r.normal.z?t.max:t.min).z,r.distanceToPoint(ir)<0)return!1}return!0}containsPoint(t){var n=this.planes;for(let e=0;e<6;e++)if(n[e].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function sr(){let n=null,e=!1,r=null,i=null;function a(e,t){r(e,t),i=n.requestAnimationFrame(a)}return{start:function(){!0!==e&&null!==r&&(i=n.requestAnimationFrame(a),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(e){r=e},setContext:function(e){n=e}}}function or(s,e){const o=e.isWebGL2,l=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),l.get(e)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);var t=l.get(e);t&&(s.deleteBuffer(t.buffer),l.delete(e))},update:function(e,t){if(e.isGLBufferAttribute){const s=l.get(e);void((!s||s.version<e.version)&&l.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}else{e.isInterleavedBufferAttribute&&(e=e.data);var n,r,i,a=l.get(e);void 0===a?l.set(e,function(e,t){var n=e.array,r=e.usage,i=s.createBuffer();s.bindBuffer(t,i),s.bufferData(t,n,r),e.onUploadCallback();let a=5126;return n instanceof Float32Array?a=5126:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?e.isFloat16BufferAttribute?o?a=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):a=5123:n instanceof Int16Array?a=5122:n instanceof Uint32Array?a=5125:n instanceof Int32Array?a=5124:n instanceof Int8Array?a=5120:n instanceof Uint8Array&&(a=5121),{buffer:i,type:a,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version}}(e,t)):a.version<e.version&&(n=a.buffer,t=t,i=(r=e).array,r=r.updateRange,s.bindBuffer(t,n),-1===r.count?s.bufferSubData(t,0,i):(o?s.bufferSubData(t,r.offset*i.BYTES_PER_ELEMENT,i,r.offset,r.count):s.bufferSubData(t,r.offset*i.BYTES_PER_ELEMENT,i.subarray(r.offset,r.offset+r.count)),r.count=-1),a.version=e.version)}}}}class lr extends S{constructor(e=1,n=1,r=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:n,widthSegments:r,heightSegments:i};const a=e/2,s=n/2,o=Math.floor(r),l=Math.floor(i),c=o+1,h=l+1,u=e/o,d=n/l,p=[],f=[],m=[],g=[];for(let t=0;t<h;t++){const n=t*d-s;for(let e=0;e<c;e++){const i=e*u-a;f.push(i,-n,0),m.push(0,0,1),g.push(e/o),g.push(1-t/l)}}for(let t=0;t<l;t++)for(let e=0;e<o;e++){const r=e+c*t,i=e+c*(t+1),a=e+1+c*(t+1),s=e+1+c*t;p.push(r,i,s),p.push(i,a,s)}this.setIndex(p),this.setAttribute("position",new k(f,3)),this.setAttribute("normal",new k(m,3)),this.setAttribute("uv",new k(g,2))}}const M={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(\t\t0, 1,\t\t0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(\t1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,\t1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,\t1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},T={common:{diffuse:{value:new Ce(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new v},uv2Transform:{value:new v},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Se(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ce(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ce(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new v}},sprite:{diffuse:{value:new Ce(15658734)},opacity:{value:1},center:{value:new Se(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new v}}},cr={basic:{uniforms:t([T.common,T.specularmap,T.envmap,T.aomap,T.lightmap,T.fog]),vertexShader:M.meshbasic_vert,fragmentShader:M.meshbasic_frag},lambert:{uniforms:t([T.common,T.specularmap,T.envmap,T.aomap,T.lightmap,T.emissivemap,T.fog,T.lights,{emissive:{value:new Ce(0)}}]),vertexShader:M.meshlambert_vert,fragmentShader:M.meshlambert_frag},phong:{uniforms:t([T.common,T.specularmap,T.envmap,T.aomap,T.lightmap,T.emissivemap,T.bumpmap,T.normalmap,T.displacementmap,T.fog,T.lights,{emissive:{value:new Ce(0)},specular:{value:new Ce(1118481)},shininess:{value:30}}]),vertexShader:M.meshphong_vert,fragmentShader:M.meshphong_frag},standard:{uniforms:t([T.common,T.envmap,T.aomap,T.lightmap,T.emissivemap,T.bumpmap,T.normalmap,T.displacementmap,T.roughnessmap,T.metalnessmap,T.fog,T.lights,{emissive:{value:new Ce(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:M.meshphysical_vert,fragmentShader:M.meshphysical_frag},toon:{uniforms:t([T.common,T.aomap,T.lightmap,T.emissivemap,T.bumpmap,T.normalmap,T.displacementmap,T.gradientmap,T.fog,T.lights,{emissive:{value:new Ce(0)}}]),vertexShader:M.meshtoon_vert,fragmentShader:M.meshtoon_frag},matcap:{uniforms:t([T.common,T.bumpmap,T.normalmap,T.displacementmap,T.fog,{matcap:{value:null}}]),vertexShader:M.meshmatcap_vert,fragmentShader:M.meshmatcap_frag},points:{uniforms:t([T.points,T.fog]),vertexShader:M.points_vert,fragmentShader:M.points_frag},dashed:{uniforms:t([T.common,T.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:M.linedashed_vert,fragmentShader:M.linedashed_frag},depth:{uniforms:t([T.common,T.displacementmap]),vertexShader:M.depth_vert,fragmentShader:M.depth_frag},normal:{uniforms:t([T.common,T.bumpmap,T.normalmap,T.displacementmap,{opacity:{value:1}}]),vertexShader:M.normal_vert,fragmentShader:M.normal_frag},sprite:{uniforms:t([T.sprite,T.fog]),vertexShader:M.sprite_vert,fragmentShader:M.sprite_frag},background:{uniforms:{uvTransform:{value:new v},t2D:{value:null}},vertexShader:M.background_vert,fragmentShader:M.background_frag},cube:{uniforms:t([T.envmap,{opacity:{value:1}}]),vertexShader:M.cube_vert,fragmentShader:M.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:M.equirect_vert,fragmentShader:M.equirect_frag},distanceRGBA:{uniforms:t([T.common,T.displacementmap,{referencePosition:{value:new Re},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:M.distanceRGBA_vert,fragmentShader:M.distanceRGBA_frag},shadow:{uniforms:t([T.lights,T.fog,{color:{value:new Ce(0)},opacity:{value:1}}]),vertexShader:M.shadow_vert,fragmentShader:M.shadow_frag}};function hr(a,s,n,o,r){const l=new Ce(0);let c,h,u=0,d=null,p=0,f=null;function m(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,r)}return{getClearColor:function(){return l},setClearColor:function(e,t=1){l.set(e),u=t,m(l,u)},getClearAlpha:function(){return u},setClearAlpha:function(e){u=e,m(l,u)},render:function(e,t,n,r){let i=!0===t.isScene?t.background:null;i&&i.isTexture&&(i=s.get(i));t=a.xr,t=t.getSession&&t.getSession();null===(i=t&&"additive"===t.environmentBlendMode?null:i)?m(l,u):i&&i.isColor&&(m(i,1),r=!0),(a.autoClear||r)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),i&&(i.isCubeTexture||i.mapping===I)?(void 0===h&&((h=new A(new Yn(1,1,1),new Qn({name:"BackgroundCubeMaterial",uniforms:Zn(cr.cube.uniforms),vertexShader:cr.cube.vertexShader,fragmentShader:cr.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),o.update(h)),h.material.uniforms.envMap.value=i,h.material.uniforms.flipEnvMap.value=i.isCubeTexture&&i._needsFlipEnvMap?-1:1,d===i&&p===i.version&&f===a.toneMapping||(h.material.needsUpdate=!0,d=i,p=i.version,f=a.toneMapping),e.unshift(h,h.geometry,h.material,0,0,null)):i&&i.isTexture&&(void 0===c&&((c=new A(new lr(2,2),new Qn({name:"BackgroundMaterial",uniforms:Zn(cr.background.uniforms),vertexShader:cr.background.vertexShader,fragmentShader:cr.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),o.update(c)),!0===(c.material.uniforms.t2D.value=i).matrixAutoUpdate&&i.updateMatrix(),c.material.uniforms.uvTransform.value.copy(i.matrix),d===i&&p===i.version&&f===a.toneMapping||(c.material.needsUpdate=!0,d=i,p=i.version,f=a.toneMapping),e.unshift(c,c.geometry,c.material,0,0,null))}}}function ur(u,d,p,f){const i=u.getParameter(34921),m=f.isWebGL2?null:d.get("OES_vertex_array_object"),g=f.isWebGL2||null!==m,v={},e=_(null);let y=e;function x(e){f.isWebGL2?u.bindVertexArray(e):m.bindVertexArrayOES(e)}function a(e){f.isWebGL2?u.deleteVertexArray(e):m.deleteVertexArrayOES(e)}function _(e){var t=[],n=[],r=[];for(let e=0;e<i;e++)t[e]=0,n[e]=0,r[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function b(){var n=y.newAttributes;for(let e=0,t=n.length;e<t;e++)n[e]=0}function w(e){M(e,0)}function M(e,t){var n=y.newAttributes,r=y.enabledAttributes,i=y.attributeDivisors;n[e]=1,0===r[e]&&(u.enableVertexAttribArray(e),r[e]=1),i[e]!==t&&((f.isWebGL2?u:d.get("ANGLE_instanced_arrays"))[f.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](e,t),i[e]=t)}function T(){var n=y.newAttributes,r=y.enabledAttributes;for(let e=0,t=r.length;e<t;e++)r[e]!==n[e]&&(u.disableVertexAttribArray(e),r[e]=0)}function E(e,t,n,r,i,a){!0!==f.isWebGL2||5124!==n&&5125!==n?u.vertexAttribPointer(e,t,n,r,i,a):u.vertexAttribIPointer(e,t,n,i,a)}function s(){t(),y!==e&&x((y=e).object)}function t(){e.geometry=null,e.program=null,e.wireframe=!1}return{setup:function(e,s,t,n,r){let i=!1;if(g){const d=function(e,t){var n=!0===s.wireframe;let r=v[e.id],i=(void 0===r&&(r={},v[e.id]=r),r[t.id]),a=(void 0===i&&(i={},r[t.id]=i),i[n]);return void 0===a&&(a=_(f.isWebGL2?u.createVertexArray():m.createVertexArrayOES()),i[n]=a),a}(n,t);if(y!==d&&x((y=d).object),i=function(e,t){var n=y.attributes,r=e.attributes;let i=0;for(const e in r){const t=n[e],a=r[e];if(void 0===t)return!0;if(t.attribute!==a)return!0;if(t.data!==a.data)return!0;i++}return y.attributesNum!==i||y.index!==t}(n,r)){var a=n;var o=r;var l={},c=a.attributes;let e=0;for(const a in c){const o=c[a],h={};(h.attribute=o).data&&(h.data=o.data),l[a]=h,e++}y.attributes=l,y.attributesNum=e,y.index=o}}else{const u=!0===s.wireframe;y.geometry===n.id&&y.program===t.id&&y.wireframe===u||(y.geometry=n.id,y.program=t.id,y.wireframe=u,i=!0)}!0===e.isInstancedMesh&&(i=!0),null!==r&&p.update(r,34963),i&&(function(e,t,n,r){if(!1!==f.isWebGL2||!e.isInstancedMesh&&!r.isInstancedBufferGeometry||null!==d.get("ANGLE_instanced_arrays")){b();const i=r.attributes,a=n.getAttributes(),s=t.defaultAttributeValues;for(const d in a){const f=a[d];if(0<=f){const t=i[d];if(void 0!==t){const d=t.normalized,e=t.itemSize,n=p.get(t);if(void 0!==n){const i=n.buffer,a=n.type,s=n.bytesPerElement;if(t.isInterleavedBufferAttribute){const p=t.data,n=p.stride,o=t.offset;p&&p.isInstancedInterleavedBuffer?(M(f,p.meshPerAttribute),void 0===r._maxInstanceCount&&(r._maxInstanceCount=p.meshPerAttribute*p.count)):w(f),u.bindBuffer(34962,i),E(f,e,a,d,n*s,o*s)}else t.isInstancedBufferAttribute?(M(f,t.meshPerAttribute),void 0===r._maxInstanceCount&&(r._maxInstanceCount=t.meshPerAttribute*t.count)):w(f),u.bindBuffer(34962,i),E(f,e,a,d,0,0)}}else if("instanceMatrix"===d){const d=p.get(e.instanceMatrix);if(void 0!==d){const t=d.buffer,n=d.type;M(f+0,1),M(f+1,1),M(f+2,1),M(f+3,1),u.bindBuffer(34962,t),u.vertexAttribPointer(f+0,4,n,!1,64,0),u.vertexAttribPointer(f+1,4,n,!1,64,16),u.vertexAttribPointer(f+2,4,n,!1,64,32),u.vertexAttribPointer(f+3,4,n,!1,64,48)}}else if("instanceColor"===d){const d=p.get(e.instanceColor);if(void 0!==d){const t=d.buffer,n=d.type;M(f,1),u.bindBuffer(34962,t),u.vertexAttribPointer(f,3,n,!1,12,0)}}else if(void 0!==s){const p=s[d];if(void 0!==p)switch(p.length){case 2:u.vertexAttrib2fv(f,p);break;case 3:u.vertexAttrib3fv(f,p);break;case 4:u.vertexAttrib4fv(f,p);break;default:u.vertexAttrib1fv(f,p)}}}}T()}}(e,s,t,n),null!==r)&&u.bindBuffer(34963,p.get(r).buffer)},reset:s,resetDefaultState:t,dispose:function(){s();for(const n in v){var e=v[n];for(const r in e){var t=e[r];for(const i in t)a(t[i].object),delete t[i];delete e[r]}delete v[n]}},releaseStatesOfGeometry:function(e){if(void 0!==v[e.id]){var t=v[e.id];for(const e in t){var n=t[e];for(const e in n)a(n[e].object),delete n[e];delete t[e]}delete v[e.id]}},releaseStatesOfProgram:function(e){for(const r in v){var t=v[r];if(void 0!==t[e.id]){var n=t[e.id];for(const e in n)a(n[e].object),delete n[e];delete t[e.id]}}},initAttributes:b,enableAttribute:w,disableUnusedAttributes:T}}function dr(a,s,o,e){const l=e.isWebGL2;let c;this.setMode=function(e){c=e},this.render=function(e,t){a.drawArrays(c,e,t),o.update(t,c,1)},this.renderInstances=function(n,r,i){if(0!==i){let e,t;if(l)e=a,t="drawArraysInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawArraysInstancedANGLE",null===e)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](c,n,r,i),o.update(r,c,i)}}}function pr(t,n,e){let r;function i(e){if("highp"===e){if(0<t.getShaderPrecisionFormat(35633,36338).precision&&0<t.getShaderPrecisionFormat(35632,36338).precision)return"highp";e="mediump"}return"mediump"===e&&0<t.getShaderPrecisionFormat(35633,36337).precision&&0<t.getShaderPrecisionFormat(35632,36337).precision?"mediump":"lowp"}var a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==e.precision?e.precision:"highp";var o=i(s),o=(o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o),!0===e.logarithmicDepthBuffer),e=t.getParameter(34930),l=t.getParameter(35660),c=t.getParameter(3379),h=t.getParameter(34076),u=t.getParameter(34921),d=t.getParameter(36347),p=t.getParameter(36348),f=t.getParameter(36349),m=0<l,g=a||n.has("OES_texture_float");return{isWebGL2:a,getMaxAnisotropy:function(){var e;return r=void 0===r?!0===n.has("EXT_texture_filter_anisotropic")?(e=n.get("EXT_texture_filter_anisotropic"),t.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT)):0:r},getMaxPrecision:i,precision:s,logarithmicDepthBuffer:o,maxTextures:e,maxVertexTextures:l,maxTextureSize:c,maxCubemapSize:h,maxAttributes:u,maxVertexUniforms:d,maxVaryings:p,maxFragmentUniforms:f,vertexTextures:m,floatFragmentTextures:g,floatVertexTextures:m&&g,maxSamples:a?t.getParameter(36183):0}}function fr(l){const t=this;let c=null,h=0,u=!1,d=!1;const o=new jt,p=new v,f={value:null,needsUpdate:!1};function m(){f.value!==c&&(f.value=c,f.needsUpdate=0<h),t.numPlanes=h,t.numIntersection=0}function g(n,e,r,i){var a=null!==n?n.length:0;let s=null;if(0!==a){if(s=f.value,!0!==i||null===s){const t=r+4*a,i=e.matrixWorldInverse;p.getNormalMatrix(i),(null===s||s.length<t)&&(s=new Float32Array(t));for(let e=0,t=r;e!==a;++e,t+=4)o.copy(n[e]).applyMatrix4(i,p),o.normal.toArray(s,t),s[t+3]=o.constant}f.value=s,f.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,s}this.uniform=f,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,n){var r=0!==e.length||t||0!==h||u;return u=t,c=g(e,n,0),h=e.length,r},this.beginShadows=function(){d=!0,g(null)},this.endShadows=function(){d=!1,m()},this.setState=function(t,e,n){var r=t.clippingPlanes,i=t.clipIntersection,a=t.clipShadows,s=l.get(t);if(!u||null===r||0===r.length||d&&!a)d?g(null):m();else{const l=d?0:h,t=4*l;var o=s.clippingState||null;f.value=o,o=g(r,e,t,n);for(let e=0;e!==t;++e)o[e]=c[e];s.clippingState=o,this.numIntersection=i?this.numPlanes:0,this.numPlanes+=l}}}function mr(n){let r=new WeakMap;function i(e,t){return t===P?e.mapping=L:t===D&&(e.mapping=C),e}function a(e){var e=e.target,t=(e.removeEventListener("dispose",a),r.get(e));void 0!==t&&(r.delete(e),t.dispose())}return{get:function(e){if(e&&e.isTexture){var t=e.mapping;if(t===P||t===D){if(r.has(e))return i(r.get(e).texture,e.mapping);t=e.image;if(t&&0<t.height){const P=n.getRenderTarget(),D=new tr(t.height/2);return D.fromEquirectangularTexture(n,e),r.set(e,D),n.setRenderTarget(P),e.addEventListener("dispose",a),i(D.texture,e.mapping)}return null}}return e},dispose:function(){r=new WeakMap}}}function gr(n){const r={};function i(e){if(void 0!==r[e])return r[e];let t;switch(e){case"WEBGL_depth_texture":t=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":t=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":t=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":t=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:t=n.getExtension(e)}return r[e]=t}return{has:function(e){return null!==i(e)},init:function(e){e.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float")},get:function(e){var t=i(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function vr(e,o,n,r){const i={},l=new WeakMap;function a(e){var t=e.target;null!==t.index&&o.remove(t.index);for(const e in t.attributes)o.remove(t.attributes[e]);t.removeEventListener("dispose",a),delete i[t.id];e=l.get(t);e&&(o.remove(e),l.delete(t)),r.releaseStatesOfGeometry(t),!0===t.isInstancedBufferGeometry&&delete t._maxInstanceCount,n.memory.geometries--}function s(n){const r=[],i=n.index,a=n.attributes.position;let e=0;if(null!==i){const n=i.array;e=i.version;for(let e=0,t=n.length;e<t;e+=3){const i=n[e+0],a=n[e+1],l=n[e+2];r.push(i,a,a,l,l,i)}}else{const n=a.array;e=a.version;for(let e=0,t=n.length/3-1;e<t;e+=3){const n=e+0,i=e+1,a=e+2;r.push(n,i,i,a,a,n)}}var t=new(65535<bn(r)?yn:gn)(r,1),s=(t.version=e,l.get(n));s&&o.remove(s),l.set(n,t)}return{get:function(e,t){return!0!==i[t.id]&&(t.addEventListener("dispose",a),i[t.id]=!0,n.memory.geometries++),t},update:function(e){const n=e.attributes;for(const e in n)o.update(n[e],34962);var t=e.morphAttributes;for(const e in t){const n=t[e];for(let e=0,t=n.length;e<t;e++)o.update(n[e],34962)}},getWireframeAttribute:function(e){var t,n=l.get(e);return(!n||null!==(t=e.index)&&n.version<t.version)&&s(e),l.get(e)}}}function yr(a,s,o,e){const l=e.isWebGL2;let c,h,u;this.setMode=function(e){c=e},this.setIndex=function(e){h=e.type,u=e.bytesPerElement},this.render=function(e,t){a.drawElements(c,t,h,e*u),o.update(t,c,1)},this.renderInstances=function(n,r,i){if(0!==i){let e,t;if(l)e=a,t="drawElementsInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawElementsInstancedANGLE",null===e)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](c,r,h,n*u,i),o.update(r,c,i)}}}function xr(e){const r={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:r,programs:null,autoReset:!0,reset:function(){r.frame++,r.calls=0,r.triangles=0,r.points=0,r.lines=0},update:function(e,t,n){switch(r.calls++,t){case 4:r.triangles+=n*(e/3);break;case 1:r.lines+=n*(e/2);break;case 3:r.lines+=n*(e-1);break;case 2:r.lines+=n*e;break;case 0:r.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",t)}}}}function _r(e,t){return e[0]-t[0]}function br(e,t){return Math.abs(t[1])-Math.abs(e[1])}function wr(h){const u={},d=new Float32Array(8),p=[];for(let e=0;e<8;e++)p[e]=[e,0];return{update:function(t,n,r,e){var i=t.morphTargetInfluences,a=void 0===i?0:i.length;let s=u[n.id];if(void 0===s){s=[];for(let e=0;e<a;e++)s[e]=[e,0];u[n.id]=s}for(let e=0;e<a;e++){const u=s[e];u[0]=e,u[1]=i[e]}s.sort(br);for(let e=0;e<8;e++)e<a&&s[e][1]?(p[e][0]=s[e][0],p[e][1]=s[e][1]):(p[e][0]=Number.MAX_SAFE_INTEGER,p[e][1]=0);p.sort(_r);var o=r.morphTargets&&n.morphAttributes.position,l=r.morphNormals&&n.morphAttributes.normal;let c=0;for(let e=0;e<8;e++){const u=p[e],t=u[0],r=u[1];t!==Number.MAX_SAFE_INTEGER&&r?(o&&n.getAttribute("morphTarget"+e)!==o[t]&&n.setAttribute("morphTarget"+e,o[t]),l&&n.getAttribute("morphNormal"+e)!==l[t]&&n.setAttribute("morphNormal"+e,l[t]),d[e]=r,c+=r):(o&&!0===n.hasAttribute("morphTarget"+e)&&n.deleteAttribute("morphTarget"+e),l&&!0===n.hasAttribute("morphNormal"+e)&&n.deleteAttribute("morphNormal"+e),d[e]=0)}t=n.morphTargetsRelative?1:1-c;e.getUniforms().setValue(h,"morphTargetBaseInfluence",t),e.getUniforms().setValue(h,"morphTargetInfluences",d)}}}function Mr(e,r,i,a){let s=new WeakMap;function o(e){e=e.target;e.removeEventListener("dispose",o),i.remove(e.instanceMatrix),null!==e.instanceColor&&i.remove(e.instanceColor)}return{update:function(e){var t=a.render.frame,n=e.geometry,n=r.get(e,n);return s.get(n)!==t&&(r.update(n),s.set(n,t)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",o)&&e.addEventListener("dispose",o),i.update(e.instanceMatrix,34962),null!==e.instanceColor)&&i.update(e.instanceColor,34962),n},dispose:function(){s=new WeakMap}}}cr.physical={uniforms:t([cr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Se(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Ce(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:M.meshphysical_vert,fragmentShader:M.meshphysical_frag};class Tr extends h{constructor(e=null,t=1,n=1,r=1){super(null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=O,this.minFilter=O,this.wrapR=G,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}class Er extends h{constructor(e=null,t=1,n=1,r=1){super(null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=O,this.minFilter=O,this.wrapR=G,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}Er.prototype.isDataTexture3D=Tr.prototype.isDataTexture2DArray=!0;const Sr=new h,Ar=new Tr,Rr=new Er,Lr=new er,Cr=[],Pr=[],Dr=new Float32Array(16),Ir=new Float32Array(9),Nr=new Float32Array(4);function Br(n,r,i){var e=n[0];if(e<=0||0<e)return n;var t=r*i;let a=Cr[t];if(void 0===a&&(a=new Float32Array(t),Cr[t]=a),0!==r){e.toArray(a,0);for(let e=1,t=0;e!==r;++e)t+=i,n[e].toArray(a,t)}return a}function Hr(n,r){if(n.length===r.length){for(let e=0,t=n.length;e<t;e++)if(n[e]!==r[e])return;return 1}}function s(n,r){for(let e=0,t=r.length;e<t;e++)n[e]=r[e]}function Ur(t,n){let r=Pr[n];void 0===r&&(r=new Int32Array(n),Pr[n]=r);for(let e=0;e!==n;++e)r[e]=t.allocateTextureUnit();return r}function Or(e,t){var n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function zr(e,t){var n=this.cache;void 0!==t.x?n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y):Hr(n,t)||(e.uniform2fv(this.addr,t),s(n,t))}function Fr(e,t){var n=this.cache;void 0!==t.x?n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z):void 0!==t.r?n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b):Hr(n,t)||(e.uniform3fv(this.addr,t),s(n,t))}function Gr(e,t){var n=this.cache;void 0!==t.x?n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w):Hr(n,t)||(e.uniform4fv(this.addr,t),s(n,t))}function kr(e,t){var n=this.cache,r=t.elements;void 0===r?Hr(n,t)||(e.uniformMatrix2fv(this.addr,!1,t),s(n,t)):Hr(n,r)||(Nr.set(r),e.uniformMatrix2fv(this.addr,!1,Nr),s(n,r))}function Vr(e,t){var n=this.cache,r=t.elements;void 0===r?Hr(n,t)||(e.uniformMatrix3fv(this.addr,!1,t),s(n,t)):Hr(n,r)||(Ir.set(r),e.uniformMatrix3fv(this.addr,!1,Ir),s(n,r))}function Wr(e,t){var n=this.cache,r=t.elements;void 0===r?Hr(n,t)||(e.uniformMatrix4fv(this.addr,!1,t),s(n,t)):Hr(n,r)||(Dr.set(r),e.uniformMatrix4fv(this.addr,!1,Dr),s(n,r))}function jr(e,t){var n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function qr(e,t){var n=this.cache;Hr(n,t)||(e.uniform2iv(this.addr,t),s(n,t))}function Xr(e,t){var n=this.cache;Hr(n,t)||(e.uniform3iv(this.addr,t),s(n,t))}function Yr(e,t){var n=this.cache;Hr(n,t)||(e.uniform4iv(this.addr,t),s(n,t))}function Zr(e,t){var n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function Jr(e,t){var n=this.cache;Hr(n,t)||(e.uniform2uiv(this.addr,t),s(n,t))}function Qr(e,t){var n=this.cache;Hr(n,t)||(e.uniform3uiv(this.addr,t),s(n,t))}function Kr(e,t){var n=this.cache;Hr(n,t)||(e.uniform4uiv(this.addr,t),s(n,t))}function $r(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTexture2D(t||Sr,i)}function ei(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(t||Rr,i)}function ti(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTextureCube(t||Lr,i)}function ni(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(t||Ar,i)}function ri(e,t){e.uniform1fv(this.addr,t)}function ii(e,t){t=Br(t,this.size,2);e.uniform2fv(this.addr,t)}function ai(e,t){t=Br(t,this.size,3);e.uniform3fv(this.addr,t)}function si(e,t){t=Br(t,this.size,4);e.uniform4fv(this.addr,t)}function oi(e,t){t=Br(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,t)}function li(e,t){t=Br(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,t)}function ci(e,t){t=Br(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,t)}function hi(e,t){e.uniform1iv(this.addr,t)}function ui(e,t){e.uniform2iv(this.addr,t)}function di(e,t){e.uniform3iv(this.addr,t)}function pi(e,t){e.uniform4iv(this.addr,t)}function fi(e,t){e.uniform1uiv(this.addr,t)}function mi(e,t){e.uniform2uiv(this.addr,t)}function gi(e,t){e.uniform3uiv(this.addr,t)}function vi(e,t){e.uniform4uiv(this.addr,t)}function yi(e,t,n){var r=t.length,i=Ur(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.safeSetTexture2D(t[e]||Sr,i[e])}function xi(e,t,n){var r=t.length,i=Ur(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.safeSetTextureCube(t[e]||Lr,i[e])}function _i(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(){switch(t.type){case 5126:return Or;case 35664:return zr;case 35665:return Fr;case 35666:return Gr;case 35674:return kr;case 35675:return Vr;case 35676:return Wr;case 5124:case 35670:return jr;case 35667:case 35671:return qr;case 35668:case 35672:return Xr;case 35669:case 35673:return Yr;case 5125:return Zr;case 36294:return Jr;case 36295:return Qr;case 36296:return Kr;case 35678:case 36198:case 36298:case 36306:case 35682:return $r;case 35679:case 36299:case 36307:return ei;case 35680:case 36300:case 36308:case 36293:return ti;case 36289:case 36303:case 36311:case 36292:return ni}}()}function bi(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(){switch(t.type){case 5126:return ri;case 35664:return ii;case 35665:return ai;case 35666:return si;case 35674:return oi;case 35675:return li;case 35676:return ci;case 5124:case 35670:return hi;case 35667:case 35671:return ui;case 35668:case 35672:return di;case 35669:case 35673:return pi;case 5125:return fi;case 36294:return mi;case 36295:return gi;case 36296:return vi;case 35678:case 36198:case 36298:case 36306:case 35682:return yi;case 35680:case 36300:case 36308:case 36293:return xi}}()}function wi(e){this.id=e,this.seq=[],this.map={}}bi.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),s(t,e)},wi.prototype.setValue=function(n,r,i){var a=this.seq;for(let e=0,t=a.length;e!==t;++e){var s=a[e];s.setValue(n,r[s.id],i)}};const Mi=/(\w+)(\])?(\[|\.)?/g;function Ti(e,t){e.seq.push(t),e.map[t.id]=t}function Ei(t,n){this.seq=[],this.map={};const r=t.getProgramParameter(n,35718);for(let e=0;e<r;++e){const r=t.getActiveUniform(n,e);u=h=c=l=o=s=a=i=void 0;var i=r,a=t.getUniformLocation(n,r.name),s=this,o=i.name,l=o.length;for(Mi.lastIndex=0;;){var c=Mi.exec(o),h=Mi.lastIndex;let t=c[1];var u="]"===c[2],c=c[3];if(u&&(t|=0),void 0===c||"["===c&&h+2===l){Ti(s,new(void 0===c?_i:bi)(t,i,a));break}{let e=s.map[t];void 0===e&&Ti(s,e=new wi(t)),s=e}}}}function Si(e,t,n){t=e.createShader(t);return e.shaderSource(t,n),e.compileShader(t),t}Ei.prototype.setValue=function(e,t,n,r){t=this.map[t];void 0!==t&&t.setValue(e,n,r)},Ei.prototype.setOptional=function(e,t,n){t=t[n];void 0!==t&&this.setValue(e,n,t)},Ei.upload=function(n,r,i,a){for(let e=0,t=r.length;e!==t;++e){var s=r[e],o=i[s.id];!1!==o.needsUpdate&&s.setValue(n,o.value,a)}},Ei.seqWithValue=function(n,r){var i=[];for(let e=0,t=n.length;e!==t;++e){var a=n[e];a.id in r&&i.push(a)}return i};let Ai=0;function Ri(e){switch(e){case Be:return["Linear","( value )"];case ge:return["sRGB","( value )"];case ye:return["RGBE","( value )"];case xe:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case ve:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function Li(e,n,t){var r=e.getShaderParameter(n,35713),i=e.getShaderInfoLog(n).trim();return r&&""===i?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+t+"\n"+i+function(){var t=e.getShaderSource(n).split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}()}function Ci(e,t){t=Ri(t);return"vec4 "+e+"( vec4 value ) { return "+t[0]+"ToLinear"+t[1]+"; }"}function Pi(e){return""!==e}function Di(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Ii(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Ni=/^[ \t]*#include +<([\w\d./]+)>/gm;function Bi(e){return e.replace(Ni,Hi)}function Hi(e,t){var n=M[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return Bi(n)}const Ui=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Oi=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function zi(e){return e.replace(Oi,Gi).replace(Ui,Fi)}function Fi(e,t,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Gi(0,t,n,r)}function Gi(e,t,n,r){let i="";for(let e=parseInt(t);e<parseInt(n);e++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}function ki(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Vi(n,r,i,e){const a=n.getContext(),t=i.defines;var s=i.vertexShader,o=i.fragmentShader;const l=function(){let e="SHADOWMAP_TYPE_BASIC";return 1===i.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===i.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===i.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(),c=function(){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case L:case C:e="ENVMAP_TYPE_CUBE";break;case I:case N:e="ENVMAP_TYPE_CUBE_UV"}return e}(),h=function(){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case C:case N:e="ENVMAP_MODE_REFRACTION"}return e}(),u=function(){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(),d=0<n.gammaFactor?n.gammaFactor:1,p=i.isWebGL2?"":[i.extensionDerivatives||i.envMapCubeUV||i.bumpMap||i.tangentSpaceNormalMap||i.clearcoatNormalMap||i.flatShading||"physical"===i.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(i.extensionFragDepth||i.logarithmicDepthBuffer)&&i.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",i.extensionDrawBuffers&&i.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(i.extensionShaderTextureLOD||i.envMap)&&i.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Pi).join("\n"),f=function(e){var t=[];for(const r in e){var n=e[r];!1!==n&&t.push("#define "+r+" "+n)}return t.join("\n")}(t),m=a.createProgram();let g,v,y=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?(0<(g=[f].filter(Pi).join("\n")).length&&(g+="\n"),0<(v=[p,f].filter(Pi).join("\n")).length&&(v+="\n")):(g=[ki(i),"#define SHADER_NAME "+i.shaderName,f,i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+i.maxBones,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+h:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Pi).join("\n"),v=[p,ki(i),"#define SHADER_NAME "+i.shaderName,f,i.alphaTest?"#define ALPHATEST "+i.alphaTest+(i.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+c:"",i.envMap?"#define "+h:"",i.envMap?"#define "+u:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.sheen?"#define USE_SHEEN":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(i.extensionShaderTextureLOD||i.envMap)&&i.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==i.toneMapping?"#define TONE_MAPPING":"",0!==i.toneMapping?M.tonemapping_pars_fragment:"",0!==i.toneMapping?function(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",M.encodings_pars_fragment,i.map?Ci("mapTexelToLinear",i.mapEncoding):"",i.matcap?Ci("matcapTexelToLinear",i.matcapEncoding):"",i.envMap?Ci("envMapTexelToLinear",i.envMapEncoding):"",i.emissiveMap?Ci("emissiveMapTexelToLinear",i.emissiveMapEncoding):"",i.lightMap?Ci("lightMapTexelToLinear",i.lightMapEncoding):"",(x="linearToOutputTexel",_=Ri(_=i.outputEncoding),"vec4 "+x+"( vec4 value ) { return LinearTo"+_[0]+_[1]+"; }"),i.depthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(Pi).join("\n")),s=Ii(Di(Bi(s),i),i),o=Ii(Di(Bi(o),i),i),s=zi(s),o=zi(o),i.isWebGL2&&!0!==i.isRawShaderMaterial&&(y="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",i.glslVersion===we?"":"out highp vec4 pc_fragColor;",i.glslVersion===we?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);var x=y+v+o,_=Si(a,35633,y+g+s),o=Si(a,35632,x);if(a.attachShader(m,_),a.attachShader(m,o),void 0!==i.index0AttributeName?a.bindAttribLocation(m,0,i.index0AttributeName):!0===i.morphTargets&&a.bindAttribLocation(m,0,"position"),a.linkProgram(m),n.debug.checkShaderErrors){const n=a.getProgramInfoLog(m).trim(),r=a.getShaderInfoLog(_).trim(),i=a.getShaderInfoLog(o).trim();let e=!0,t=!0;if(!1===a.getProgramParameter(m,35714)){e=!1;const r=Li(a,_,"vertex"),i=Li(a,o,"fragment");console.error("THREE.WebGLProgram: shader error: ",a.getError(),"35715",a.getProgramParameter(m,35715),"gl.getProgramInfoLog",n,r,i)}else""!==n?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",n):""!==r&&""!==i||(t=!1);t&&(this.diagnostics={runnable:e,programLog:n,vertexShader:{log:r,prefix:g},fragmentShader:{log:i,prefix:v}})}let b,w;return a.deleteShader(_),a.deleteShader(o),this.getUniforms=function(){return b=void 0===b?new Ei(a,m):b},this.getAttributes=function(){return w=void 0===w?function(t,n){const r={},i=t.getProgramParameter(n,35721);for(let e=0;e<i;e++){const i=t.getActiveAttrib(n,e).name;r[i]=t.getAttribLocation(n,i)}return r}(a,m):w},this.destroy=function(){e.releaseStatesOfProgram(this),a.deleteProgram(m),this.program=void 0},this.name=i.shaderName,this.id=Ai++,this.cacheKey=r,this.usedTimes=1,this.program=m,this.vertexShader=_,this.fragmentShader=o,this}function Wi(u,d,p,f,e,m){const a=[],g=f.isWebGL2,v=f.logarithmicDepthBuffer,y=f.floatVertexTextures,x=f.maxVertexUniforms,_=f.vertexTextures;let b=f.precision;const w={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},r=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function M(e){let t;return t=e&&e.isTexture?e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e.texture.encoding):Be}return{getParameters:function(e,t,n,r,i){var a=r.fog,r=e.isMeshStandardMaterial?r.environment:null,r=d.get(e.envMap||r),s=w[e.type],o=i.isSkinnedMesh?function(e){var t=e.skeleton.bones;if(y)return 1024;{const e=x,n=Math.floor((e-20)/4),r=Math.min(n,t.length);return r<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+r+"."),0):r}}(i):0;let l,c;if(null!==e.precision&&(b=f.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",b,"instead."),s){const u=cr[s];l=u.vertexShader,c=u.fragmentShader}else l=e.vertexShader,c=e.fragmentShader;var h=u.getRenderTarget();return{isWebGL2:g,shaderID:s,shaderName:e.type,vertexShader:l,fragmentShader:c,defines:e.defines,isRawShaderMaterial:!0===e.isRawShaderMaterial,glslVersion:e.glslVersion,precision:b,instancing:!0===i.isInstancedMesh,instancingColor:!0===i.isInstancedMesh&&null!==i.instanceColor,supportsVertexTextures:_,outputEncoding:null!==h?M(h.texture):u.outputEncoding,map:!!e.map,mapEncoding:M(e.map),matcap:!!e.matcap,matcapEncoding:M(e.matcap),envMap:!!r,envMapMode:r&&r.mapping,envMapEncoding:M(r),envMapCubeUV:!!r&&(r.mapping===I||r.mapping===N),lightMap:!!e.lightMap,lightMapEncoding:M(e.lightMap),aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:M(e.emissiveMap),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:1===e.normalMapType,tangentSpaceNormalMap:0===e.normalMapType,clearcoatMap:!!e.clearcoatMap,clearcoatRoughnessMap:!!e.clearcoatRoughnessMap,clearcoatNormalMap:!!e.clearcoatNormalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,sheen:!!e.sheen,transmissionMap:!!e.transmissionMap,combine:e.combine,vertexTangents:e.normalMap&&e.vertexTangents,vertexColors:e.vertexColors,vertexAlphas:!0===e.vertexColors&&i.geometry.attributes.color&&4===i.geometry.attributes.color.itemSize,vertexUvs:!!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatMap||e.clearcoatRoughnessMap||e.clearcoatNormalMap||e.displacementMap||e.transmissionMap),uvsVertexOnly:!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||e.transmissionMap||!e.displacementMap),fog:!!a,useFog:e.fog,fogExp2:a&&a.isFogExp2,flatShading:!!e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:v,skinning:e.skinning&&0<o,maxBones:o,useVertexTexture:y,morphTargets:e.morphTargets,morphNormals:e.morphNormals,numDirLights:t.directional.length,numPointLights:t.point.length,numSpotLights:t.spot.length,numRectAreaLights:t.rectArea.length,numHemiLights:t.hemi.length,numDirLightShadows:t.directionalShadowMap.length,numPointLightShadows:t.pointShadowMap.length,numSpotLightShadows:t.spotShadowMap.length,numClippingPlanes:m.numPlanes,numClipIntersection:m.numIntersection,dithering:e.dithering,shadowMapEnabled:u.shadowMap.enabled&&0<n.length,shadowMapType:u.shadowMap.type,toneMapping:e.toneMapped?u.toneMapping:0,physicallyCorrectLights:u.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:2===e.side,flipSided:1===e.side,depthPacking:void 0!==e.depthPacking&&e.depthPacking,index0AttributeName:e.index0AttributeName,extensionDerivatives:e.extensions&&e.extensions.derivatives,extensionFragDepth:e.extensions&&e.extensions.fragDepth,extensionDrawBuffers:e.extensions&&e.extensions.drawBuffers,extensionShaderTextureLOD:e.extensions&&e.extensions.shaderTextureLOD,rendererExtensionFragDepth:g||p.has("EXT_frag_depth"),rendererExtensionDrawBuffers:g||p.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:g||p.has("EXT_shader_texture_lod"),customProgramCacheKey:e.customProgramCacheKey()}},getProgramCacheKey:function(t){var n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.fragmentShader),n.push(t.vertexShader)),void 0!==t.defines)for(const u in t.defines)n.push(u),n.push(t.defines[u]);if(!1===t.isRawShaderMaterial){for(let e=0;e<r.length;e++)n.push(t[r[e]]);n.push(u.outputEncoding),n.push(u.gammaFactor)}return n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){var t=w[e.type];let n;if(t){const e=cr[t];n=Jn.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(n,r){let i;for(let e=0,t=a.length;e<t;e++){const n=a[e];if(n.cacheKey===r){++(i=n).usedTimes;break}}return void 0===i&&(i=new Vi(u,r,n,e),a.push(i)),i},releaseProgram:function(e){var t;0==--e.usedTimes&&(t=a.indexOf(e),a[t]=a[a.length-1],a.pop(),e.destroy())},programs:a}}function ji(){let r=new WeakMap;return{get:function(e){let t=r.get(e);return void 0===t&&(t={},r.set(e,t)),t},remove:function(e){r.delete(e)},update:function(e,t,n){r.get(e)[t]=n},dispose:function(){r=new WeakMap}}}function qi(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Xi(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Yi(l){const c=[];let h=0;const s=[],o=[],u={id:-1};function d(e,t,n,r,i,a){let s=c[h];var o=l.get(n);return void 0===s?(s={id:e.id,object:e,geometry:t,material:n,program:o.program||u,groupOrder:r,renderOrder:e.renderOrder,z:i,group:a},c[h]=s):(s.id=e.id,s.object=e,s.geometry=t,s.material=n,s.program=o.program||u,s.groupOrder=r,s.renderOrder=e.renderOrder,s.z=i,s.group=a),h++,s}return{opaque:s,transparent:o,init:function(){h=0,s.length=0,o.length=0},push:function(e,t,n,r,i,a){e=d(e,t,n,r,i,a);(!0===n.transparent?o:s).push(e)},unshift:function(e,t,n,r,i,a){e=d(e,t,n,r,i,a);(!0===n.transparent?o:s).unshift(e)},finish:function(){for(let e=h,t=c.length;e<t;e++){const h=c[e];if(null===h.id)break;h.id=null,h.object=null,h.geometry=null,h.material=null,h.program=null,h.group=null}},sort:function(e,t){1<s.length&&s.sort(e||qi),1<o.length&&o.sort(t||Xi)}}}function Zi(r){let i=new WeakMap;return{get:function(e,t){let n;return!1===i.has(e)?(n=new Yi(r),i.set(e,[n])):t>=i.get(e).length?(n=new Yi(r),i.get(e).push(n)):n=i.get(e)[t],n},dispose:function(){i=new WeakMap}}}function Ji(){const n={};return{get:function(e){if(void 0!==n[e.id])return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new Re,color:new Ce};break;case"SpotLight":t={position:new Re,direction:new Re,color:new Ce,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new Re,color:new Ce,distance:0,decay:0};break;case"HemisphereLight":t={direction:new Re,skyColor:new Ce,groundColor:new Ce};break;case"RectAreaLight":t={color:new Ce,position:new Re,halfWidth:new Re,halfHeight:new Re}}return n[e.id]=t}}}let Qi=0;function Ki(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function $i(y,x){const _=new Ji,b=function(){const n={};return{get:function(e){if(void 0!==n[e.id])return n[e.id];let t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Se};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Se,shadowCameraNear:1,shadowCameraFar:1e3}}return n[e.id]=t}}}(),w={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)w.probe.push(new Re);const h=new Re,u=new Le,d=new Le;return{setup:function(n){let r=0,i=0,a=0;for(let e=0;e<9;e++)w.probe[e].set(0,0,0);let s=0,o=0,l=0,c=0,h=0,u=0,d=0,p=0;n.sort(Ki);for(let e=0,t=n.length;e<t;e++){const x=n[e],f=x.color,m=x.intensity,g=x.distance,v=x.shadow&&x.shadow.map?x.shadow.map.texture:null;if(x.isAmbientLight)r+=f.r*m,i+=f.g*m,a+=f.b*m;else if(x.isLightProbe)for(let e=0;e<9;e++)w.probe[e].addScaledVector(x.sh.coefficients[e],m);else if(x.isDirectionalLight){const y=_.get(x);if(y.color.copy(x.color).multiplyScalar(x.intensity),x.castShadow){const y=x.shadow,_=b.get(x);_.shadowBias=y.bias,_.shadowNormalBias=y.normalBias,_.shadowRadius=y.radius,_.shadowMapSize=y.mapSize,w.directionalShadow[s]=_,w.directionalShadowMap[s]=v,w.directionalShadowMatrix[s]=x.shadow.matrix,u++}w.directional[s]=y,s++}else if(x.isSpotLight){const y=_.get(x);if(y.position.setFromMatrixPosition(x.matrixWorld),y.color.copy(f).multiplyScalar(m),y.distance=g,y.coneCos=Math.cos(x.angle),y.penumbraCos=Math.cos(x.angle*(1-x.penumbra)),y.decay=x.decay,x.castShadow){const y=x.shadow,_=b.get(x);_.shadowBias=y.bias,_.shadowNormalBias=y.normalBias,_.shadowRadius=y.radius,_.shadowMapSize=y.mapSize,w.spotShadow[l]=_,w.spotShadowMap[l]=v,w.spotShadowMatrix[l]=x.shadow.matrix,p++}w.spot[l]=y,l++}else if(x.isRectAreaLight){const y=_.get(x);y.color.copy(f).multiplyScalar(m),y.halfWidth.set(.5*x.width,0,0),y.halfHeight.set(0,.5*x.height,0),w.rectArea[c]=y,c++}else if(x.isPointLight){const y=_.get(x);if(y.color.copy(x.color).multiplyScalar(x.intensity),y.distance=x.distance,y.decay=x.decay,x.castShadow){const y=x.shadow,_=b.get(x);_.shadowBias=y.bias,_.shadowNormalBias=y.normalBias,_.shadowRadius=y.radius,_.shadowMapSize=y.mapSize,_.shadowCameraNear=y.camera.near,_.shadowCameraFar=y.camera.far,w.pointShadow[o]=_,w.pointShadowMap[o]=v,w.pointShadowMatrix[o]=x.shadow.matrix,d++}w.point[o]=y,o++}else if(x.isHemisphereLight){const y=_.get(x);y.skyColor.copy(x.color).multiplyScalar(m),y.groundColor.copy(x.groundColor).multiplyScalar(m),w.hemi[h]=y,h++}}0<c&&(x.isWebGL2||!0===y.has("OES_texture_float_linear")?(w.rectAreaLTC1=T.LTC_FLOAT_1,w.rectAreaLTC2=T.LTC_FLOAT_2):!0===y.has("OES_texture_half_float_linear")?(w.rectAreaLTC1=T.LTC_HALF_1,w.rectAreaLTC2=T.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),w.ambient[0]=r,w.ambient[1]=i,w.ambient[2]=a;const f=w.hash;f.directionalLength===s&&f.pointLength===o&&f.spotLength===l&&f.rectAreaLength===c&&f.hemiLength===h&&f.numDirectionalShadows===u&&f.numPointShadows===d&&f.numSpotShadows===p||(w.directional.length=s,w.spot.length=l,w.rectArea.length=c,w.point.length=o,w.hemi.length=h,w.directionalShadow.length=u,w.directionalShadowMap.length=u,w.pointShadow.length=d,w.pointShadowMap.length=d,w.spotShadow.length=p,w.spotShadowMap.length=p,w.directionalShadowMatrix.length=u,w.pointShadowMatrix.length=d,w.spotShadowMatrix.length=p,f.directionalLength=s,f.pointLength=o,f.spotLength=l,f.rectAreaLength=c,f.hemiLength=h,f.numDirectionalShadows=u,f.numPointShadows=d,f.numSpotShadows=p,w.version=Qi++)},setupView:function(n,e){let r=0,i=0,a=0,s=0,o=0;var l=e.matrixWorldInverse;for(let e=0,t=n.length;e<t;e++){var c=n[e];if(c.isDirectionalLight){const n=w.directional[r];n.direction.setFromMatrixPosition(c.matrixWorld),h.setFromMatrixPosition(c.target.matrixWorld),n.direction.sub(h),n.direction.transformDirection(l),r++}else if(c.isSpotLight){const n=w.spot[a];n.position.setFromMatrixPosition(c.matrixWorld),n.position.applyMatrix4(l),n.direction.setFromMatrixPosition(c.matrixWorld),h.setFromMatrixPosition(c.target.matrixWorld),n.direction.sub(h),n.direction.transformDirection(l),a++}else if(c.isRectAreaLight){const n=w.rectArea[s];n.position.setFromMatrixPosition(c.matrixWorld),n.position.applyMatrix4(l),d.identity(),u.copy(c.matrixWorld),u.premultiply(l),d.extractRotation(u),n.halfWidth.set(.5*c.width,0,0),n.halfHeight.set(0,.5*c.height,0),n.halfWidth.applyMatrix4(d),n.halfHeight.applyMatrix4(d),s++}else if(c.isPointLight){const n=w.point[i];n.position.setFromMatrixPosition(c.matrixWorld),n.position.applyMatrix4(l),i++}else if(c.isHemisphereLight){const n=w.hemi[o];n.direction.setFromMatrixPosition(c.matrixWorld),n.direction.transformDirection(l),n.direction.normalize(),o++}}},state:w}}function ea(e,t){const n=new $i(e,t),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(){n.setup(r)},setupLightsView:function(e){n.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){i.push(e)}}}function ta(r,i){let a=new WeakMap;return{get:function(e,t=0){let n;return!1===a.has(e)?(n=new ea(r,i),a.set(e,[n])):t>=a.get(e).length?(n=new ea(r,i),a.get(e).push(n)):n=a.get(e)[t],n},dispose:function(){a=new WeakMap}}}class na extends a{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}na.prototype.isMeshDepthMaterial=!0;class ra extends a{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new Re,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function ia(d,p,e){let f=new ar;const m=new Se,g=new Se,v=new Ae,i=[],a=[],h={},y=e.maxTextureSize,u={0:1,1:0,2:2},x=new Qn({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Se},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),_=x.clone();_.defines.HORIZONTAL_PASS=1;e=new S;e.setAttribute("position",new E(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new A(e,x),t=this;function w(e,t,n){n=e<<0|t<<1|n<<2;let r=i[n];return void 0===r&&(r=new na({depthPacking:3201,morphTargets:e,skinning:t}),i[n]=r),r}function M(e,t,n){n=e<<0|t<<1|n<<2;let r=a[n];return void 0===r&&(r=new ra({morphTargets:e,skinning:t}),a[n]=r),r}function T(n,r,i,e,t,a,s){let o=null,l=w,c=n.customDepthMaterial;if(!0===e.isPointLight&&(l=M,c=n.customDistanceMaterial),void 0===c){let e=!1,t=(!0===i.morphTargets&&(e=r.morphAttributes&&r.morphAttributes.position&&0<r.morphAttributes.position.length),!1);!0===n.isSkinnedMesh&&(!0===i.skinning?t=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",n)),o=l(e,t,!0===n.isInstancedMesh)}else o=c;if(d.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){const d=o.uuid,n=i.uuid;let e=h[d],t=(void 0===e&&(e={},h[d]=e),e[n]);void 0===t&&(t=o.clone(),e[n]=t),o=t}return o.visible=i.visible,o.wireframe=i.wireframe,o.side=3===s?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:u[i.side],o.clipShadows=i.clipShadows,o.clippingPlanes=i.clippingPlanes,o.clipIntersection=i.clipIntersection,o.wireframeLinewidth=i.wireframeLinewidth,o.linewidth=i.linewidth,!0===e.isPointLight&&!0===o.isMeshDistanceMaterial&&(o.referencePosition.setFromMatrixPosition(e.matrixWorld),o.nearDistance=t,o.farDistance=a),o}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(n,r,i){if(!1!==t.enabled&&(!1!==t.autoUpdate||!1!==t.needsUpdate)&&0!==n.length){const e=d.getRenderTarget(),c=d.getActiveCubeFace(),h=d.getActiveMipmapLevel(),u=d.state;u.setBlending(0),u.buffers.color.setClear(1,1,1,1),u.buffers.depth.setTest(!0),u.setScissorTest(!1);for(let e=0,t=n.length;e<t;e++){const c=n[e],h=c.shadow;if(void 0===h)console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");else if(!1!==h.autoUpdate||!1!==h.needsUpdate){m.copy(h.mapSize);var a=h.getFrameExtents();if(m.multiply(a),g.copy(h.mapSize),(m.x>y||m.y>y)&&(m.x>y&&(g.x=Math.floor(y/a.x),m.x=g.x*a.x,h.mapSize.x=g.x),m.y>y)&&(g.y=Math.floor(y/a.y),m.y=g.y*a.y,h.mapSize.y=g.y),null===h.map&&!h.isPointLightShadow&&3===this.type){const d={minFilter:z,magFilter:z,format:Ne};h.map=new Fe(m.x,m.y,d),h.map.texture.name=c.name+".shadowMap",h.mapPass=new Fe(m.x,m.y,d),h.camera.updateProjectionMatrix()}if(null===h.map){const d={minFilter:O,magFilter:O,format:Ne};h.map=new Fe(m.x,m.y,d),h.map.texture.name=c.name+".shadowMap",h.camera.updateProjectionMatrix()}d.setRenderTarget(h.map),d.clear();var s=h.getViewportCount();for(let e=0;e<s;e++){const n=h.getViewport(e);v.set(g.x*n.x,g.y*n.y,g.x*n.z,g.y*n.w),u.viewport(v),h.updateMatrices(c,e),f=h.getFrustum(),function n(r,i,a,s,o){if(!1!==r.visible){if(r.layers.test(i.layers)&&(r.isMesh||r.isLine||r.isPoints)&&(r.castShadow||r.receiveShadow&&3===o)&&(!r.frustumCulled||f.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,r.matrixWorld);const f=p.update(r),i=r.material;if(Array.isArray(i)){const p=f.groups;for(let e=0,t=p.length;e<t;e++){var l=p[e],c=i[l.materialIndex];if(c&&c.visible){const p=T(r,f,c,s,a.near,a.far,o);d.renderBufferDirect(a,null,f,p,r,l)}}}else if(i.visible){const p=T(r,f,i,s,a.near,a.far,o);d.renderBufferDirect(a,null,f,p,r,null)}}var h=r.children;for(let e=0,t=h.length;e<t;e++)n(h[e],i,a,s,o)}}(r,i,h.camera,c,this.type)}h.isPointLightShadow||3!==this.type||(a=h,o=i,l=void 0,l=p.update(b),x.uniforms.shadow_pass.value=a.map.texture,x.uniforms.resolution.value=a.mapSize,x.uniforms.radius.value=a.radius,d.setRenderTarget(a.mapPass),d.clear(),d.renderBufferDirect(o,null,l,x,b,null),_.uniforms.shadow_pass.value=a.mapPass.texture,_.uniforms.resolution.value=a.mapSize,_.uniforms.radius.value=a.radius,d.setRenderTarget(a.map),d.clear(),d.renderBufferDirect(o,null,l,_,b,null)),h.needsUpdate=!1}}var o,l;t.needsUpdate=!1,d.setRenderTarget(e,c,h)}}}function aa(h,H,e){const U=e.isWebGL2,r=new function(){let t=!1;const a=new Ae;let n=null;const s=new Ae(0,0,0,0);return{setMask:function(e){n===e||t||(h.colorMask(e,e,e,e),n=e)},setLocked:function(e){t=e},setClear:function(e,t,n,r,i){!0===i&&(e*=r,t*=r,n*=r),a.set(e,t,n,r),!1===s.equals(a)&&(h.clearColor(e,t,n,r),s.copy(a))},reset:function(){t=!1,n=null,s.set(-1,0,0,0)}}},i=new function(){let t=!1,n=null,r=null,i=null;return{setTest:function(e){(e?C:P)(2929)},setMask:function(e){n===e||t||(h.depthMask(e),n=e)},setFunc:function(e){if(r!==e){if(e)switch(e){case 0:h.depthFunc(512);break;case 1:h.depthFunc(519);break;case 2:h.depthFunc(513);break;case 3:h.depthFunc(515);break;case 4:h.depthFunc(514);break;case 5:h.depthFunc(518);break;case 6:h.depthFunc(516);break;case 7:h.depthFunc(517);break;default:h.depthFunc(515)}else h.depthFunc(515);r=e}},setLocked:function(e){t=e},setClear:function(e){i!==e&&(h.clearDepth(e),i=e)},reset:function(){t=!1,n=null,r=null,i=null}}},a=new function(){let t=!1,n=null,r=null,i=null,a=null,s=null,o=null,l=null,c=null;return{setTest:function(e){t||(e?C:P)(2960)},setMask:function(e){n===e||t||(h.stencilMask(e),n=e)},setFunc:function(e,t,n){r===e&&i===t&&a===n||(h.stencilFunc(e,t,n),r=e,i=t,a=n)},setOp:function(e,t,n){s===e&&o===t&&l===n||(h.stencilOp(e,t,n),s=e,o=t,l=n)},setLocked:function(e){t=e},setClear:function(e){c!==e&&(h.clearStencil(e),c=e)},reset:function(){t=!1,n=null,r=null,i=null,a=null,s=null,o=null,l=null,c=null}}};let t={},n=null,s={},o=null,l=!1,c=null,u=null,d=null,p=null,f=null,m=null,g=null,v=!1,y=null,x=null,_=null,b=null,w=null;const O=h.getParameter(35661);let M=!1,T=0;e=h.getParameter(7938);-1!==e.indexOf("WebGL")?(T=parseFloat(/^WebGL (\d)/.exec(e)[1]),M=1<=T):-1!==e.indexOf("OpenGL ES")&&(T=parseFloat(/^OpenGL ES (\d)/.exec(e)[1]),M=2<=T);let E=null,S={};const A=new Ae(0,0,h.canvas.width,h.canvas.height),R=new Ae(0,0,h.canvas.width,h.canvas.height);function z(e,t,n){var r=new Uint8Array(4),i=h.createTexture();h.bindTexture(e,i),h.texParameteri(e,10241,9728),h.texParameteri(e,10240,9728);for(let e=0;e<n;e++)h.texImage2D(t+e,0,6408,1,1,0,6408,5121,r);return i}const L={};function C(e){!0!==t[e]&&(h.enable(e),t[e]=!0)}function P(e){!1!==t[e]&&(h.disable(e),t[e]=!1)}L[3553]=z(3553,3553,1),L[34067]=z(34067,34069,6),r.setClear(0,0,0,1),i.setClear(1),a.setClear(0),C(2929),i.setFunc(3),B(!1),F(1),C(2884),N(0);const D={[V]:32774,101:32778,102:32779};if(U)D[103]=32775,D[104]=32776;else{const h=H.get("EXT_blend_minmax");null!==h&&(D[103]=h.MIN_EXT,D[104]=h.MAX_EXT)}const I={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function N(e,t,n,r,i,a,s,o){if(0!==e){if(!1===l&&(C(3042),l=!0),5===e)i=i||t,a=a||n,s=s||r,t===u&&i===f||(h.blendEquationSeparate(D[t],D[i]),u=t,f=i),n===d&&r===p&&a===m&&s===g||(h.blendFuncSeparate(I[n],I[r],I[a],I[s]),d=n,p=r,m=a,g=s),c=e,v=null;else if(e!==c||o!==v){if(u===V&&f===V||(h.blendEquation(32774),u=V,f=V),o)switch(e){case 1:h.blendFuncSeparate(1,771,1,771);break;case 2:h.blendFunc(1,1);break;case 3:h.blendFuncSeparate(0,0,769,771);break;case 4:h.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case 1:h.blendFuncSeparate(770,771,1,771);break;case 2:h.blendFunc(770,1);break;case 3:h.blendFunc(0,769);break;case 4:h.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}d=null,p=null,m=null,g=null,c=e,v=o}}else!0===l&&(P(3042),l=!1)}function B(e){y!==e&&(e?h.frontFace(2304):h.frontFace(2305),y=e)}function F(e){0!==e?(C(2884),e!==x&&(1===e?h.cullFace(1029):2===e?h.cullFace(1028):h.cullFace(1032))):P(2884),x=e}function G(e,t,n){e?(C(32823),b===t&&w===n||(h.polygonOffset(t,n),b=t,w=n)):P(32823)}function k(e){void 0===e&&(e=33984+O-1),E!==e&&(h.activeTexture(e),E=e)}return{buffers:{color:r,depth:i,stencil:a},enable:C,disable:P,bindFramebuffer:function(e,t){null===t&&null!==n&&(t=n),s[e]!==t&&(h.bindFramebuffer(e,t),s[e]=t)},bindXRFramebuffer:function(e){e!==n&&(h.bindFramebuffer(36160,e),n=e)},useProgram:function(e){return o!==e&&(h.useProgram(e),o=e,!0)},setBlending:N,setMaterial:function(e,t){(2===e.side?P:C)(2884);let n=1===e.side;B(n=t?!n:n),1===e.blending&&!1===e.transparent?N(0):N(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),i.setFunc(e.depthFunc),i.setTest(e.depthTest),i.setMask(e.depthWrite),r.setMask(e.colorWrite);t=e.stencilWrite;a.setTest(t),t&&(a.setMask(e.stencilWriteMask),a.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),a.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),G(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),(!0===e.alphaToCoverage?C:P)(32926)},setFlipSided:B,setCullFace:F,setLineWidth:function(e){e!==_&&(M&&h.lineWidth(e),_=e)},setPolygonOffset:G,setScissorTest:function(e){(e?C:P)(3089)},activeTexture:k,bindTexture:function(e,t){null===E&&k();let n=S[E];void 0===n&&(n={type:void 0,texture:void 0},S[E]=n),n.type===e&&n.texture===t||(h.bindTexture(e,t||L[e]),n.type=e,n.texture=t)},unbindTexture:function(){var e=S[E];void 0!==e&&void 0!==e.type&&(h.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{h.compressedTexImage2D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{h.texImage2D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{h.texImage3D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(e){!1===A.equals(e)&&(h.scissor(e.x,e.y,e.z,e.w),A.copy(e))},viewport:function(e){!1===R.equals(e)&&(h.viewport(e.x,e.y,e.z,e.w),R.copy(e))},reset:function(){h.disable(3042),h.disable(2884),h.disable(2929),h.disable(32823),h.disable(3089),h.disable(2960),h.disable(32926),h.blendEquation(32774),h.blendFunc(1,0),h.blendFuncSeparate(1,0,1,0),h.colorMask(!0,!0,!0,!0),h.clearColor(0,0,0,0),h.depthMask(!0),h.depthFunc(513),h.clearDepth(1),h.stencilMask(4294967295),h.stencilFunc(519,0,4294967295),h.stencilOp(7680,7680,7680),h.clearStencil(0),h.cullFace(1029),h.frontFace(2305),h.polygonOffset(0,0),h.activeTexture(33984),h.bindFramebuffer(36160,null),!0===U&&(h.bindFramebuffer(36009,null),h.bindFramebuffer(36008,null)),h.useProgram(null),h.lineWidth(1),h.scissor(0,0,h.canvas.width,h.canvas.height),h.viewport(0,0,h.canvas.width,h.canvas.height),t={},E=null,S={},n=null,s={},o=null,l=!1,c=null,u=null,d=null,p=null,f=null,m=null,g=null,v=!1,y=null,x=null,_=null,b=null,w=null,A.set(0,0,h.canvas.width,h.canvas.height),R.set(0,0,h.canvas.width,h.canvas.height),r.reset(),i.reset(),a.reset()}}}function sa(d,i,p,f,r,m,h){const g=r.isWebGL2,t=r.maxTextures,v=r.maxCubemapSize,u=r.maxTextureSize,U=r.maxSamples,a=new WeakMap;let o,n=!1;try{n="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(d){}function l(e,t){return n?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function y(e,t,n,r){let i=1;if((i=e.width>r||e.height>r?r/Math.max(e.width,e.height):i)<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const r=t?Ee.floorPowerOfTwo:Math.floor,a=r(i*e.width),s=r(i*e.height);void 0===o&&(o=l(a,s));t=n?l(a,s):o;return t.width=a,t.height=s,t.getContext("2d").drawImage(e,0,0,a,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+s+")."),t}"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+").")}return e}function x(e){return Ee.isPowerOfTwo(e.width)&&Ee.isPowerOfTwo(e.height)}function _(e,t){return e.generateMipmaps&&t&&e.minFilter!==O&&e.minFilter!==z}function b(e,t,n,r){d.generateMipmap(e),f.get(t).__maxMipLevel=Math.log2(Math.max(n,r))}function w(e,t,n){if(!1===g)return t;if(null!==e){if(void 0!==d[e])return d[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let r=t;return 6403===t&&(5126===n&&(r=33326),5131===n&&(r=33325),5121===n)&&(r=33321),6407===t&&(5126===n&&(r=34837),5131===n&&(r=34843),5121===n)&&(r=32849),33325!==(r=6408===t&&(5126===n&&(r=34836),5131===n&&(r=34842),5121===n)?32856:r)&&33326!==r&&34842!==r&&34836!==r||i.get("EXT_color_buffer_float"),r}function s(e){return e===O||e===j||e===q?9728:9729}function c(e){var t,n,e=e.target;e.removeEventListener("dispose",c),t=e,void 0!==(n=f.get(t)).__webglInit&&(d.deleteTexture(n.__webglTexture),f.remove(t)),e.isVideoTexture&&a.delete(e),h.memory.textures--}function M(e){var e=e.target,t=(e.removeEventListener("dispose",M),e.texture),n=f.get(e),r=f.get(t);if(e){if(void 0!==r.__webglTexture&&d.deleteTexture(r.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)d.deleteFramebuffer(n.__webglFramebuffer[e]),n.__webglDepthbuffer&&d.deleteRenderbuffer(n.__webglDepthbuffer[e]);else d.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&d.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&d.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&d.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&d.deleteRenderbuffer(n.__webglDepthRenderbuffer);f.remove(t),f.remove(e)}h.memory.textures--}let T=0;function E(e,t){var n,r,i=f.get(e);if(e.isVideoTexture&&(n=e,r=h.render.frame,a.get(n)!==r&&(a.set(n,r),n.update())),0<e.version&&i.__version!==e.version){const p=e.image;if(void 0===p)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==p.complete)return void P(i,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}p.activeTexture(33984+t),p.bindTexture(3553,i.__webglTexture)}function S(e,t){var n=f.get(e);if(0<e.version&&n.__version!==e.version){var r=n,i=e,a=t;if(6===i.image.length){C(r,i),p.activeTexture(33984+a),p.bindTexture(34067,r.__webglTexture),d.pixelStorei(37440,i.flipY),d.pixelStorei(37441,i.premultiplyAlpha),d.pixelStorei(3317,i.unpackAlignment),d.pixelStorei(37443,0);var s=i&&(i.isCompressedTexture||i.image[0].isCompressedTexture),o=i.image[0]&&i.image[0].isDataTexture,l=[];for(let e=0;e<6;e++)l[e]=s||o?o?i.image[e].image:i.image[e]:y(i.image[e],!1,!0,v);var a=l[0],e=x(a)||g,c=m.convert(i.format),h=m.convert(i.type),u=w(i.internalFormat,c,h);let n;if(L(34067,i,e),s){for(let t=0;t<6;t++){n=l[t].mipmaps;for(let e=0;e<n.length;e++){const a=n[e];i.format!==Ne&&i.format!==K?null!==c?p.compressedTexImage2D(34069+t,e,u,a.width,a.height,0,a.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):p.texImage2D(34069+t,e,u,a.width,a.height,0,c,h,a.data)}}r.__maxMipLevel=n.length-1}else{n=i.mipmaps;for(let t=0;t<6;t++)if(o){p.texImage2D(34069+t,0,u,l[t].width,l[t].height,0,c,h,l[t].data);for(let e=0;e<n.length;e++){const i=n[e].image[t].image;p.texImage2D(34069+t,e+1,u,i.width,i.height,0,c,h,i.data)}}else{p.texImage2D(34069+t,0,u,c,h,l[t]);for(let e=0;e<n.length;e++){const i=n[e];p.texImage2D(34069+t,e+1,u,c,h,i.image[t])}}r.__maxMipLevel=n.length}_(i,e)&&b(34067,i,a.width,a.height),r.__version=i.version,i.onUpdate&&i.onUpdate(i)}}else p.activeTexture(33984+t),p.bindTexture(34067,n.__webglTexture)}const A={[F]:10497,[G]:33071,[W]:33648},R={[O]:9728,[j]:9984,[q]:9986,[z]:9729,[X]:9985,[Y]:9987};function L(e,t,n){if(n?(d.texParameteri(e,10242,A[t.wrapS]),d.texParameteri(e,10243,A[t.wrapT]),32879!==e&&35866!==e||d.texParameteri(e,32882,A[t.wrapR]),d.texParameteri(e,10240,R[t.magFilter]),d.texParameteri(e,10241,R[t.minFilter])):(d.texParameteri(e,10242,33071),d.texParameteri(e,10243,33071),32879!==e&&35866!==e||d.texParameteri(e,32882,33071),t.wrapS===G&&t.wrapT===G||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),d.texParameteri(e,10240,s(t.magFilter)),d.texParameteri(e,10241,s(t.minFilter)),t.minFilter!==O&&t.minFilter!==z&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===i.has("EXT_texture_filter_anisotropic")){const n=i.get("EXT_texture_filter_anisotropic");t.type===De&&!1===i.has("OES_texture_float_linear")||!1===g&&t.type===Ie&&!1===i.has("OES_texture_half_float_linear")||(1<t.anisotropy||f.get(t).__currentAnisotropy)&&(d.texParameterf(e,n.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,r.getMaxAnisotropy())),f.get(t).__currentAnisotropy=t.anisotropy)}}function C(e,t){void 0===e.__webglInit&&(e.__webglInit=!0,t.addEventListener("dispose",c),e.__webglTexture=d.createTexture(),h.memory.textures++)}function P(e,n,t){let r=3553;n.isDataTexture2DArray&&(r=35866),n.isDataTexture3D&&(r=32879),C(e,n),p.activeTexture(33984+t),p.bindTexture(r,e.__webglTexture),d.pixelStorei(37440,n.flipY),d.pixelStorei(37441,n.premultiplyAlpha),d.pixelStorei(3317,n.unpackAlignment),d.pixelStorei(37443,0);t=n;var t=!g&&(t.wrapS!==G||t.wrapT!==G||t.minFilter!==O&&t.minFilter!==z)&&!1===x(n.image),t=y(n.image,t,!1,u),i=x(t)||g,a=m.convert(n.format);let s,o=m.convert(n.type),l=w(n.internalFormat,a,o);L(r,n,i);var c=n.mipmaps;if(n.isDepthTexture)l=6402,g?l=n.type===De?36012:n.type===J?33190:n.type===Q?35056:33189:n.type===De&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===$&&6402===l&&n.type!==Z&&n.type!==J&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=Z,o=m.convert(n.type)),n.format===ee&&6402===l&&(l=34041,n.type!==Q)&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=Q,o=m.convert(n.type)),p.texImage2D(3553,0,l,t.width,t.height,0,a,o,null);else if(n.isDataTexture)if(0<c.length&&i){for(let e=0,t=c.length;e<t;e++)s=c[e],p.texImage2D(3553,e,l,s.width,s.height,0,a,o,s.data);n.generateMipmaps=!1,e.__maxMipLevel=c.length-1}else p.texImage2D(3553,0,l,t.width,t.height,0,a,o,t.data),e.__maxMipLevel=0;else if(n.isCompressedTexture){for(let e=0,t=c.length;e<t;e++)s=c[e],n.format!==Ne&&n.format!==K?null!==a?p.compressedTexImage2D(3553,e,l,s.width,s.height,0,s.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):p.texImage2D(3553,e,l,s.width,s.height,0,a,o,s.data);e.__maxMipLevel=c.length-1}else if(n.isDataTexture2DArray)p.texImage3D(35866,0,l,t.width,t.height,t.depth,0,a,o,t.data),e.__maxMipLevel=0;else if(n.isDataTexture3D)p.texImage3D(32879,0,l,t.width,t.height,t.depth,0,a,o,t.data),e.__maxMipLevel=0;else if(0<c.length&&i){for(let e=0,t=c.length;e<t;e++)s=c[e],p.texImage2D(3553,e,l,a,o,s);n.generateMipmaps=!1,e.__maxMipLevel=c.length-1}else p.texImage2D(3553,0,l,a,o,t),e.__maxMipLevel=0;_(n,i)&&b(r,n,t.width,t.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}function D(e,t,n,r){var i=t.texture,a=m.convert(i.format),s=m.convert(i.type),o=w(i.internalFormat,a,s);32879===r||35866===r?p.texImage3D(r,0,o,t.width,t.height,t.depth,0,a,s,null):p.texImage2D(r,0,o,t.width,t.height,0,a,s,null),p.bindFramebuffer(36160,e),d.framebufferTexture2D(36160,n,r,f.get(i).__webglTexture,0),p.bindFramebuffer(36160,null)}function I(t,n,r){if(d.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){let e=33189;if(r){const t=n.depthTexture,r=(t&&t.isDepthTexture&&(t.type===De?e=36012:t.type===J&&(e=33190)),N(n));d.renderbufferStorageMultisample(36161,r,e,n.width,n.height)}else d.renderbufferStorage(36161,e,n.width,n.height);d.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){if(r){const t=N(n);d.renderbufferStorageMultisample(36161,t,35056,n.width,n.height)}else d.renderbufferStorage(36161,34041,n.width,n.height);d.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=n.texture,e=m.convert(t.format),i=m.convert(t.type),a=w(t.internalFormat,e,i);if(r){const t=N(n);d.renderbufferStorageMultisample(36161,t,a,n.width,n.height)}else d.renderbufferStorage(36161,a,n.width,n.height)}d.bindRenderbuffer(36161,null)}function N(e){return g&&e.isWebGLMultisampleRenderTarget?Math.min(U,e.samples):0}let B=!1,H=!1;this.allocateTextureUnit=function(){var e=T;return e>=t&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+t),T+=1,e},this.resetTextureUnits=function(){T=0},this.setTexture2D=E,this.setTexture2DArray=function(e,t){var n=f.get(e);0<e.version&&n.__version!==e.version?P(n,e,t):(p.activeTexture(33984+t),p.bindTexture(35866,n.__webglTexture))},this.setTexture3D=function(e,t){var n=f.get(e);0<e.version&&n.__version!==e.version?P(n,e,t):(p.activeTexture(33984+t),p.bindTexture(32879,n.__webglTexture))},this.setTextureCube=S,this.setupRenderTarget=function(t){const n=t.texture,r=f.get(t),i=f.get(n);t.addEventListener("dispose",M),i.__webglTexture=d.createTexture(),i.__version=n.version,h.memory.textures++;var e=!0===t.isWebGLCubeRenderTarget,a=!0===t.isWebGLMultisampleRenderTarget,s=n.isDataTexture3D||n.isDataTexture2DArray,o=x(t)||g;if(!g||n.format!==K||n.type!==De&&n.type!==Ie||(n.format=Ne,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),e){r.__webglFramebuffer=[];for(let e=0;e<6;e++)r.__webglFramebuffer[e]=d.createFramebuffer()}else if(r.__webglFramebuffer=d.createFramebuffer(),a)if(g){r.__webglMultisampledFramebuffer=d.createFramebuffer(),r.__webglColorRenderbuffer=d.createRenderbuffer(),d.bindRenderbuffer(36161,r.__webglColorRenderbuffer);const f=m.convert(n.format),h=m.convert(n.type),g=w(n.internalFormat,f,h),i=N(t);d.renderbufferStorageMultisample(36161,i,g,t.width,t.height),p.bindFramebuffer(36160,r.__webglMultisampledFramebuffer),d.framebufferRenderbuffer(36160,36064,36161,r.__webglColorRenderbuffer),d.bindRenderbuffer(36161,null),t.depthBuffer&&(r.__webglDepthRenderbuffer=d.createRenderbuffer(),I(r.__webglDepthRenderbuffer,t,!0)),p.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(e){p.bindTexture(34067,i.__webglTexture),L(34067,n,o);for(let e=0;e<6;e++)D(r.__webglFramebuffer[e],t,36064,34069+e);_(n,o)&&b(34067,n,t.width,t.height),p.bindTexture(34067,null)}else{let e=3553;s&&(g?e=n.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),p.bindTexture(e,i.__webglTexture),L(e,n,o),D(r.__webglFramebuffer,t,36064,e),_(n,o)&&b(3553,n,t.width,t.height),p.bindTexture(3553,null)}if(t.depthBuffer){var l=t,c=f.get(l),a=!0===l.isWebGLCubeRenderTarget;if(l.depthTexture){if(a)throw new Error("target.depthTexture not supported in Cube render targets");e=c.__webglFramebuffer,s=l;if(s&&s.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(p.bindFramebuffer(36160,e),!s.depthTexture||!s.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");if(f.get(s.depthTexture).__webglTexture&&s.depthTexture.image.width===s.width&&s.depthTexture.image.height===s.height||(s.depthTexture.image.width=s.width,s.depthTexture.image.height=s.height,s.depthTexture.needsUpdate=!0),E(s.depthTexture,0),e=f.get(s.depthTexture).__webglTexture,s.depthTexture.format===$)d.framebufferTexture2D(36160,36096,3553,e,0);else{if(s.depthTexture.format!==ee)throw new Error("Unknown depthTexture format");d.framebufferTexture2D(36160,33306,3553,e,0)}}else if(a){c.__webglDepthbuffer=[];for(let e=0;e<6;e++)p.bindFramebuffer(36160,c.__webglFramebuffer[e]),c.__webglDepthbuffer[e]=d.createRenderbuffer(),I(c.__webglDepthbuffer[e],l,!1)}else p.bindFramebuffer(36160,c.__webglFramebuffer),c.__webglDepthbuffer=d.createRenderbuffer(),I(c.__webglDepthbuffer,l,!1);p.bindFramebuffer(36160,null)}},this.updateRenderTargetMipmap=function(e){var t,n,r=e.texture;_(r,x(e)||g)&&(t=e.isWebGLCubeRenderTarget?34067:3553,n=f.get(r).__webglTexture,p.bindTexture(t,n),b(t,r,e.width,e.height),p.bindTexture(t,null))},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(g){var n=f.get(t),r=(p.bindFramebuffer(36008,n.__webglMultisampledFramebuffer),p.bindFramebuffer(36009,n.__webglFramebuffer),t.width),i=t.height;let e=16384;t.depthBuffer&&(e|=256),t.stencilBuffer&&(e|=1024),d.blitFramebuffer(0,0,r,i,0,0,r,i,e,9728),p.bindFramebuffer(36160,n.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===B&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),B=!0),e=e.texture),E(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===H&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),H=!0),e=e.texture),S(e,t)}}function oa(e,n,t){const r=t.isWebGL2;return{convert:function(e){let t;if(e===Pe)return 5121;if(1017===e)return 32819;if(1018===e)return 32820;if(1019===e)return 33635;if(1010===e)return 5120;if(1011===e)return 5122;if(e===Z)return 5123;if(1013===e)return 5124;if(e===J)return 5125;if(e===De)return 5126;if(e===Ie)return r?5131:null!==(t=n.get("OES_texture_half_float"))?t.HALF_FLOAT_OES:null;if(1021===e)return 6406;if(e===K)return 6407;if(e===Ne)return 6408;if(1024===e)return 6409;if(1025===e)return 6410;if(e===$)return 6402;if(e===ee)return 34041;if(1028===e)return 6403;if(1029===e)return 36244;if(1030===e)return 33319;if(1031===e)return 33320;if(1032===e)return 36248;if(1033===e)return 36249;if(e===B||e===H||e===U||e===te){if(null===(t=n.get("WEBGL_compressed_texture_s3tc")))return null;if(e===B)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===H)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===U)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===te)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===ne||e===re||e===ie||e===ae){if(null===(t=n.get("WEBGL_compressed_texture_pvrtc")))return null;if(e===ne)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===re)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===ie)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===ae)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===e)return null!==(t=n.get("WEBGL_compressed_texture_etc1"))?t.COMPRESSED_RGB_ETC1_WEBGL:null;if((e===se||e===oe)&&null!==(t=n.get("WEBGL_compressed_texture_etc"))){if(e===se)return t.COMPRESSED_RGB8_ETC2;if(e===oe)return t.COMPRESSED_RGBA8_ETC2_EAC}return 37808===e||37809===e||37810===e||37811===e||37812===e||37813===e||37814===e||37815===e||37816===e||37817===e||37818===e||37819===e||37820===e||37821===e||37840===e||37841===e||37842===e||37843===e||37844===e||37845===e||37846===e||37847===e||37848===e||37849===e||37850===e||37851===e||37852===e||37853===e?null!==(t=n.get("WEBGL_compressed_texture_astc"))?e:null:36492===e?null!==(t=n.get("EXT_texture_compression_bptc"))?e:null:e===Q?r?34042:null!==(t=n.get("WEBGL_depth_texture"))?t.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}ra.prototype.isMeshDistanceMaterial=!0;class la extends R{constructor(e=[]){super(),this.cameras=e}}la.prototype.isArrayCamera=!0;class ca extends c{constructor(){super(),this.type="Group"}}function ha(){this._targetRay=null,this._grip=null,this._hand=null}function ua(e,n){const r=this,a=e.state;let f=null,i=1,s=null,o="local-floor",l;const c=[],h=new Map,m=new R,g=(m.layers.enable(1),m.viewport=new Ae,new R),u=(g.layers.enable(2),g.viewport=new Ae,[m,g]),v=new la;v.layers.enable(1),v.layers.enable(2);let y=null,x=null;function d(e){var t=h.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function p(){h.forEach(function(e,t){e.disconnect(t)}),h.clear(),y=null,x=null,a.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),E.stop(),r.isPresenting=!1,r.dispatchEvent({type:"sessionend"})}function _(t){var n=f.inputSources;for(let e=0;e<c.length;e++)h.set(n[e],c[e]);for(let e=0;e<t.removed.length;e++){var r=t.removed[e],i=h.get(r);i&&(i.dispatchEvent({type:"disconnected",data:r}),h.delete(r))}for(let e=0;e<t.added.length;e++){var a=t.added[e],s=h.get(a);s&&s.dispatchEvent({type:"connected",data:a})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=c[e];return void 0===t&&(t=new ha,c[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=c[e];return void 0===t&&(t=new ha,c[e]=t),t.getGripSpace()},this.getHand=function(e){let t=c[e];return void 0===t&&(t=new ha,c[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){i=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){o=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return f},this.setSession=async function(e){if(null!==(f=e)){f.addEventListener("select",d),f.addEventListener("selectstart",d),f.addEventListener("selectend",d),f.addEventListener("squeeze",d),f.addEventListener("squeezestart",d),f.addEventListener("squeezeend",d),f.addEventListener("end",p),f.addEventListener("inputsourceschange",_);const e=n.getContextAttributes();!0!==e.xrCompatible&&await n.makeXRCompatible();var t={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:i},t=new XRWebGLLayer(f,n,t);f.updateRenderState({baseLayer:t}),s=await f.requestReferenceSpace(o),E.setContext(f),E.start(),r.isPresenting=!0,r.dispatchEvent({type:"sessionstart"})}};const b=new Re,w=new Re;function M(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.getCamera=function(e){v.near=g.near=m.near=e.near,v.far=g.far=m.far=e.far,y===v.near&&x===v.far||(f.updateRenderState({depthNear:v.near,depthFar:v.far}),y=v.near,x=v.far);var t=e.parent,n=v.cameras;M(v,t);for(let e=0;e<n.length;e++)M(n[e],t);e.matrixWorld.copy(v.matrixWorld),e.matrix.copy(v.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);var r,i,a,s,o,l,c,h,u,d,p=e.children;for(let e=0,t=p.length;e<t;e++)p[e].updateMatrixWorld(!0);return 2===n.length?(e=v,r=m,i=g,b.setFromMatrixPosition(r.matrixWorld),w.setFromMatrixPosition(i.matrixWorld),a=b.distanceTo(w),s=r.projectionMatrix.elements,i=i.projectionMatrix.elements,o=s[14]/(s[10]-1),l=s[14]/(s[10]+1),c=(s[9]+1)/s[5],h=(s[9]-1)/s[5],s=(s[8]-1)/s[0],i=(i[8]+1)/i[0],u=o*s,d=o*i,s=(i=a/(i-s))*-s,r.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(s),e.translateZ(i),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),r=o+i,o=l+i,e.projectionMatrix.makePerspective(u-s,a-s+d,c*l/o*r,h*l/o*r,r,o)):v.projectionMatrix.copy(m.projectionMatrix),v};let T=null;const E=new sr;E.setAnimationLoop(function(n,r){if(null!==(l=r.getViewerPose(s))){const n=l.views,r=f.renderState.baseLayer;a.bindXRFramebuffer(r.framebuffer);let t=!1;n.length!==v.cameras.length&&(v.cameras.length=0,t=!0);for(let e=0;e<n.length;e++){const f=n[e],i=r.getViewport(f),s=u[e];s.matrix.fromArray(f.transform.matrix),s.projectionMatrix.fromArray(f.projectionMatrix),s.viewport.set(i.x,i.y,i.width,i.height),0===e&&v.matrix.copy(s.matrix),!0===t&&v.cameras.push(s)}}var t=f.inputSources;for(let e=0;e<c.length;e++){const a=c[e],f=t[e];a.update(f,r,s)}T&&T(n,r)}),this.setAnimationLoop=function(e){T=e},this.dispose=function(){}}function da(a){function f(e,t){e.opacity.value=t.opacity,t.color&&e.diffuse.value.copy(t.color),t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.specularMap&&(e.specularMap.value=t.specularMap);var n=a.get(t).envMap;if(n){e.envMap.value=n,e.flipEnvMap.value=n.isCubeTexture&&n._needsFlipEnvMap?-1:1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio;const r=a.get(n).__maxMipLevel;void 0!==r&&(e.maxMipLevel.value=r)}let r,i;t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity),t.map?r=t.map:t.specularMap?r=t.specularMap:t.displacementMap?r=t.displacementMap:t.normalMap?r=t.normalMap:t.bumpMap?r=t.bumpMap:t.roughnessMap?r=t.roughnessMap:t.metalnessMap?r=t.metalnessMap:t.alphaMap?r=t.alphaMap:t.emissiveMap?r=t.emissiveMap:t.clearcoatMap?r=t.clearcoatMap:t.clearcoatNormalMap?r=t.clearcoatNormalMap:t.clearcoatRoughnessMap&&(r=t.clearcoatRoughnessMap),void 0!==r&&(!0===(r=r.isWebGLRenderTarget?r.texture:r).matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix)),t.aoMap?i=t.aoMap:t.lightMap&&(i=t.lightMap),void 0!==i&&(!0===(i=i.isWebGLRenderTarget?i.texture:i).matrixAutoUpdate&&i.updateMatrix(),e.uv2Transform.value.copy(i.matrix))}function m(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side)&&(e.bumpScale.value*=-1),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side)&&e.normalScale.value.negate(),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),a.get(t).envMap&&(e.envMapIntensity.value=t.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(t,n,r,i){if(n.isMeshBasicMaterial)f(t,n);else if(n.isMeshLambertMaterial)f(t,n),p=t,n.emissiveMap&&(p.emissiveMap.value=n.emissiveMap);else if(n.isMeshToonMaterial)f(t,n),p=t,(d=n).gradientMap&&(p.gradientMap.value=d.gradientMap),d.emissiveMap&&(p.emissiveMap.value=d.emissiveMap),d.bumpMap&&(p.bumpMap.value=d.bumpMap,p.bumpScale.value=d.bumpScale,1===d.side)&&(p.bumpScale.value*=-1),d.normalMap&&(p.normalMap.value=d.normalMap,p.normalScale.value.copy(d.normalScale),1===d.side)&&p.normalScale.value.negate(),d.displacementMap&&(p.displacementMap.value=d.displacementMap,p.displacementScale.value=d.displacementScale,p.displacementBias.value=d.displacementBias);else if(n.isMeshPhongMaterial)f(t,n),d=n,(u=t).specular.value.copy(d.specular),u.shininess.value=Math.max(d.shininess,1e-4),d.emissiveMap&&(u.emissiveMap.value=d.emissiveMap),d.bumpMap&&(u.bumpMap.value=d.bumpMap,u.bumpScale.value=d.bumpScale,1===d.side)&&(u.bumpScale.value*=-1),d.normalMap&&(u.normalMap.value=d.normalMap,u.normalScale.value.copy(d.normalScale),1===d.side)&&u.normalScale.value.negate(),d.displacementMap&&(u.displacementMap.value=d.displacementMap,u.displacementScale.value=d.displacementScale,u.displacementBias.value=d.displacementBias);else if(n.isMeshStandardMaterial)f(t,n),n.isMeshPhysicalMaterial?(m(u=t,h=n),u.reflectivity.value=h.reflectivity,u.clearcoat.value=h.clearcoat,u.clearcoatRoughness.value=h.clearcoatRoughness,h.sheen&&u.sheen.value.copy(h.sheen),h.clearcoatMap&&(u.clearcoatMap.value=h.clearcoatMap),h.clearcoatRoughnessMap&&(u.clearcoatRoughnessMap.value=h.clearcoatRoughnessMap),h.clearcoatNormalMap&&(u.clearcoatNormalScale.value.copy(h.clearcoatNormalScale),u.clearcoatNormalMap.value=h.clearcoatNormalMap,1===h.side)&&u.clearcoatNormalScale.value.negate(),u.transmission.value=h.transmission,h.transmissionMap&&(u.transmissionMap.value=h.transmissionMap)):m(t,n);else if(n.isMeshMatcapMaterial)f(t,n),h=t,(c=n).matcap&&(h.matcap.value=c.matcap),c.bumpMap&&(h.bumpMap.value=c.bumpMap,h.bumpScale.value=c.bumpScale,1===c.side)&&(h.bumpScale.value*=-1),c.normalMap&&(h.normalMap.value=c.normalMap,h.normalScale.value.copy(c.normalScale),1===c.side)&&h.normalScale.value.negate(),c.displacementMap&&(h.displacementMap.value=c.displacementMap,h.displacementScale.value=c.displacementScale,h.displacementBias.value=c.displacementBias);else if(n.isMeshDepthMaterial)f(t,n),c=t,(l=n).displacementMap&&(c.displacementMap.value=l.displacementMap,c.displacementScale.value=l.displacementScale,c.displacementBias.value=l.displacementBias);else if(n.isMeshDistanceMaterial)f(t,n),l=t,(o=n).displacementMap&&(l.displacementMap.value=o.displacementMap,l.displacementScale.value=o.displacementScale,l.displacementBias.value=o.displacementBias),l.referencePosition.value.copy(o.referencePosition),l.nearDistance.value=o.nearDistance,l.farDistance.value=o.farDistance;else if(n.isMeshNormalMaterial)f(t,n),o=t,(e=n).bumpMap&&(o.bumpMap.value=e.bumpMap,o.bumpScale.value=e.bumpScale,1===e.side)&&(o.bumpScale.value*=-1),e.normalMap&&(o.normalMap.value=e.normalMap,o.normalScale.value.copy(e.normalScale),1===e.side)&&o.normalScale.value.negate(),e.displacementMap&&(o.displacementMap.value=e.displacementMap,o.displacementScale.value=e.displacementScale,o.displacementBias.value=e.displacementBias);else if(n.isLineBasicMaterial)e=n,(s=t).diffuse.value.copy(e.color),s.opacity.value=e.opacity,n.isLineDashedMaterial&&(s=n,(a=t).dashSize.value=s.dashSize,a.totalSize.value=s.dashSize+s.gapSize,a.scale.value=s.scale);else if(n.isPointsMaterial){s=n,(a=t).diffuse.value.copy(s.color),a.opacity.value=s.opacity,a.size.value=s.size*r,a.scale.value=.5*i,s.map&&(a.map.value=s.map),s.alphaMap&&(a.alphaMap.value=s.alphaMap);let e;s.map?e=s.map:s.alphaMap&&(e=s.alphaMap),void 0!==e&&(!0===e.matrixAutoUpdate&&e.updateMatrix(),a.uvTransform.value.copy(e.matrix))}else if(n.isSpriteMaterial){i=n,(r=t).diffuse.value.copy(i.color),r.opacity.value=i.opacity,r.rotation.value=i.rotation,i.map&&(r.map.value=i.map),i.alphaMap&&(r.alphaMap.value=i.alphaMap);let e;i.map?e=i.map:i.alphaMap&&(e=i.alphaMap),void 0!==e&&(!0===e.matrixAutoUpdate&&e.updateMatrix(),r.uvTransform.value.copy(e.matrix))}else n.isShadowMaterial?(t.color.value.copy(n.color),t.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1);var a,s,e,o,l,c,h,u,d,p}}}function n(e){const i=void 0!==(e=e||{}).canvas?e.canvas:((j=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")).style.display="block",j),n=void 0!==e.context?e.context:null,a=void 0!==e.alpha&&e.alpha,O=void 0===e.depth||e.depth,z=void 0===e.stencil||e.stencil,F=void 0!==e.antialias&&e.antialias,G=void 0===e.premultipliedAlpha||e.premultipliedAlpha,k=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,V=void 0!==e.powerPreference?e.powerPreference:"default",W=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;var j;let h=null,y=null;const s=[],o=[],x=(this.domElement=i,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Be,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,this);let q=!1,X=0,Y=0,_=null,b=-1,w=null;const u=new Ae,Z=new Ae;let J=null,r=i.width,M=i.height,T=1,Q=null,K=null;const l=new Ae(0,0,r,M),c=new Ae(0,0,r,M);let $=!1;const ee=new ar;let te=!1,ne=!1;const d=new Le,E=new Re,re={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ie(){return null===_?T:1}let p,S,A,f,R,L,C,m,ae,g,v,se,oe,le,P,D,I,ce,he,ue,N,B,H=n;function de(t,n){for(let e=0;e<t.length;e++){var r=t[e],r=i.getContext(r,n);if(null!==r)return r}return null}try{const e={alpha:a,depth:O,stencil:z,antialias:F,premultipliedAlpha:G,preserveDrawingBuffer:k,powerPreference:V,failIfMajorPerformanceCaveat:W};if(i.addEventListener("webglcontextlost",fe,!1),i.addEventListener("webglcontextrestored",me,!1),null===H){const i=["webgl2","webgl","experimental-webgl"];if(!0===x.isWebGL1Renderer&&i.shift(),null===(H=de(i,e)))throw de(i)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===H.getShaderPrecisionFormat&&(H.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function pe(){p=new gr(H),S=new pr(H,p,e),p.init(S),N=new oa(H,p,S),A=new aa(H,p,S),f=new xr(H),R=new ji,L=new sa(H,p,A,R,S,N,f),C=new mr(x),m=new or(H,S),B=new ur(H,p,m,S),ae=new vr(H,m,f,B),g=new Mr(H,ae,m,f),ce=new wr(H),P=new fr(R),v=new Wi(x,C,p,S,B,P),se=new da(R),oe=new Zi(R),le=new ta(p,S),I=new hr(x,C,A,g,G),D=new ia(x,g,S),he=new dr(H,p,f,S),ue=new yr(H,p,f,S),f.programs=v.programs,x.capabilities=S,x.extensions=p,x.properties=R,x.renderLists=oe,x.shadowMap=D,x.state=A,x.info=f}pe();const U=new ua(x,H);function fe(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),q=!0}function me(){console.log("THREE.WebGLRenderer: Context Restored."),q=!1;var e=f.autoReset,t=D.enabled,n=D.autoUpdate,r=D.needsUpdate,i=D.type;pe(),f.autoReset=e,D.enabled=t,D.autoUpdate=n,D.needsUpdate=r,D.type=i}function ge(e){var t,e=e.target;e.removeEventListener("dispose",ge),t=e=e,void 0!==(t=R.get(t).programs)&&t.forEach(function(e){v.releaseProgram(e)}),R.remove(e)}this.xr=U,this.getContext=function(){return H},this.getContextAttributes=function(){return H.getContextAttributes()},this.forceContextLoss=function(){var e=p.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){var e=p.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return T},this.setPixelRatio=function(e){void 0!==e&&(T=e,this.setSize(r,M,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new Se),e.set(r,M)},this.setSize=function(e,t,n){U.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(r=e,M=t,i.width=Math.floor(e*T),i.height=Math.floor(t*T),!1!==n&&(i.style.width=e+"px",i.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new Se),e.set(r*T,M*T).floor()},this.setDrawingBufferSize=function(e,t,n){r=e,M=t,T=n,i.width=Math.floor(e*n),i.height=Math.floor(t*n),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new Ae),e.copy(u)},this.getViewport=function(e){return e.copy(l)},this.setViewport=function(e,t,n,r){e.isVector4?l.set(e.x,e.y,e.z,e.w):l.set(e,t,n,r),A.viewport(u.copy(l).multiplyScalar(T).floor())},this.getScissor=function(e){return e.copy(c)},this.setScissor=function(e,t,n,r){e.isVector4?c.set(e.x,e.y,e.z,e.w):c.set(e,t,n,r),A.scissor(Z.copy(c).multiplyScalar(T).floor())},this.getScissorTest=function(){return $},this.setScissorTest=function(e){A.setScissorTest($=e)},this.setOpaqueSort=function(e){Q=e},this.setTransparentSort=function(e){K=e},this.getClearColor=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),e=new Ce),e.copy(I.getClearColor())},this.setClearColor=function(){I.setClearColor.apply(I,arguments)},this.getClearAlpha=function(){return I.getClearAlpha()},this.setClearAlpha=function(){I.setClearAlpha.apply(I,arguments)},this.clear=function(e,t,n){let r=0;void 0!==e&&!e||(r|=16384),void 0!==t&&!t||(r|=256),void 0!==n&&!n||(r|=1024),H.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){i.removeEventListener("webglcontextlost",fe,!1),i.removeEventListener("webglcontextrestored",me,!1),oe.dispose(),le.dispose(),R.dispose(),C.dispose(),g.dispose(),B.dispose(),U.dispose(),U.removeEventListener("sessionstart",ye),U.removeEventListener("sessionend",xe),t.stop()},this.renderBufferImmediate=function(e,t){B.initAttributes();var n=R.get(e),t=(e.hasPositions&&!n.position&&(n.position=H.createBuffer()),e.hasNormals&&!n.normal&&(n.normal=H.createBuffer()),e.hasUvs&&!n.uv&&(n.uv=H.createBuffer()),e.hasColors&&!n.color&&(n.color=H.createBuffer()),t.getAttributes());e.hasPositions&&(H.bindBuffer(34962,n.position),H.bufferData(34962,e.positionArray,35048),B.enableAttribute(t.position),H.vertexAttribPointer(t.position,3,5126,!1,0,0)),e.hasNormals&&(H.bindBuffer(34962,n.normal),H.bufferData(34962,e.normalArray,35048),B.enableAttribute(t.normal),H.vertexAttribPointer(t.normal,3,5126,!1,0,0)),e.hasUvs&&(H.bindBuffer(34962,n.uv),H.bufferData(34962,e.uvArray,35048),B.enableAttribute(t.uv),H.vertexAttribPointer(t.uv,2,5126,!1,0,0)),e.hasColors&&(H.bindBuffer(34962,n.color),H.bufferData(34962,e.colorArray,35048),B.enableAttribute(t.color),H.vertexAttribPointer(t.color,3,5126,!1,0,0)),B.disableUnusedAttributes(),H.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,r,i,a){null===t&&(t=re);var s=i.isMesh&&i.matrixWorld.determinant()<0,e=Te(e,t,r,i);A.setMaterial(r,s);let o=n.index;t=n.attributes.position;if(null===o){if(void 0===t||0===t.count)return}else if(0===o.count)return;let l,c=1,h=(!0===r.wireframe&&(o=ae.getWireframeAttribute(n),c=2),(r.morphTargets||r.morphNormals)&&ce.update(i,n,r,e),B.setup(i,r,e,n,o),he);null!==o&&(l=m.get(o),(h=ue).setIndex(l));var s=(null!==o?o:t).count,e=n.drawRange.start*c,t=n.drawRange.count*c,u=null!==a?a.start*c:0,a=null!==a?a.count*c:1/0,d=Math.max(e,u),s=Math.min(s,e+t,u+a)-1,t=Math.max(0,s-d+1);if(0!==t){if(i.isMesh)!0===r.wireframe?(A.setLineWidth(r.wireframeLinewidth*ie()),h.setMode(1)):h.setMode(4);else if(i.isLine){let e=r.linewidth;void 0===e&&(e=1),A.setLineWidth(e*ie()),i.isLineSegments?h.setMode(1):i.isLineLoop?h.setMode(2):h.setMode(3)}else i.isPoints?h.setMode(0):i.isSprite&&h.setMode(4);if(i.isInstancedMesh)h.renderInstances(d,t,i.count);else if(n.isInstancedBufferGeometry){const e=Math.min(n.instanceCount,n._maxInstanceCount);h.renderInstances(d,t,e)}else h.render(d,t)}},this.compile=function(r,t){(y=le.get(r)).init(),r.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(y.pushLight(e),e.castShadow)&&y.pushShadow(e)}),y.setupLights(),r.traverse(function(t){var n=t.material;if(n)if(Array.isArray(n))for(let e=0;e<n.length;e++)we(n[e],r,t);else we(n,r,t)})};let ve=null;function ye(){t.stop()}function xe(){t.start()}const t=new sr;function _e(n,r,i){const a=!0===r.isScene?r.overrideMaterial:null;for(let e=0,t=n.length;e<t;e++){var s=n[e],o=s.object,l=s.geometry,c=null===a?s.material:a,h=s.group;if(i.isArrayCamera){const n=i.cameras;for(let e=0,t=n.length;e<t;e++){const a=n[e];o.layers.test(a.layers)&&(A.viewport(u.copy(a.viewport)),y.setupLightsView(a),be(o,r,a,l,c,h))}}else be(o,r,i,l,c,h)}}function be(e,t,n,r,i,a){if(e.onBeforeRender(x,t,n,r,i,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){const r=Te(n,t,i,e);A.setMaterial(i),B.reset(),s=r,e.render(function(e){x.renderBufferImmediate(e,s)})}else x.renderBufferDirect(n,t,r,i,e,a);var s;e.onAfterRender(x,t,n,r,i,a)}function we(e,t,n){!0!==t.isScene&&(t=re);var r=R.get(e),i=y.state.lights,a=y.state.shadowsArray,s=i.state.version,a=v.getParameters(e,i.state,a,t,n),n=v.getProgramCacheKey(a);let o=r.programs,l=(r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=C.get(e.envMap||r.environment),void 0===o&&(e.addEventListener("dispose",ge),o=new Map,r.programs=o),o.get(n));if(void 0!==l){if(r.currentProgram===l&&r.lightsStateVersion===s)return Me(e,a),l}else a.uniforms=v.getUniforms(e),e.onBeforeCompile(a,x),l=v.acquireProgram(a,n),o.set(n,l),r.uniforms=a.uniforms;t=r.uniforms,(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(t.clippingPlanes=P.uniform),Me(e,a),r.needsLights=e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights,r.lightsStateVersion=s,r.needsLights&&(t.ambientLightColor.value=i.state.ambient,t.lightProbe.value=i.state.probe,t.directionalLights.value=i.state.directional,t.directionalLightShadows.value=i.state.directionalShadow,t.spotLights.value=i.state.spot,t.spotLightShadows.value=i.state.spotShadow,t.rectAreaLights.value=i.state.rectArea,t.ltc_1.value=i.state.rectAreaLTC1,t.ltc_2.value=i.state.rectAreaLTC2,t.pointLights.value=i.state.point,t.pointLightShadows.value=i.state.pointShadow,t.hemisphereLights.value=i.state.hemi,t.directionalShadowMap.value=i.state.directionalShadowMap,t.directionalShadowMatrix.value=i.state.directionalShadowMatrix,t.spotShadowMap.value=i.state.spotShadowMap,t.spotShadowMatrix.value=i.state.spotShadowMatrix,t.pointShadowMap.value=i.state.pointShadowMap,t.pointShadowMatrix.value=i.state.pointShadowMatrix),n=l.getUniforms(),a=Ei.seqWithValue(n.seq,t);return r.currentProgram=l,r.uniformsList=a,l}function Me(e,t){e=R.get(e);e.outputEncoding=t.outputEncoding,e.instancing=t.instancing,e.numClippingPlanes=t.numClippingPlanes,e.numIntersection=t.numClipIntersection,e.vertexAlphas=t.vertexAlphas}function Te(e,t,n,r){!0!==t.isScene&&(t=re),L.resetTextureUnits();const i=t.fog,a=n.isMeshStandardMaterial?t.environment:null,s=null===_?x.outputEncoding:_.texture.encoding,o=C.get(n.envMap||a),l=!0===n.vertexColors&&r.geometry.attributes.color&&4===r.geometry.attributes.color.itemSize,c=R.get(n),h=y.state.lights;if(!0===te&&(!0===ne||e!==w)){const t=e===w&&n.id===b;P.setState(n,e,t)}let u=!1,d=(n.version===c.__version?(c.needsLights&&c.lightsStateVersion!==h.state.version||c.outputEncoding!==s||r.isInstancedMesh&&!1===c.instancing||!r.isInstancedMesh&&!0===c.instancing||c.envMap!==o||n.fog&&c.fog!==i||void 0!==c.numClippingPlanes&&(c.numClippingPlanes!==P.numPlanes||c.numIntersection!==P.numIntersection)||c.vertexAlphas!==l)&&(u=!0):(u=!0,c.__version=n.version),c.currentProgram),p=!1,f=!1,m=!1;var g=(d=!0===u?we(n,t,r):d).getUniforms(),t=c.uniforms;if(A.useProgram(d.program)&&(p=!0,f=!0,m=!0),n.id!==b&&(b=n.id,f=!0),p||w!==e){if(g.setValue(H,"projectionMatrix",e.projectionMatrix),S.logarithmicDepthBuffer&&g.setValue(H,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),w!==e&&(w=e,f=!0,m=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const t=g.map.cameraPosition;void 0!==t&&t.setValue(H,E.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&g.setValue(H,"isOrthographic",!0===e.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&g.setValue(H,"viewMatrix",e.matrixWorldInverse)}if(n.skinning){g.setOptional(H,r,"bindMatrix"),g.setOptional(H,r,"bindMatrixInverse");const e=r.skeleton;if(e){const t=e.bones;if(S.floatVertexTextures){if(null===e.boneTexture){var v=Math.sqrt(4*t.length),v=Ee.ceilPowerOfTwo(v);v=Math.max(v,4);const r=new Float32Array(v*v*4),i=(r.set(e.boneMatrices),new nr(r,v,v,Ne,De));e.boneMatrices=r,e.boneTexture=i,e.boneTextureSize=v}g.setValue(H,"boneTexture",e.boneTexture,L),g.setValue(H,"boneTextureSize",e.boneTextureSize)}else g.setOptional(H,e,"boneMatrices")}}return!f&&c.receiveShadow===r.receiveShadow||(c.receiveShadow=r.receiveShadow,g.setValue(H,"receiveShadow",r.receiveShadow)),f&&(g.setValue(H,"toneMappingExposure",x.toneMappingExposure),c.needsLights&&(e=m,(v=t).ambientLightColor.needsUpdate=e,v.lightProbe.needsUpdate=e,v.directionalLights.needsUpdate=e,v.directionalLightShadows.needsUpdate=e,v.pointLights.needsUpdate=e,v.pointLightShadows.needsUpdate=e,v.spotLights.needsUpdate=e,v.spotLightShadows.needsUpdate=e,v.rectAreaLights.needsUpdate=e,v.hemisphereLights.needsUpdate=e),i&&n.fog&&se.refreshFogUniforms(t,i),se.refreshMaterialUniforms(t,n,T,M),Ei.upload(H,c.uniformsList,t,L)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(Ei.upload(H,c.uniformsList,t,L),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&g.setValue(H,"center",r.center),g.setValue(H,"modelViewMatrix",r.modelViewMatrix),g.setValue(H,"normalMatrix",r.normalMatrix),g.setValue(H,"modelMatrix",r.matrixWorld),d}t.setAnimationLoop(function(e){ve&&ve(e)}),"undefined"!=typeof window&&t.setContext(window),this.setAnimationLoop=function(e){ve=e,U.setAnimationLoop(e),null===e?t.stop():t.start()},U.addEventListener("sessionstart",ye),U.addEventListener("sessionend",xe),this.render=function(e,t){let n,r;var i,a;void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),r=arguments[3]),void 0!==t&&!0!==t.isCamera?console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."):!0!==q&&(!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===U.enabled&&!0===U.isPresenting&&(t=U.getCamera(t)),!0===e.isScene&&e.onBeforeRender(x,e,t,n||_),(y=le.get(e,o.length)).init(),o.push(y),d.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ee.setFromProjectionMatrix(d),ne=this.localClippingEnabled,te=P.init(this.clippingPlanes,ne,t),(h=oe.get(e,s.length)).init(),s.push(h),function n(r,i,a,s){if(!1!==r.visible){if(r.layers.test(i.layers))if(r.isGroup)a=r.renderOrder;else if(r.isLOD)!0===r.autoUpdate&&r.update(i);else if(r.isLight)y.pushLight(r),r.castShadow&&y.pushShadow(r);else if(r.isSprite){if(!r.frustumCulled||ee.intersectsSprite(r)){s&&E.setFromMatrixPosition(r.matrixWorld).applyMatrix4(d);const i=g.update(r),c=r.material;c.visible&&h.push(r,i,c,a,E.z,null)}}else if(r.isImmediateRenderObject)s&&E.setFromMatrixPosition(r.matrixWorld).applyMatrix4(d),h.push(r,null,r.material,a,E.z,null);else if((r.isMesh||r.isLine||r.isPoints)&&(r.isSkinnedMesh&&r.skeleton.frame!==f.render.frame&&(r.skeleton.update(),r.skeleton.frame=f.render.frame),!r.frustumCulled||ee.intersectsObject(r))){s&&E.setFromMatrixPosition(r.matrixWorld).applyMatrix4(d);const i=g.update(r),c=r.material;if(Array.isArray(c)){const s=i.groups;for(let e=0,t=s.length;e<t;e++){var o=s[e],l=c[o.materialIndex];l&&l.visible&&h.push(r,i,l,a,E.z,o)}}else c.visible&&h.push(r,i,c,a,E.z,null)}const c=r.children;for(let e=0,t=c.length;e<t;e++)n(c[e],i,a,s)}}(e,t,0,x.sortObjects),h.finish(),!0===x.sortObjects&&h.sort(Q,K),!0===te&&P.beginShadows(),i=y.state.shadowsArray,D.render(i,e,t),y.setupLights(),y.setupLightsView(t),!0===te&&P.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),I.render(h,e,t,r),i=h.opaque,a=h.transparent,0<i.length&&_e(i,e,t),0<a.length&&_e(a,e,t),null!==_&&(L.updateRenderTargetMipmap(_),L.updateMultisampleRenderTarget(_)),!0===e.isScene&&e.onAfterRender(x,e,t),A.buffers.depth.setTest(!0),A.buffers.depth.setMask(!0),A.buffers.color.setMask(!0),A.setPolygonOffset(!1),B.resetDefaultState(),b=-1,w=null,o.pop(),y=0<o.length?o[o.length-1]:null,s.pop(),h=0<s.length?s[s.length-1]:null)},this.getActiveCubeFace=function(){return X},this.getActiveMipmapLevel=function(){return Y},this.getRenderTarget=function(){return _},this.setRenderTarget=function(e,t=0,n=0){_=e,X=t,Y=n,e&&void 0===R.get(e).__webglFramebuffer&&L.setupRenderTarget(e);let r=null,i=!1,a=!1;if(e){const n=e.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(a=!0);var s=R.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(r=s[t],i=!0):r=e.isWebGLMultisampleRenderTarget?R.get(e).__webglMultisampledFramebuffer:s,u.copy(e.viewport),Z.copy(e.scissor),J=e.scissorTest}else u.copy(l).multiplyScalar(T).floor(),Z.copy(c).multiplyScalar(T).floor(),J=$;if(A.bindFramebuffer(36160,r),A.viewport(u),A.scissor(Z),A.setScissorTest(J),i){const r=R.get(e.texture);H.framebufferTexture2D(36160,36064,34069+t,r.__webglTexture,n)}else if(a){const r=R.get(e.texture),i=t||0;H.framebufferTextureLayer(36160,36064,r.__webglTexture,n||0,i)}},this.readRenderTargetPixels=function(t,n,r,i,a,s,o){if(t&&t.isWebGLRenderTarget){let e=R.get(t).__webglFramebuffer;if(e=t.isWebGLCubeRenderTarget&&void 0!==o?e[o]:e){A.bindFramebuffer(36160,e);try{const o=t.texture,e=o.format,c=o.type;var l;e!==Ne&&N.convert(e)!==H.getParameter(35739)?console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."):(l=c===Ie&&(p.has("EXT_color_buffer_half_float")||S.isWebGL2&&p.has("EXT_color_buffer_float")),c===Pe||N.convert(c)===H.getParameter(35738)||c===De&&(S.isWebGL2||p.has("OES_texture_float")||p.has("WEBGL_color_buffer_float"))||l?36053===H.checkFramebufferStatus(36160)?0<=n&&n<=t.width-i&&0<=r&&r<=t.height-a&&H.readPixels(n,r,i,a,N.convert(e),N.convert(c),s):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."):console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."))}finally{const t=null!==_?R.get(_).__webglFramebuffer:null;A.bindFramebuffer(36160,t)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,t,n=0){var r=Math.pow(2,-n),i=Math.floor(t.image.width*r),r=Math.floor(t.image.height*r),a=N.convert(t.format);L.setTexture2D(t,0),H.copyTexImage2D(3553,n,a,e.x,e.y,i,r,0),A.unbindTexture()},this.copyTextureToTexture=function(e,t,n,r=0){var i=t.image.width,a=t.image.height,s=N.convert(n.format),o=N.convert(n.type);L.setTexture2D(n,0),H.pixelStorei(37440,n.flipY),H.pixelStorei(37441,n.premultiplyAlpha),H.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?H.texSubImage2D(3553,r,e.x,e.y,i,a,s,o,t.image.data):t.isCompressedTexture?H.compressedTexSubImage2D(3553,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):H.texSubImage2D(3553,r,e.x,e.y,s,o,t.image),0===r&&n.generateMipmaps&&H.generateMipmap(3553),A.unbindTexture()},this.copyTextureToTexture3D=function(t,n,r,i,a=0){if(x.isWebGL1Renderer)console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");else{var{width:r,height:s,data:o}=r.image,l=N.convert(i.format),c=N.convert(i.type);let e;if(i.isDataTexture3D)L.setTexture3D(i,0),e=32879;else{if(!i.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");L.setTexture2DArray(i,0),e=35866}H.pixelStorei(37440,i.flipY),H.pixelStorei(37441,i.premultiplyAlpha),H.pixelStorei(3317,i.unpackAlignment);var h=H.getParameter(3314),u=H.getParameter(32878),d=H.getParameter(3316),p=H.getParameter(3315),f=H.getParameter(32877);H.pixelStorei(3314,r),H.pixelStorei(32878,s),H.pixelStorei(3316,t.min.x),H.pixelStorei(3315,t.min.y),H.pixelStorei(32877,t.min.z),H.texSubImage3D(e,a,n.x,n.y,n.z,t.max.x-t.min.x+1,t.max.y-t.min.y+1,t.max.z-t.min.z+1,l,c,o),H.pixelStorei(3314,h),H.pixelStorei(32878,u),H.pixelStorei(3316,d),H.pixelStorei(3315,p),H.pixelStorei(32877,f),0===a&&i.generateMipmaps&&H.generateMipmap(e),A.unbindTexture()}},this.initTexture=function(e){L.setTexture2D(e,0),A.unbindTexture()},this.resetState=function(){X=0,Y=0,_=null,A.reset(),B.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}ca.prototype.isGroup=!0,Object.assign(ha.prototype,{constructor:ha,getHandSpace:function(){return null===this._hand&&(this._hand=new ca,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new ca,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new ca,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(e,t,n){let r=null,i=null,a=null;const s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==s&&null!==(r=t.getPose(e.targetRaySpace,n))&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale)),l&&e.hand){a=!0;for(const r of e.hand.values()){const e=t.getJointPose(r,n);if(void 0===l.joints[r.jointName]){const e=new ca;e.matrixAutoUpdate=!1,e.visible=!1,l.joints[r.jointName]=e,l.add(e)}const i=l.joints[r.jointName];null!==e&&(i.matrix.fromArray(e.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.jointRadius=e.radius),i.visible=null!==e}const r=l.joints["index-finger-tip"],i=l.joints["thumb-tip"],s=r.position.distanceTo(i.position),o=.02;l.inputState.pinching&&.025<s?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&s<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&null!==(i=t.getPose(e.gripSpace,n))&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale));return null!==s&&(s.visible=null!==r),null!==o&&(o.visible=null!==i),null!==l&&(l.visible=null!==a),this}}),Object.assign(ua.prototype,Me.prototype);class pa extends n{}class fa{constructor(e,t=25e-5){this.name="",this.color=new Ce(e),this.density=t}clone(){return new fa(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}fa.prototype.isFogExp2=pa.prototype.isWebGL1Renderer=!0;class ma{constructor(e,t=1,n=1e3){this.name="",this.color=new Ce(e),this.near=t,this.far=n}clone(){return new ma(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}ma.prototype.isFog=!0;class ga extends c{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){var t=super.toJSON(e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}function va(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=_e,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Ee.generateUUID()}ga.prototype.isScene=!0,Object.defineProperty(va.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(va.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(n,r,i){n*=this.stride,i*=r.stride;for(let e=0,t=this.stride;e<t;e++)this.array[n+e]=r.array[i+e];return this},set:function(e,t=0){return this.array.set(e,t),this},clone:function(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Ee.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);e=new va(new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),this.stride);return e.setUsage(this.usage),e},onUpload:function(e){return this.onUploadCallback=e,this},toJSON:function(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Ee.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const o=new Re;function ya(e,t,n,r){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===r}Object.defineProperties(ya.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(e){this.data.needsUpdate=e}}}),Object.assign(ya.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(n){for(let e=0,t=this.data.count;e<t;e++)o.x=this.getX(e),o.y=this.getY(e),o.z=this.getZ(e),o.applyMatrix4(n),this.setXYZ(e,o.x,o.y,o.z);return this},applyNormalMatrix:function(n){for(let e=0,t=this.count;e<t;e++)o.x=this.getX(e),o.y=this.getY(e),o.z=this.getZ(e),o.applyNormalMatrix(n),this.setXYZ(e,o.x,o.y,o.z);return this},transformDirection:function(n){for(let e=0,t=this.count;e<t;e++)o.x=this.getX(e),o.y=this.getY(e),o.z=this.getZ(e),o.transformDirection(n),this.setXYZ(e,o.x,o.y,o.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=i,this},clone:function(t){if(void 0!==t)return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new ya(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){var n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new E(new this.array.constructor(t),this.itemSize,this.normalized)}},toJSON:function(t){if(void 0!==t)return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){var n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}}});class xa extends a{constructor(e){super(),this.type="SpriteMaterial",this.color=new Ce(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}let _a;xa.prototype.isSpriteMaterial=!0;const ba=new Re,wa=new Re,Ma=new Re,Ta=new Se,Ea=new Se,Sa=new Le,Aa=new Re,Ra=new Re,La=new Re,Ca=new Se,Pa=new Se,Da=new Se;class Ia extends c{constructor(e){if(super(),this.type="Sprite",void 0===_a){_a=new S;const e=new va(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);_a.setIndex([0,1,2,0,2,3]),_a.setAttribute("position",new ya(e,3,0,!1)),_a.setAttribute("uv",new ya(e,2,3,!1))}this.geometry=_a,this.material=void 0!==e?e:new xa,this.center=new Se(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),wa.setFromMatrixScale(this.matrixWorld),Sa.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Ma.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&wa.multiplyScalar(-Ma.z);var n=this.material.rotation;let r,i;0!==n&&(i=Math.cos(n),r=Math.sin(n));var n=this.center,a=(Na(Aa.set(-.5,-.5,0),Ma,n,wa,r,i),Na(Ra.set(.5,-.5,0),Ma,n,wa,r,i),Na(La.set(.5,.5,0),Ma,n,wa,r,i),Ca.set(0,0),Pa.set(1,0),Da.set(1,1),e.ray.intersectTriangle(Aa,Ra,La,!1,ba));null===a&&(Na(Ra.set(-.5,.5,0),Ma,n,wa,r,i),Pa.set(0,1),null===(a=e.ray.intersectTriangle(Aa,La,Ra,!1,ba)))||(n=e.ray.origin.distanceTo(ba))<e.near||n>e.far||t.push({distance:n,point:ba.clone(),uv:p.getUV(ba,Aa,Ra,La,Ca,Pa,Da,new Se),face:null,object:this})}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function Na(e,t,n,r,i,a){Ta.subVectors(e,n).addScalar(.5).multiply(r),void 0!==i?(Ea.x=a*Ta.x-i*Ta.y,Ea.y=i*Ta.x+a*Ta.y):Ea.copy(Ta),e.copy(t),e.x+=Ea.x,e.y+=Ea.y,e.applyMatrix4(Sa)}Ia.prototype.isSprite=!0;const Ba=new Re,Ha=new Re;class Ua extends c{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);var n=e.levels;for(let e=0,t=n.length;e<t;e++){var r=n[e];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);var n=this.levels;let r;for(r=0;r<n.length&&!(t<n[r].distance);r++);return n.splice(r,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(n){var r=this.levels;if(0<r.length){let e,t;for(e=1,t=r.length;e<t&&!(n<r[e].distance);e++);return r[e-1].object}return null}raycast(e,t){var n;0<this.levels.length&&(Ba.setFromMatrixPosition(this.matrixWorld),n=e.ray.origin.distanceTo(Ba),this.getObjectForDistance(n).raycast(e,t))}update(n){var r=this.levels;if(1<r.length){Ba.setFromMatrixPosition(n.matrixWorld),Ha.setFromMatrixPosition(this.matrixWorld);var i=Ba.distanceTo(Ha)/n.zoom;let e,t;for(r[0].object.visible=!0,e=1,t=r.length;e<t&&i>=r[e].distance;e++)r[e-1].object.visible=!1,r[e].object.visible=!0;for(this._currentLevel=e-1;e<t;e++)r[e].object.visible=!1}}toJSON(e){var n=super.toJSON(e),r=(!1===this.autoUpdate&&(n.object.autoUpdate=!1),n.object.levels=[],this.levels);for(let e=0,t=r.length;e<t;e++){var i=r[e];n.object.levels.push({object:i.object.uuid,distance:i.distance})}return n}}const Oa=new Re,za=new Ae,Fa=new Ae,Ga=new Re,ka=new Le;function Va(e,t){A.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Le,this.bindMatrixInverse=new Le}function Wa(){c.call(this),this.type="Bone"}Va.prototype=Object.assign(Object.create(A.prototype),{constructor:Va,isSkinnedMesh:!0,copy:function(e){return A.prototype.copy.call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this},bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){var n=new Ae,r=this.geometry.attributes.skinWeight;for(let e=0,t=r.count;e<t;e++){n.x=r.getX(e),n.y=r.getY(e),n.z=r.getZ(e),n.w=r.getW(e);var i=1/n.manhattanLength();i!=1/0?n.multiplyScalar(i):n.set(1,0,0,0),r.setXYZW(e,n.x,n.y,n.z,n.w)}},updateMatrixWorld:function(e){A.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(e,t){const n=this.skeleton,r=this.geometry;za.fromBufferAttribute(r.attributes.skinIndex,e),Fa.fromBufferAttribute(r.attributes.skinWeight,e),Oa.fromBufferAttribute(r.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){const r=Fa.getComponent(e);var i;0!==r&&(i=za.getComponent(e),ka.multiplyMatrices(n.bones[i].matrixWorld,n.boneInverses[i]),t.addScaledVector(Ga.copy(Oa).applyMatrix4(ka),r))}return t.applyMatrix4(this.bindMatrixInverse)}}),Wa.prototype=Object.assign(Object.create(c.prototype),{constructor:Wa,isBone:!0});const ja=new Le,qa=new Le;class Xa{constructor(e=[],t=[]){this.uuid=Ee.generateUUID(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){var e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new Le)}}calculateInverses(){for(let e=this.boneInverses.length=0,t=this.bones.length;e<t;e++){var n=new Le;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){var n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){var r=this.bones[e];r&&(r.parent&&r.parent.isBone?(r.matrix.copy(r.parent.matrixWorld).invert(),r.matrix.multiply(r.matrixWorld)):r.matrix.copy(r.matrixWorld),r.matrix.decompose(r.position,r.quaternion,r.scale))}}update(){var n=this.bones,r=this.boneInverses,i=this.boneMatrices,e=this.boneTexture;for(let e=0,t=n.length;e<t;e++){var a=n[e]?n[e].matrixWorld:qa;ja.multiplyMatrices(a,r[e]),ja.toArray(i,16*e)}null!==e&&(e.needsUpdate=!0)}clone(){return new Xa(this.bones,this.boneInverses)}getBoneByName(n){for(let e=0,t=this.bones.length;e<t;e++){var r=this.bones[e];if(r.name===n)return r}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(n,r){this.uuid=n.uuid;for(let t=0,e=n.bones.length;t<e;t++){var i=n.bones[t];let e=r[i];void 0===e&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),e=new Wa),this.bones.push(e),this.boneInverses.push((new Le).fromArray(n.boneInverses[t]))}return this.init(),this}toJSON(){var n={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]},r=(n.uuid=this.uuid,this.bones),i=this.boneInverses;for(let e=0,t=r.length;e<t;e++){var a=r[e],a=(n.bones.push(a.uuid),i[e]);n.boneInverses.push(a.toArray())}return n}}const Ya=new Le,Za=new Le,Ja=[],Qa=new A;function Ka(e,t,n){A.call(this,e,t),this.instanceMatrix=new E(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}Ka.prototype=Object.assign(Object.create(A.prototype),{constructor:Ka,isInstancedMesh:!0,copy:function(e){return A.prototype.copy.call(this,e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this},getColorAt:function(e,t){t.fromArray(this.instanceColor.array,3*e)},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,16*e)},raycast:function(e,r){const i=this.matrixWorld,t=this.count;if(Qa.geometry=this.geometry,Qa.material=this.material,void 0!==Qa.material)for(let n=0;n<t;n++){this.getMatrixAt(n,Ya),Za.multiplyMatrices(i,Ya),Qa.matrixWorld=Za,Qa.raycast(e,Ja);for(let e=0,t=Ja.length;e<t;e++){const i=Ja[e];i.instanceId=n,i.object=this,r.push(i)}Ja.length=0}},setColorAt:function(e,t){null===this.instanceColor&&(this.instanceColor=new E(new Float32Array(3*this.count),3)),t.toArray(this.instanceColor.array,3*e)},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,16*e)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});class g extends a{constructor(e){super(),this.type="LineBasicMaterial",this.color=new Ce(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this}}g.prototype.isLineBasicMaterial=!0;const $a=new Re,es=new Re,ts=new Le,ns=new vt,rs=new ct;function is(e=new S,t=new g){c.call(this),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}is.prototype=Object.assign(Object.create(c.prototype),{constructor:is,isLine:!0,copy:function(e){return c.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},computeLineDistances:function(){var e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var n=e.attributes.position,r=[0];for(let e=1,t=n.count;e<t;e++)$a.fromBufferAttribute(n,e-1),es.fromBufferAttribute(n,e),r[e]=r[e-1],r[e]+=$a.distanceTo(es);e.setAttribute("lineDistance",new k(r,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this},raycast:function(n,r){const e=this.geometry,i=this.matrixWorld,a=n.params.Line.threshold,s=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),rs.copy(e.boundingSphere),rs.applyMatrix4(i),rs.radius+=a,!1!==n.ray.intersectsSphere(rs)){ts.copy(i).invert(),ns.copy(n.ray).applyMatrix4(ts);const o=a/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=new Re,h=new Re,u=new Re,d=new Re,p=this.isLineSegments?2:1;if(e.isBufferGeometry){const i=e.index,a=e.attributes.position;if(null!==i)for(let e=Math.max(0,s.start),t=Math.min(i.count,s.start+s.count)-1;e<t;e+=p){const s=i.getX(e),o=i.getX(e+1);if(c.fromBufferAttribute(a,s),h.fromBufferAttribute(a,o),!(ns.distanceSqToSegment(c,h,d,u)>l)){d.applyMatrix4(this.matrixWorld);const p=n.ray.origin.distanceTo(d);p<n.near||p>n.far||r.push({distance:p,point:u.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this})}}else for(let e=Math.max(0,s.start),t=Math.min(a.count,s.start+s.count)-1;e<t;e+=p)if(c.fromBufferAttribute(a,e),h.fromBufferAttribute(a,e+1),!(ns.distanceSqToSegment(c,h,d,u)>l)){d.applyMatrix4(this.matrixWorld);const i=n.ray.origin.distanceTo(d);i<n.near||i>n.far||r.push({distance:i,point:u.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this})}}else e.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},updateMorphTargets:function(){const n=this.geometry;if(n.isBufferGeometry){var e=n.morphAttributes,t=Object.keys(e);if(0<t.length){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){var r=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=e}}}}else{e=n.morphTargets;void 0!==e&&0<e.length&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const as=new Re,ss=new Re;function os(e,t){is.call(this,e,t),this.type="LineSegments"}os.prototype=Object.assign(Object.create(is.prototype),{constructor:os,isLineSegments:!0,computeLineDistances:function(){var e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var n=e.attributes.position,r=[];for(let e=0,t=n.count;e<t;e+=2)as.fromBufferAttribute(n,e),ss.fromBufferAttribute(n,e+1),r[e]=0===e?0:r[e-1],r[e+1]=r[e]+as.distanceTo(ss);e.setAttribute("lineDistance",new k(r,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}});class ls extends is{constructor(e,t){super(e,t),this.type="LineLoop"}}ls.prototype.isLineLoop=!0;class cs extends a{constructor(e){super(),this.type="PointsMaterial",this.color=new Ce(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this}}cs.prototype.isPointsMaterial=!0;const hs=new Le,us=new vt,ds=new ct,ps=new Re;function fs(e=new S,t=new cs){c.call(this),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}function ms(e,t,n,r,i,a,s){var o=us.distanceSqToPoint(e);if(o<n){const n=new Re;us.closestPointToPoint(e,n),n.applyMatrix4(r);e=i.ray.origin.distanceTo(n);e<i.near||e>i.far||a.push({distance:e,distanceToRay:Math.sqrt(o),point:n,index:t,face:null,object:s})}}fs.prototype=Object.assign(Object.create(c.prototype),{constructor:fs,isPoints:!0,copy:function(e){return c.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},raycast:function(n,r){const e=this.geometry,i=this.matrixWorld,a=n.params.Points.threshold,s=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),ds.copy(e.boundingSphere),ds.applyMatrix4(i),ds.radius+=a,!1!==n.ray.intersectsSphere(ds)){hs.copy(i).invert(),us.copy(n.ray).applyMatrix4(hs);const o=a/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o;if(e.isBufferGeometry){const a=e.index,o=e.attributes.position;if(null!==a)for(let e=Math.max(0,s.start),t=Math.min(a.count,s.start+s.count);e<t;e++){const s=a.getX(e);ps.fromBufferAttribute(o,s),ms(ps,s,l,i,n,r,this)}else for(let e=Math.max(0,s.start),t=Math.min(o.count,s.start+s.count);e<t;e++)ps.fromBufferAttribute(o,e),ms(ps,e,l,i,n,r,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},updateMorphTargets:function(){const n=this.geometry;if(n.isBufferGeometry){var e=n.morphAttributes,t=Object.keys(e);if(0<t.length){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){var r=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=e}}}}else{e=n.morphTargets;void 0!==e&&0<e.length&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});class gs extends h{constructor(t,e,n,r,i,a,s,o,l){super(t,e,n,r,i,a,s,o,l),this.format=void 0!==s?s:K,this.minFilter=void 0!==a?a:z,this.magFilter=void 0!==i?i:z,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(function e(){c.needsUpdate=!0,t.requestVideoFrameCallback(e)})}clone(){return new this.constructor(this.image).copy(this)}update(){var e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class vs extends h{constructor(e,t,n,r,i,a,s,o,l,c,h,u){super(null,a,s,o,l,c,r,i,h,u),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}vs.prototype.isCompressedTexture=gs.prototype.isVideoTexture=!0;class ys extends h{constructor(e,t,n,r,i,a,s,o,l){super(e,t,n,r,i,a,s,o,l),this.needsUpdate=!0}}class xs extends h{constructor(e,t,n,r,i,a,s,o,l,c){if((c=void 0!==c?c:$)!==$&&c!==ee)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,r,i,a,s,o,c,n=void 0===(n=void 0===n&&c===$?Z:n)&&c===ee?Q:n,l),this.image={width:e,height:t},this.magFilter=void 0!==s?s:O,this.minFilter=void 0!==o?o:O,this.flipY=!1,this.generateMipmaps=!1}}xs.prototype.isDepthTexture=ys.prototype.isCanvasTexture=!0;class _s extends S{constructor(n=1,r=8,i=0,a=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:n,segments:r,thetaStart:i,thetaLength:a},r=Math.max(3,r);var t=[],s=[],o=[],l=[],c=new Re,h=new Se;s.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let e=0,t=3;e<=r;e++,t+=3){var u=i+e/r*a;c.x=n*Math.cos(u),c.y=n*Math.sin(u),s.push(c.x,c.y,c.z),o.push(0,0,1),h.x=(s[t]/n+1)/2,h.y=(s[t+1]/n+1)/2,l.push(h.x,h.y)}for(let e=1;e<=r;e++)t.push(e,e+1,0);this.setIndex(t),this.setAttribute("position",new k(s,3)),this.setAttribute("normal",new k(o,3)),this.setAttribute("uv",new k(l,2))}}class bs extends S{constructor(c=1,h=1,r=1,u=8,i=1,e=!1,d=0,p=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:c,radiusBottom:h,height:r,radialSegments:u,heightSegments:i,openEnded:e,thetaStart:d,thetaLength:p};const f=this,m=(u=Math.floor(u),i=Math.floor(i),[]),g=[],v=[],y=[];let x=0;const a=[],_=r/2;let b=0;function t(t){const n=x,r=new Se,i=new Re;let a=0;var s=!0===t?c:h,o=!0===t?1:-1;for(let e=1;e<=u;e++)g.push(0,_*o,0),v.push(0,o,0),y.push(.5,.5),x++;var l=x;for(let e=0;e<=u;e++){const h=e/u*p+d,t=Math.cos(h),n=Math.sin(h);i.x=s*n,i.y=_*o,i.z=s*t,g.push(i.x,i.y,i.z),v.push(0,o,0),r.x=.5*t+.5,r.y=.5*n*o+.5,y.push(r.x,r.y),x++}for(let e=0;e<u;e++){const h=n+e,u=l+e;!0===t?m.push(u,u+1,h):m.push(u+1,u,h),a+=3}f.addGroup(b,a,!0===t?1:2),b+=a}{const o=new Re,l=new Re;let n=0;var s=(h-c)/r;for(let e=0;e<=i;e++){const m=[],b=e/i,t=b*(h-c)+c;for(let e=0;e<=u;e++){const h=e/u,i=h*p+d,f=Math.sin(i),a=Math.cos(i);l.x=t*f,l.y=-b*r+_,l.z=t*a,g.push(l.x,l.y,l.z),o.set(f,s,a).normalize(),v.push(o.x,o.y,o.z),y.push(h,1-b),m.push(x++)}a.push(m)}for(let t=0;t<u;t++)for(let e=0;e<i;e++){const r=a[e][t],u=a[e+1][t],i=a[e+1][t+1],o=a[e][t+1];m.push(r,u,o),m.push(u,i,o),n+=6}f.addGroup(b,n,0),b+=n}!1===e&&(0<c&&t(!0),0<h)&&t(!1),this.setIndex(m),this.setAttribute("position",new k(g,3)),this.setAttribute("normal",new k(v,3)),this.setAttribute("uv",new k(y,2))}}class ws extends bs{constructor(e=1,t=1,n=8,r=1,i=!1,a=0,s=2*Math.PI){super(0,e,t,n,r,i,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:s}}}class Ms extends S{constructor(n,t,e=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:n,indices:t,radius:e,detail:r};const i=[],a=[];function s(e){i.push(e.x,e.y,e.z)}function o(e,t){e*=3;t.x=n[0+e],t.y=n[1+e],t.z=n[2+e]}function l(e,t,n,r){r<0&&1===e.x&&(a[t]=e.x-1),0===n.x&&0===n.z&&(a[t]=r/2/Math.PI+.5)}function c(e){return Math.atan2(e.z,-e.x)}var h=r,u=new Re,d=new Re,p=new Re;for(let e=0;e<t.length;e+=3){o(t[e+0],u),o(t[e+1],d),o(t[e+2],p);{f=void 0;m=void 0;g=void 0;v=void 0;y=void 0;x=void 0;var f=u;var m=d;var g=p;var v=h;var y=v+1,x=[];for(let t=0;t<=y;t++){x[t]=[];const N=f.clone().lerp(g,t/y),s=m.clone().lerp(g,t/y),B=y-t;for(let e=0;e<=B;e++)x[t][e]=0===e&&t===y?N:N.clone().lerp(s,e/B)}for(let t=0;t<y;t++)for(let e=0;e<2*(y-t)-1;e++){const g=Math.floor(e/2);e%2==0?(s(x[t][g+1]),s(x[t+1][g]),s(x[t][g])):(s(x[t][g+1]),s(x[t+1][g+1]),s(x[t+1][g]))}}}var _=e,b=new Re;for(let e=0;e<i.length;e+=3)b.x=i[e+0],b.y=i[e+1],b.z=i[e+2],b.normalize().multiplyScalar(_),i[e+0]=b.x,i[e+1]=b.y,i[e+2]=b.z;var w=new Re;for(let e=0;e<i.length;e+=3){w.x=i[e+0],w.y=i[e+1],w.z=i[e+2];var H=c(w)/2/Math.PI+.5,U=Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))/Math.PI+.5;a.push(H,1-U)}var M=new Re,T=new Re,E=new Re,S=new Re,A=new Se,R=new Se,L=new Se;for(let e=0,t=0;e<i.length;e+=9,t+=6){M.set(i[e+0],i[e+1],i[e+2]),T.set(i[e+3],i[e+4],i[e+5]),E.set(i[e+6],i[e+7],i[e+8]),A.set(a[t+0],a[t+1]),R.set(a[t+2],a[t+3]),L.set(a[t+4],a[t+5]),S.copy(M).add(T).add(E).divideScalar(3);var C=c(S);l(A,t+0,M,C),l(R,t+2,T,C),l(L,t+4,E,C)}for(let e=0;e<a.length;e+=6){var P=a[e+0],D=a[e+2],I=a[e+4],O=Math.max(P,D,I),z=Math.min(P,D,I);.9<O&&z<.1&&(P<.2&&(a[e+0]+=1),D<.2&&(a[e+2]+=1),I<.2)&&(a[e+4]+=1)}this.setAttribute("position",new k(i,3)),this.setAttribute("normal",new k(i.slice(),3)),this.setAttribute("uv",new k(a,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}}class Ts extends Ms{constructor(e=1,t=0){var n=(1+Math.sqrt(5))/2,r=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}}const Es=new Re,Ss=new Re,As=new Re,Rs=new p;class Ls extends S{constructor(e,t){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1,!0===e.isGeometry)console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");else{const n=Math.pow(10,4),r=Math.cos(Ee.DEG2RAD*t),i=e.getIndex(),a=e.getAttribute("position"),s=(i||a).count,o=[0,0,0],l=["a","b","c"],c=new Array(3),h={},u=[];for(let e=0;e<s;e+=3){i?(o[0]=i.getX(e),o[1]=i.getX(e+1),o[2]=i.getX(e+2)):(o[0]=e,o[1]=e+1,o[2]=e+2);const{a:t,b:s,c:d}=Rs;if(t.fromBufferAttribute(a,o[0]),s.fromBufferAttribute(a,o[1]),d.fromBufferAttribute(a,o[2]),Rs.getNormal(As),c[0]=`${Math.round(t.x*n)},${Math.round(t.y*n)},`+Math.round(t.z*n),c[1]=`${Math.round(s.x*n)},${Math.round(s.y*n)},`+Math.round(s.z*n),c[2]=`${Math.round(d.x*n)},${Math.round(d.y*n)},`+Math.round(d.z*n),c[0]!==c[1]&&c[1]!==c[2]&&c[2]!==c[0])for(let e=0;e<3;e++){const t=(e+1)%3,n=c[e],i=c[t],a=Rs[l[e]],s=Rs[l[t]],p=n+"_"+i,f=i+"_"+n;f in h&&h[f]?(As.dot(h[f].normal)<=r&&(u.push(a.x,a.y,a.z),u.push(s.x,s.y,s.z)),h[f]=null):p in h||(h[p]={index0:o[e],index1:o[t],normal:As.clone()})}}for(const e in h)if(h[e]){const{index0:t,index1:n}=h[e];Es.fromBufferAttribute(a,t),Ss.fromBufferAttribute(a,n),u.push(Es.x,Es.y,Es.z),u.push(Ss.x,Ss.y,Ss.z)}this.setAttribute("position",new k(u,3))}}}function Cs(o,l,c){c=c||2;var h=l&&l.length,u=h?l[0]*c:o.length;let d=Ps(o,0,u,c,!0);var p=[];if(d&&d.next!==d.prev){let t,n,r,i,a,s,e;if(h&&(d=function(e,t,n,r){var i,a,s=[];let o,l,c,h,u;for(o=0,l=t.length;o<l;o++)c=t[o]*r,h=o<l-1?t[o+1]*r:e.length,(u=Ps(e,c,h,r,!1))===u.next&&(u.steiner=!0),s.push(function(e){let t=e,n=e;for(;(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next,t!==e;);return n}(u));for(s.sort(Ns),o=0;o<s.length;o++)i=s[o],(a=function(n,e){let r=e;var i=n.x,a=n.y;let s,o=-1/0;do{if(a<=r.y&&a>=r.next.y&&r.next.y!==r.y){const n=r.x+(a-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(n<=i&&n>o){if((o=n)===i){if(a===r.y)return r;if(a===r.next.y)return r.next}s=r.x<r.next.x?r:r.next}}}while((r=r.next)!==e);if(!s)return null;if(i!==o){var l,c,h=s,u=s.x,d=s.y;let e,t=1/0;for(r=s;i>=r.x&&r.x>=u&&i!==r.x&&Hs(a<d?i:o,a,u,d,a<d?o:i,a,r.x,r.y)&&(e=Math.abs(a-r.y)/(i-r.x),Gs(r,n))&&(e<t||e===t&&(r.x>s.x||r.x===s.x&&(l=s,c=r,m(l.prev,l,c.prev)<0)&&m(c.next,l,l.next)<0))&&(s=r,t=e),(r=r.next)!==h;);}return s}(i,a=n))&&(i=ks(a,i),Ds(a,a.next),Ds(i,i.next)),n=Ds(n,n.next);return n}(o,l,d,c)),o.length>80*c){t=r=o[0],n=i=o[1];for(let e=c;e<u;e+=c)a=o[e],s=o[e+1],a<t&&(t=a),s<n&&(n=s),a>r&&(r=a),s>i&&(i=s);e=0!==(e=Math.max(r-t,i-n))?1/e:0}Is(d,p,c,t,n,e)}return p}function Ps(e,s,t,n,r){let i,a;if(r===0<function(n,r,i){let a=0;for(let e=s,t=r-i;e<r;e+=i)a+=(n[t]-n[e])*(n[e+1]+n[t+1]),t=e;return a}(e,t,n))for(i=s;i<t;i+=n)a=Vs(i,e[i],e[i+1],a);else for(i=t-n;i>=s;i-=n)a=Vs(i,e[i],e[i+1],a);return a&&Us(a,a.next)&&(Ws(a),a=a.next),a}function Ds(e,t){if(!e)return e;t=t||e;let n,r=e;do{if(n=!1,r.steiner||!Us(r,r.next)&&0!==m(r.prev,r,r.next))r=r.next;else{if(Ws(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function Is(r,i,a,s,o,l,c){if(r){if(!c&&l){var h=r;var u=s;var d=o;var p=l;let c=h;for(;null===c.z&&(c.z=Bs(c.x,c.y,u,d,p)),c.prevZ=c.prev,c.nextZ=c.next,(c=c.next)!==h;);c.prevZ.nextZ=null,c.prevZ=null;{var f=c;let e,t,n,r,i,a,s,o,l=1;do{for(t=f,f=null,i=null,a=0;t;){for(a++,n=t,s=0,e=0;e<l&&(s++,n=n.nextZ);e++);for(o=l;0<s||0<o&&n;)0!==s&&(0===o||!n||t.z<=n.z)?(t=(r=t).nextZ,s--):(n=(r=n).nextZ,o--),i?i.nextZ=r:f=r,r.prevZ=i,i=r;t=n}}while(i.nextZ=null,l*=2,1<a)}}let e,t,n=r;for(;r.prev!==r.next;)if(e=r.prev,t=r.next,l?function(e,t,n,r){var i=e.prev,a=e,s=e.next;if(0<=m(i,a,s))return;var o=(i.x<a.x?i.x<s.x?i:s:a.x<s.x?a:s).x,l=(i.y<a.y?i.y<s.y?i:s:a.y<s.y?a:s).y,c=(i.x>a.x?i.x>s.x?i:s:a.x>s.x?a:s).x,h=(i.y>a.y?i.y>s.y?i:s:a.y>s.y?a:s).y,u=Bs(o,l,t,n,r),d=Bs(c,h,t,n,r);let p=e.prevZ,f=e.nextZ;for(;p&&p.z>=u&&f&&f.z<=d;){if(p!==e.prev&&p!==e.next&&Hs(i.x,i.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=m(p.prev,p,p.next))return;if(p=p.prevZ,f!==e.prev&&f!==e.next&&Hs(i.x,i.y,a.x,a.y,s.x,s.y,f.x,f.y)&&0<=m(f.prev,f,f.next))return;f=f.nextZ}for(;p&&p.z>=u;){if(p!==e.prev&&p!==e.next&&Hs(i.x,i.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=m(p.prev,p,p.next))return;p=p.prevZ}for(;f&&f.z<=d;){if(f!==e.prev&&f!==e.next&&Hs(i.x,i.y,a.x,a.y,s.x,s.y,f.x,f.y)&&0<=m(f.prev,f,f.next))return;f=f.nextZ}return 1}(r,s,o,l):function(e){var t=e.prev,n=e,r=e.next;if(0<=m(t,n,r))return;let i=e.next.next;for(;i!==e.prev;){if(Hs(t.x,t.y,n.x,n.y,r.x,r.y,i.x,i.y)&&0<=m(i.prev,i,i.next))return;i=i.next}return 1}(r))i.push(e.i/a),i.push(r.i/a),i.push(t.i/a),Ws(r),r=t.next,n=t.next;else if((r=t)===n){c?1===c?Is(r=function(e,t,n){let r=e;do{var i=r.prev,a=r.next.next;!Us(i,a)&&Os(i,r,r.next,a)&&Gs(i,a)&&Gs(a,i)&&(t.push(i.i/n),t.push(r.i/n),t.push(a.i/n),Ws(r),Ws(r.next),r=e=a),r=r.next}while(r!==e);return Ds(r)}(Ds(r),i,a),i,a,s,o,l,2):2===c&&function(e,t,n,r,i,a){let s=e;do{let e=s.next.next;for(;e!==s.prev;){var o;if(s.i!==e.i&&function(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&Os(n,n.next,e,t))return 1}while((n=n.next)!==e)}(e,t)&&(Gs(e,t)&&Gs(t,e)&&function(e,t){let n=e,r=!1;for(var i=(e.x+t.x)/2,a=(e.y+t.y)/2;n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),(n=n.next)!==e;);return r}(e,t)&&(m(e.prev,e,t.prev)||m(e,t.prev,t))||Us(e,t)&&0<m(e.prev,e,e.next)&&0<m(t.prev,t,t.next))}(s,e))return o=ks(s,e),s=Ds(s,s.next),o=Ds(o,o.next),Is(s,t,n,r,i,a),Is(o,t,n,r,i,a);e=e.next}}while(s=s.next,s!==e)}(r,i,a,s,o,l):Is(Ds(r),i,a,s,o,l,1);break}}}function Ns(e,t){return e.x-t.x}function Bs(e,t,n,r,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function Hs(e,t,n,r,i,a,s,o){return 0<=(i-s)*(t-o)-(e-s)*(a-o)&&0<=(e-s)*(r-o)-(n-s)*(t-o)&&0<=(n-s)*(a-o)-(i-s)*(r-o)}function m(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function Us(e,t){return e.x===t.x&&e.y===t.y}function Os(e,t,n,r){var i=Fs(m(e,t,n)),a=Fs(m(e,t,r)),s=Fs(m(n,r,e)),o=Fs(m(n,r,t));return i!==a&&s!==o||0===i&&zs(e,n,t)||0===a&&zs(e,r,t)||0===s&&zs(n,e,r)||0===o&&zs(n,t,r)}function zs(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function Fs(e){return 0<e?1:e<0?-1:0}function Gs(e,t){return m(e.prev,e,e.next)<0?0<=m(e,t,e.next)&&0<=m(e,e.prev,t):m(e,t,e.prev)<0||m(e,e.next,t)<0}function ks(e,t){var n=new js(e.i,e.x,e.y),r=new js(t.i,t.x,t.y),i=e.next,a=t.prev;return(e.next=t).prev=e,(n.next=i).prev=n,(r.next=n).prev=r,(a.next=r).prev=a,r}function Vs(e,t,n,r){e=new js(e,t,n);return r?(e.next=r.next,(e.prev=r).next.prev=e,r.next=e):(e.prev=e).next=e,e}function Ws(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function js(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const qs={area:function(n){var r=n.length;let i=0;for(let e=r-1,t=0;t<r;e=t++)i+=n[e].x*n[t].y-n[t].x*n[e].y;return.5*i},isClockWise:function(e){return qs.area(e)<0},triangulateShape:function(e,t){var n=[],r=[],i=[];Xs(e),Ys(n,e);let a=e.length;t.forEach(Xs);for(let e=0;e<t.length;e++)r.push(a),a+=t[e].length,Ys(n,t[e]);var s=Cs(n,r);for(let e=0;e<s.length;e+=3)i.push(s.slice(e,e+3));return i}};function Xs(e){var t=e.length;2<t&&e[t-1].equals(e[0])&&e.pop()}function Ys(t,n){for(let e=0;e<n.length;e++)t.push(n[e].x),t.push(n[e].y)}class Zs extends S{constructor(n,O){super(),this.type="ExtrudeGeometry",this.parameters={shapes:n,options:O},n=Array.isArray(n)?n:[n];const z=this,F=[],G=[];for(let e=0,t=n.length;e<t;e++)!function(e){const r=[],H=void 0!==O.curveSegments?O.curveSegments:12,u=void 0!==O.steps?O.steps:1;let n=void 0!==O.depth?O.depth:100,i=void 0===O.bevelEnabled||O.bevelEnabled,t=void 0!==O.bevelThickness?O.bevelThickness:6,a=void 0!==O.bevelSize?O.bevelSize:t-2,s=void 0!==O.bevelOffset?O.bevelOffset:0,d=void 0!==O.bevelSegments?O.bevelSegments:3;const o=O.extrudePath,p=void 0!==O.UVGenerator?O.UVGenerator:Js;void 0!==O.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),n=O.amount);let l,c,h,f,m,g=!1;o&&(l=o.getSpacedPoints(u),g=!0,i=!1,c=o.computeFrenetFrames(u,!1),h=new Re,f=new Re,m=new Re),i||(d=0,t=0,a=0,s=0);e=e.extractPoints(H);let v=e.shape;const y=e.holes;if(!qs.isClockWise(v)){v=v.reverse();for(let e=0,t=y.length;e<t;e++){const O=y[e];qs.isClockWise(O)&&(y[e]=O.reverse())}}const x=qs.triangulateShape(v,y),_=v;for(let e=0,t=y.length;e<t;e++){const O=y[e];v=v.concat(O)}function b(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}const w=v.length,M=x.length;function T(e,t,n){let r,i,a;const s=e.x-t.x,o=e.y-t.y,l=n.x-e.x,c=n.y-e.y,h=s*s+o*o,u=s*c-o*l;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(l*l+c*c),p=t.x-o/u,f=t.y+s/u,m=((n.x-c/d-p)*c-(n.y+l/d-f)*l)/(s*c-o*l);r=p+s*m-e.x,i=f+o*m-e.y;t=r*r+i*i;if(t<=2)return new Se(r,i);a=Math.sqrt(t/2)}else{let e=!1;s>Number.EPSILON?l>Number.EPSILON&&(e=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(c)&&(e=!0),a=e?(r=-o,i=s,Math.sqrt(h)):(r=s,i=o,Math.sqrt(h/2))}return new Se(r/a,i/a)}var E=[];for(let e=0,t=_.length,n=t-1,r=e+1;e<t;e++,n++,r++)n===t&&(n=0),r===t&&(r=0),E[e]=T(_[e],_[n],_[r]);var S=[];let A,R=E.concat();for(let e=0,t=y.length;e<t;e++){const O=y[e];A=[];for(let e=0,t=O.length,n=t-1,r=e+1;e<t;e++,n++,r++)n===t&&(n=0),r===t&&(r=0),A[e]=T(O[e],O[n],O[r]);S.push(A),R=R.concat(A)}for(let e=0;e<d;e++){const O=e/d,z=t*Math.cos(O*Math.PI/2),F=a*Math.sin(O*Math.PI/2)+s;for(let e=0,t=_.length;e<t;e++){const O=b(_[e],E[e],F);C(O.x,O.y,-z)}for(let e=0,t=y.length;e<t;e++){const O=y[e];A=S[e];for(let e=0,t=O.length;e<t;e++){const G=b(O[e],A[e],F);C(G.x,G.y,-z)}}}var L=a+s;for(let e=0;e<w;e++){const O=i?b(v[e],R[e],L):v[e];g?(f.copy(c.normals[0]).multiplyScalar(O.x),h.copy(c.binormals[0]).multiplyScalar(O.y),m.copy(l[0]).add(f).add(h),C(m.x,m.y,m.z)):C(O.x,O.y,0)}for(let t=1;t<=u;t++)for(let e=0;e<w;e++){const z=i?b(v[e],R[e],L):v[e];g?(f.copy(c.normals[t]).multiplyScalar(z.x),h.copy(c.binormals[t]).multiplyScalar(z.y),m.copy(l[t]).add(f).add(h),C(m.x,m.y,m.z)):C(z.x,z.y,n/u*t)}for(let e=d-1;0<=e;e--){const O=e/d,z=t*Math.cos(O*Math.PI/2),F=a*Math.sin(O*Math.PI/2)+s;for(let e=0,t=_.length;e<t;e++){const O=b(_[e],E[e],F);C(O.x,O.y,n+z)}for(let e=0,t=y.length;e<t;e++){const O=y[e];A=S[e];for(let e=0,t=O.length;e<t;e++){const G=b(O[e],A[e],F);g?C(G.x,G.y+l[u-1].y,l[u-1].x+z):C(G.x,G.y,n+z)}}}function U(e,r){let i=e.length;for(;0<=--i;){var a=i;let n=i-1;n<0&&(n=e.length-1);for(let e=0,t=u+2*d;e<t;e++){const i=w*e,h=w*(e+1);c=l=o=s=void 0;var s=r+a+i,o=r+n+i,l=r+n+h,c=r+a+h;D(s),D(o),D(c),D(o),D(l),D(c),s=F.length/3,I((o=p.generateSideWallUV(z,F,s-6,s-3,s-2,s-1))[0]),I(o[1]),I(o[3]),I(o[1]),I(o[2]),I(o[3])}}}function C(e,t,n){r.push(e),r.push(t),r.push(n)}function P(e,t,n){D(e),D(t),D(n);e=F.length/3,t=p.generateTopUV(z,F,e-3,e-2,e-1);I(t[0]),I(t[1]),I(t[2])}function D(e){F.push(r[3*e+0]),F.push(r[3*e+1]),F.push(r[3*e+2])}function I(e){G.push(e.x),G.push(e.y)}{e=F.length/3;if(i){let e=0,t=0*w;for(let e=0;e<M;e++){const z=x[e];P(z[2]+t,z[1]+t,z[0]+t)}e=u+2*d,t=w*e;for(let e=0;e<M;e++){const z=x[e];P(z[0]+t,z[1]+t,z[2]+t)}}else{for(let e=0;e<M;e++){var N=x[e];P(N[2],N[1],N[0])}for(let e=0;e<M;e++){var B=x[e];P(B[0]+w*u,B[1]+w*u,B[2]+w*u)}}z.addGroup(e,F.length/3-e,0)}{e=F.length/3;let n=0;U(_,n),n+=_.length;for(let e=0,t=y.length;e<t;e++){const z=y[e];U(z,n),n+=z.length}z.addGroup(e,F.length/3-e,1)}}(n[e]);this.setAttribute("position",new k(F,3)),this.setAttribute("uv",new k(G,2)),this.computeVertexNormals()}toJSON(){var e=S.prototype.toJSON.call(this),n=this.parameters.shapes,t=this.parameters.options,r=e;if(r.shapes=[],Array.isArray(n))for(let e=0,t=n.length;e<t;e++){var i=n[e];r.shapes.push(i.uuid)}else r.shapes.push(n.uuid);return void 0!==t.extrudePath&&(r.options.extrudePath=t.extrudePath.toJSON()),r}}const Js={generateTopUV:function(e,t,n,r,i){var a=t[3*n],n=t[3*n+1],s=t[3*r],r=t[3*r+1],o=t[3*i],t=t[3*i+1];return[new Se(a,n),new Se(s,r),new Se(o,t)]},generateSideWallUV:function(e,t,n,r,i,a){var s=t[3*n],o=t[3*n+1],n=t[3*n+2],l=t[3*r],c=t[3*r+1],r=t[3*r+2],h=t[3*i],u=t[3*i+1],i=t[3*i+2],d=t[3*a],p=t[3*a+1],t=t[3*a+2];return Math.abs(o-c)<.01?[new Se(s,1-n),new Se(l,1-r),new Se(h,1-i),new Se(d,1-t)]:[new Se(o,1-n),new Se(c,1-r),new Se(u,1-i),new Se(p,1-t)]}};class Qs extends Ms{constructor(e=1,t=0){var n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}}class Ks extends S{constructor(n,r=12,i=0,a=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:n,segments:r,phiStart:i,phiLength:a},r=Math.floor(r),a=Ee.clamp(a,0,2*Math.PI);const s=[],o=[],l=[],c=1/r,h=new Re,u=new Se;for(let t=0;t<=r;t++){var e=i+t*c*a,d=Math.sin(e),p=Math.cos(e);for(let e=0;e<=n.length-1;e++)h.x=n[e].x*d,h.y=n[e].y,h.z=n[e].x*p,o.push(h.x,h.y,h.z),u.x=t/r,u.y=e/(n.length-1),l.push(u.x,u.y)}for(let t=0;t<r;t++)for(let e=0;e<n.length-1;e++){const a=e+t*n.length,o=a,l=a+n.length,c=a+n.length+1,h=a+1;s.push(o,l,h),s.push(l,c,h)}if(this.setIndex(s),this.setAttribute("position",new k(o,3)),this.setAttribute("uv",new k(l,2)),this.computeVertexNormals(),a===2*Math.PI){const i=this.attributes.normal.array,a=new Re,s=new Re,o=new Re,l=r*n.length*3;for(let e=0,t=0;e<n.length;e++,t+=3)a.x=i[t+0],a.y=i[t+1],a.z=i[t+2],s.x=i[l+t+0],s.y=i[l+t+1],s.z=i[l+t+2],o.addVectors(a,s).normalize(),i[t+0]=i[l+t+0]=o.x,i[t+1]=i[l+t+1]=o.y,i[t+2]=i[l+t+2]=o.z}}}class $s extends Ms{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}}function eo(t,n,r){S.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:n,stacks:r};const i=[],a=[],s=[],o=[],l=new Re,c=new Re,h=new Re,u=new Re,d=new Re,p=(t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter."),n+1);for(let e=0;e<=r;e++){const p=e/r;for(let e=0;e<=n;e++){const i=e/n;t(i,p,c),a.push(c.x,c.y,c.z),0<=i-1e-5?(t(i-1e-5,p,h),u.subVectors(c,h)):(t(1e-5+i,p,h),u.subVectors(h,c)),0<=p-1e-5?(t(i,p-1e-5,h),d.subVectors(c,h)):(t(i,1e-5+p,h),d.subVectors(h,c)),l.crossVectors(u,d).normalize(),s.push(l.x,l.y,l.z),o.push(i,p)}}for(let t=0;t<r;t++)for(let e=0;e<n;e++){const n=t*p+e,a=t*p+e+1,s=(t+1)*p+e+1,o=(t+1)*p+e;i.push(n,a,o),i.push(a,s,o)}this.setIndex(i),this.setAttribute("position",new k(a,3)),this.setAttribute("normal",new k(s,3)),this.setAttribute("uv",new k(o,2))}(eo.prototype=Object.create(S.prototype)).constructor=eo;class to extends S{constructor(e=.5,t=1,n=8,r=1,i=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},n=Math.max(3,n);const s=[],o=[],l=[],c=[];let h=e;var u=(t-e)/(r=Math.max(1,r)),d=new Re,p=new Se;for(let e=0;e<=r;e++){for(let e=0;e<=n;e++){const r=i+e/n*a;d.x=h*Math.cos(r),d.y=h*Math.sin(r),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,c.push(p.x,p.y)}h+=u}for(let e=0;e<r;e++){const t=e*(n+1);for(let e=0;e<n;e++){const r=e+t,i=r,a=r+n+1,o=r+n+2,l=r+1;s.push(i,a,l),s.push(a,o,l)}}this.setIndex(s),this.setAttribute("position",new k(o,3)),this.setAttribute("normal",new k(l,3)),this.setAttribute("uv",new k(c,2))}}class no extends S{constructor(t,s=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:s};const o=[],l=[],c=[],h=[];let n=0,u=0;if(!1===Array.isArray(t))r(t);else for(let e=0;e<t.length;e++)r(t[e]),this.addGroup(n,u,e),n+=u,u=0;function r(e){var n=l.length/3,e=e.extractPoints(s);let r=e.shape;var i=e.holes;!1===qs.isClockWise(r)&&(r=r.reverse());for(let e=0,t=i.length;e<t;e++){const s=i[e];!0===qs.isClockWise(s)&&(i[e]=s.reverse())}var a=qs.triangulateShape(r,i);for(let e=0,t=i.length;e<t;e++){const s=i[e];r=r.concat(s)}for(let e=0,t=r.length;e<t;e++){const s=r[e];l.push(s.x,s.y,0),c.push(0,0,1),h.push(s.x,s.y)}for(let e=0,t=a.length;e<t;e++){const s=a[e],l=s[0]+n,c=s[1]+n,h=s[2]+n;o.push(l,c,h),u+=3}}this.setIndex(o),this.setAttribute("position",new k(l,3)),this.setAttribute("normal",new k(c,3)),this.setAttribute("uv",new k(h,2))}toJSON(){var e=S.prototype.toJSON.call(this),n=this.parameters.shapes,r=e;if(r.shapes=[],Array.isArray(n))for(let e=0,t=n.length;e<t;e++){var i=n[e];r.shapes.push(i.uuid)}else r.shapes.push(n.uuid);return r}}class ro extends S{constructor(n=1,r=8,i=6,a=0,s=2*Math.PI,o=0,l=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:n,widthSegments:r,heightSegments:i,phiStart:a,phiLength:s,thetaStart:o,thetaLength:l},r=Math.max(3,Math.floor(r)),i=Math.max(2,Math.floor(i));const c=Math.min(o+l,Math.PI);let h=0;var u=[],d=new Re,p=new Re,f=[],m=[],g=[],v=[];for(let e=0;e<=i;e++){var y=[],x=e/i;let t=0;0==e&&0==o?t=.5/r:e==i&&c==Math.PI&&(t=-.5/r);for(let e=0;e<=r;e++){const c=e/r;d.x=-n*Math.cos(a+c*s)*Math.sin(o+x*l),d.y=n*Math.cos(o+x*l),d.z=n*Math.sin(a+c*s)*Math.sin(o+x*l),m.push(d.x,d.y,d.z),p.copy(d).normalize(),g.push(p.x,p.y,p.z),v.push(c+t,1-x),y.push(h++)}u.push(y)}for(let t=0;t<i;t++)for(let e=0;e<r;e++){const r=u[t][e+1],s=u[t][e],l=u[t+1][e],h=u[t+1][e+1];(0!==t||0<o)&&f.push(r,s,h),(t!==i-1||c<Math.PI)&&f.push(s,l,h)}this.setIndex(f),this.setAttribute("position",new k(m,3)),this.setAttribute("normal",new k(g,3)),this.setAttribute("uv",new k(v,2))}}class io extends Ms{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}}class ao extends Zs{constructor(e,t={}){var n=t.font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new S;n=n.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(n,t),this.type="TextGeometry"}}class so extends S{constructor(n=1,r=.4,i=8,a=6,s=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:n,tube:r,radialSegments:i,tubularSegments:a,arc:s},i=Math.floor(i),a=Math.floor(a);const o=[],l=[],c=[],h=[],u=new Re,d=new Re,p=new Re;for(let t=0;t<=i;t++)for(let e=0;e<=a;e++){var f=e/a*s,m=t/i*Math.PI*2;d.x=(n+r*Math.cos(m))*Math.cos(f),d.y=(n+r*Math.cos(m))*Math.sin(f),d.z=r*Math.sin(m),l.push(d.x,d.y,d.z),u.x=n*Math.cos(f),u.y=n*Math.sin(f),p.subVectors(d,u).normalize(),c.push(p.x,p.y,p.z),h.push(e/a),h.push(t/i)}for(let t=1;t<=i;t++)for(let e=1;e<=a;e++){const i=(a+1)*t+e-1,s=(a+1)*(t-1)+e-1,l=(a+1)*(t-1)+e,c=(a+1)*t+e;o.push(i,s,c),o.push(s,l,c)}this.setIndex(o),this.setAttribute("position",new k(l,3)),this.setAttribute("normal",new k(c,3)),this.setAttribute("uv",new k(h,2))}}class oo extends S{constructor(e=1,n=.4,r=64,i=8,a=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:n,tubularSegments:r,radialSegments:i,p:a,q:s},r=Math.floor(r),i=Math.floor(i);const o=[],l=[],c=[],h=[],u=new Re,d=new Re,p=new Re,f=new Re,m=new Re,g=new Re,v=new Re;for(let t=0;t<=r;++t){var y=t/r*a*Math.PI*2;x(y,a,s,e,p),x(.01+y,a,s,e,f),g.subVectors(f,p),v.addVectors(f,p),m.crossVectors(g,v),v.crossVectors(m,g),m.normalize(),v.normalize();for(let e=0;e<=i;++e){const a=e/i*Math.PI*2,s=-n*Math.cos(a),f=n*Math.sin(a);u.x=p.x+(s*v.x+f*m.x),u.y=p.y+(s*v.y+f*m.y),u.z=p.z+(s*v.z+f*m.z),l.push(u.x,u.y,u.z),d.subVectors(u,p).normalize(),c.push(d.x,d.y,d.z),h.push(t/r),h.push(e/i)}}for(let t=1;t<=r;t++)for(let e=1;e<=i;e++){const r=(i+1)*(t-1)+(e-1),a=(i+1)*t+(e-1),s=(i+1)*t+e,l=(i+1)*(t-1)+e;o.push(r,a,l),o.push(a,s,l)}function x(e,t,n,r,i){var a=Math.cos(e),s=Math.sin(e),n=n/t*e,t=Math.cos(n);i.x=r*(2+t)*.5*a,i.y=r*(2+t)*s*.5,i.z=r*Math.sin(n)*.5}this.setIndex(o),this.setAttribute("position",new k(l,3)),this.setAttribute("normal",new k(c,3)),this.setAttribute("uv",new k(h,2))}}class lo extends S{constructor(e,i=64,a=1,s=8,t=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:i,radius:a,radialSegments:s,closed:t};const o=e.computeFrenetFrames(i,t),l=(this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,new Re),c=new Re,n=new Se;let h=new Re;const u=[],d=[],r=[],p=[];function f(t){h=e.getPointAt(t/i,h);var n=o.normals[t],r=o.binormals[t];for(let e=0;e<=s;e++){const i=e/s*Math.PI*2,t=Math.sin(i),o=-Math.cos(i);c.x=o*n.x+t*r.x,c.y=o*n.y+t*r.y,c.z=o*n.z+t*r.z,c.normalize(),d.push(c.x,c.y,c.z),l.x=h.x+a*c.x,l.y=h.y+a*c.y,l.z=h.z+a*c.z,u.push(l.x,l.y,l.z)}}for(let e=0;e<i;e++)f(e);f(!1===t?i:0);for(let t=0;t<=i;t++)for(let e=0;e<=s;e++)n.x=t/i,n.y=e/s,r.push(n.x,n.y);for(let t=1;t<=i;t++)for(let e=1;e<=s;e++){var m=(s+1)*(t-1)+(e-1),g=(s+1)*t+(e-1),v=(s+1)*t+e,y=(s+1)*(t-1)+e;p.push(m,g,y),p.push(g,v,y)}this.setIndex(p),this.setAttribute("position",new k(u,3)),this.setAttribute("normal",new k(d,3)),this.setAttribute("uv",new k(r,2))}toJSON(){var e=S.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e}}class co extends S{constructor(e){if(super(),this.type="WireframeGeometry",!0===e.isGeometry)console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");else{const a=[],s=[0,0],o={},l=new Re;if(null!==e.index){var t=e.attributes.position,r=e.index;let n=e.groups;for(let e=0,t=(n=0===n.length?[{start:0,count:r.count,materialIndex:0}]:n).length;e<t;++e){const a=n[e],l=a.start;for(let t=l,e=l+a.count;t<e;t+=3)for(let e=0;e<3;e++){const l=r.getX(t+e),c=r.getX(t+(e+1)%3);s[0]=Math.min(l,c),s[1]=Math.max(l,c);var i=s[0]+","+s[1];void 0===o[i]&&(o[i]={index1:s[0],index2:s[1]})}}for(const e in o){const s=o[e];l.fromBufferAttribute(t,s.index1),a.push(l.x,l.y,l.z),l.fromBufferAttribute(t,s.index2),a.push(l.x,l.y,l.z)}}else{const s=e.attributes.position;for(let t=0,e=s.count/3;t<e;t++)for(let e=0;e<3;e++){var n=3*t+e,n=(l.fromBufferAttribute(s,n),a.push(l.x,l.y,l.z),3*t+(e+1)%3);l.fromBufferAttribute(s,n),a.push(l.x,l.y,l.z)}}this.setAttribute("position",new k(a,3))}}}var ho=Object.freeze({__proto__:null,BoxGeometry:Yn,BoxBufferGeometry:Yn,CircleGeometry:_s,CircleBufferGeometry:_s,ConeGeometry:ws,ConeBufferGeometry:ws,CylinderGeometry:bs,CylinderBufferGeometry:bs,DodecahedronGeometry:Ts,DodecahedronBufferGeometry:Ts,EdgesGeometry:Ls,ExtrudeGeometry:Zs,ExtrudeBufferGeometry:Zs,IcosahedronGeometry:Qs,IcosahedronBufferGeometry:Qs,LatheGeometry:Ks,LatheBufferGeometry:Ks,OctahedronGeometry:$s,OctahedronBufferGeometry:$s,ParametricGeometry:eo,ParametricBufferGeometry:eo,PlaneGeometry:lr,PlaneBufferGeometry:lr,PolyhedronGeometry:Ms,PolyhedronBufferGeometry:Ms,RingGeometry:to,RingBufferGeometry:to,ShapeGeometry:no,ShapeBufferGeometry:no,SphereGeometry:ro,SphereBufferGeometry:ro,TetrahedronGeometry:io,TetrahedronBufferGeometry:io,TextGeometry:ao,TextBufferGeometry:ao,TorusGeometry:so,TorusBufferGeometry:so,TorusKnotGeometry:oo,TorusKnotBufferGeometry:oo,TubeGeometry:lo,TubeBufferGeometry:lo,WireframeGeometry:co});class uo extends a{constructor(e){super(),this.type="ShadowMaterial",this.color=new Ce(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}class po extends Qn{constructor(e){super(e),this.type="RawShaderMaterial"}}function fo(e){a.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ce(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Se(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(e)}function mo(e){fo.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Se(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=Ee.clamp(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}po.prototype.isRawShaderMaterial=uo.prototype.isShadowMaterial=!0,((fo.prototype=Object.create(a.prototype)).constructor=fo).prototype.isMeshStandardMaterial=!0,fo.prototype.copy=function(e){return a.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this.vertexTangents=e.vertexTangents,this},((mo.prototype=Object.create(fo.prototype)).constructor=mo).prototype.isMeshPhysicalMaterial=!0,mo.prototype.copy=function(e){return fo.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new Ce).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this};class go extends a{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new Ce(16777215),this.specular=new Ce(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Se(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}class vo extends a{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ce(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Se(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}class yo extends a{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Se(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}class xo extends a{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new Ce(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}class _o extends a{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ce(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Se(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}class bo extends g{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}bo.prototype.isLineDashedMaterial=_o.prototype.isMeshMatcapMaterial=xo.prototype.isMeshLambertMaterial=yo.prototype.isMeshNormalMaterial=vo.prototype.isMeshToonMaterial=go.prototype.isMeshPhongMaterial=!0;var wo=Object.freeze({__proto__:null,ShadowMaterial:uo,SpriteMaterial:xa,RawShaderMaterial:po,ShaderMaterial:Qn,PointsMaterial:cs,MeshPhysicalMaterial:mo,MeshStandardMaterial:fo,MeshPhongMaterial:go,MeshToonMaterial:vo,MeshNormalMaterial:yo,MeshLambertMaterial:xo,MeshDepthMaterial:na,MeshDistanceMaterial:ra,MeshBasicMaterial:hn,MeshMatcapMaterial:_o,LineDashedMaterial:bo,LineBasicMaterial:g,Material:a});const y={arraySlice:function(e,t,n){return y.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(n){var t=n.length,r=new Array(t);for(let e=0;e!==t;++e)r[e]=e;return r.sort(function(e,t){return n[e]-n[t]}),r},sortedArray:function(n,r,i){const a=n.length,s=new n.constructor(a);for(let e=0,t=0;t!==a;++e){const a=i[e]*r;for(let e=0;e!==r;++e)s[t++]=n[a+e]}return s},flattenJSON:function(t,n,r,i){let a=1,s=t[0];for(;void 0!==s&&void 0===s[i];)s=t[a++];if(void 0!==s){let e=s[i];if(void 0!==e)if(Array.isArray(e))for(;void 0!==(e=s[i])&&(n.push(s.time),r.push.apply(r,e)),void 0!==(s=t[a++]););else if(void 0!==e.toArray)for(;void 0!==(e=s[i])&&(n.push(s.time),e.toArray(r,r.length)),void 0!==(s=t[a++]););else for(;void 0!==(e=s[i])&&(n.push(s.time),r.push(e)),void 0!==(s=t[a++]););}},subclip:function(e,n,r,i,a=30){const s=e.clone();s.name=n;var t=[];for(let e=0;e<s.tracks.length;++e){const n=s.tracks[e],o=n.getValueSize(),l=[],c=[];for(let t=0;t<n.times.length;++t){const s=n.times[t]*a;if(!(s<r||s>=i)){l.push(n.times[t]);for(let e=0;e<o;++e)c.push(n.values[t*o+e])}}0!==l.length&&(n.times=y.convertArray(l,n.times.constructor),n.values=y.convertArray(c,n.values.constructor),t.push(n))}s.tracks=t;let o=1/0;for(let e=0;e<s.tracks.length;++e)o>s.tracks[e].times[0]&&(o=s.tracks[e].times[0]);for(let e=0;e<s.tracks.length;++e)s.tracks[e].shift(-1*o);return s.resetDuration(),s},makeClipAdditive:function(r,i=0,a=r,s=30){const o=a.tracks.length,l=i/(s=s<=0?30:s);for(let e=0;e<o;++e){const s=a.tracks[e],o=s.ValueTypeName;if("bool"!==o&&"string"!==o){var c=r.tracks.find(function(e){return e.name===s.name&&e.ValueTypeName===o});if(void 0!==c){let e=0;var h=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(e=h/3);let t=0;var u=c.getValueSize(),d=(c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(t=u/3),s.times.length-1);let n;if(l<=s.times[0]){const r=e,i=h-e;n=y.arraySlice(s.values,r,i)}else if(l>=s.times[d]){const r=d*h+e,i=r+h-e;n=y.arraySlice(s.values,r,i)}else{const r=s.createInterpolant(),i=e,a=h-e;r.evaluate(l),n=y.arraySlice(r.resultBuffer,i,a)}"quaternion"===o&&(new f).fromArray(n).normalize().conjugate().toArray(n);var p=c.times.length;for(let e=0;e<p;++e){const i=e*u+t;if("quaternion"===o)f.multiplyQuaternionsFlat(c.values,i,n,0,c.values,i);else{const r=u-2*t;for(let e=0;e<r;++e)c.values[i+e]-=n[e]}}}}}return r.blendMode=me,r}};function Mo(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n}function To(e,t,n,r){Mo.call(this,e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function Eo(e,t,n,r){Mo.call(this,e,t,n,r)}function So(e,t,n,r){Mo.call(this,e,t,n,r)}Object.assign(Mo.prototype,{evaluate:function(t){var n=this.parameterPositions;let r=this._cachedIndex,i=n[r],a=n[r-1];e:{t:{let e;n:{r:if(!(t<i)){for(var s=r+2;;){if(void 0===i){if(t<a)break r;return r=n.length,this._cachedIndex=r,this.afterEnd_(r-1,t,a)}if(r===s)break;if(a=i,t<(i=n[++r]))break t}e=n.length;break n}if(t>=a)break e;var o=n[1];t<o&&(r=2,a=o);for(var l=r-2;;){if(void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(r===l)break;if(i=a,t>=(a=n[--r-1]))break t}e=r,r=0}for(;r<e;){const i=r+e>>>1;t<n[i]?e=i:r=1+i}if(i=n[r],void 0===(a=n[r-1]))return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return r=n.length,this._cachedIndex=r,this.afterEnd_(r-1,a,t)}this._cachedIndex=r,this.intervalChanged_(r,a,i)}return this.interpolate_(r,a,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){var t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r;for(let e=0;e!==r;++e)t[e]=n[i+e];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Mo.prototype,{beforeStart_:Mo.prototype.copySampleValue_,afterEnd_:Mo.prototype.copySampleValue_}),To.prototype=Object.assign(Object.create(Mo.prototype),{constructor:To,DefaultSettings_:{endingStart:ue,endingEnd:ue},intervalChanged_:function(e,t,n){var r=this.parameterPositions;let i=e-2,a=e+1,s=r[i],o=r[a];if(void 0===s)switch(this.getSettings_().endingStart){case de:i=e,s=2*t-n;break;case pe:i=r.length-2,s=t+r[i]-r[i+1];break;default:i=e,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case de:a=e,o=2*n-t;break;case pe:a=1,o=n+r[1]-r[0];break;default:a=e-1,o=t}var l=.5*(n-t),c=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-n),this._offsetPrev=i*c,this._offsetNext=a*c},interpolate_:function(e,t,n,r){var i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,c=this._offsetPrev,h=this._offsetNext,e=this._weightPrev,u=this._weightNext,n=(n-t)/(r-t),r=n*n,t=r*n,d=-e*t+2*e*r-e*n,p=(1+e)*t+(-1.5-2*e)*r+(-.5+e)*n+1,f=(-1-u)*t+(1.5+u)*r+.5*n,m=u*t-u*r;for(let e=0;e!==s;++e)i[e]=d*a[c+e]+p*a[l+e]+f*a[o+e]+m*a[h+e];return i}}),Eo.prototype=Object.assign(Object.create(Mo.prototype),{constructor:Eo,interpolate_:function(e,t,n,r){var i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,c=(n-t)/(r-t),h=1-c;for(let e=0;e!==s;++e)i[e]=a[l+e]*h+a[o+e]*c;return i}}),So.prototype=Object.assign(Object.create(Mo.prototype),{constructor:So,interpolate_:function(e){return this.copySampleValue_(e-1)}});class Ao{constructor(e,t,n,r){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=y.convertArray(t,this.TimeBufferType),this.values=y.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:y.convertArray(e.times,Array),values:y.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(n.interpolation=t)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new So(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Eo(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new To(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case le:t=this.InterpolantFactoryMethodDiscrete;break;case ce:t=this.InterpolantFactoryMethodLinear;break;case he:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}console.warn("THREE.KeyframeTrack:",t)}else this.createInterpolant=t;return this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return le;case this.InterpolantFactoryMethodLinear:return ce;case this.InterpolantFactoryMethodSmooth:return he}}getValueSize(){return this.values.length/this.times.length}shift(n){if(0!==n){var r=this.times;for(let e=0,t=r.length;e!==t;++e)r[e]+=n}return this}scale(n){if(1!==n){var r=this.times;for(let e=0,t=r.length;e!==t;++e)r[e]*=n}return this}trim(e,t){var n=this.times,r=n.length;let i=0,a=r-1;for(;i!==r&&n[i]<e;)++i;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==i||a!==r){i>=a&&(a=Math.max(a,1),i=a-1);const e=this.getValueSize();this.times=y.arraySlice(n,i,a),this.values=y.arraySlice(this.values,i*e,a*e)}return this}validate(){let n=!0;var e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),n=!1);const r=this.times,i=this.values,t=r.length;0===t&&(console.error("THREE.KeyframeTrack: Track is empty.",this),n=!1);let a=null;for(let e=0;e!==t;e++){const i=r[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),n=!1;break}if(null!==a&&a>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,a),n=!1;break}a=i}if(void 0!==i&&y.isTypedArray(i))for(let e=0,t=i.length;e!==t;++e){const r=i[e];if(isNaN(r)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,r),n=!1;break}}return n}optimize(){const n=y.arraySlice(this.times),r=y.arraySlice(this.values),i=this.getValueSize(),a=this.getInterpolation()===he,s=n.length-1;let o=1;for(let e=1;e<s;++e){let t=!1;var l=n[e];if(l!==n[e+1]&&(1!==e||l!==n[0]))if(a)t=!0;else{const n=e*i,a=n-i,o=n+i;for(let e=0;e!==i;++e){const i=r[n+e];if(i!==r[a+e]||i!==r[o+e]){t=!0;break}}}if(t){if(e!==o){n[o]=n[e];const a=e*i,s=o*i;for(let e=0;e!==i;++e)r[s+e]=r[a+e]}++o}}if(0<s){n[o]=n[s];for(let e=s*i,t=o*i,n=0;n!==i;++n)r[t+n]=r[e+n];++o}return o!==n.length?(this.times=y.arraySlice(n,0,o),this.values=y.arraySlice(r,0,o*i)):(this.times=n,this.values=r),this}clone(){var e=y.arraySlice(this.times,0),t=y.arraySlice(this.values,0),e=new this.constructor(this.name,e,t);return e.createInterpolant=this.createInterpolant,e}}Ao.prototype.TimeBufferType=Float32Array,Ao.prototype.ValueBufferType=Float32Array,Ao.prototype.DefaultInterpolation=ce;class Ro extends Ao{}Ro.prototype.ValueTypeName="bool",Ro.prototype.ValueBufferType=Array,Ro.prototype.DefaultInterpolation=le,Ro.prototype.InterpolantFactoryMethodLinear=void 0,Ro.prototype.InterpolantFactoryMethodSmooth=void 0;class Lo extends Ao{}Lo.prototype.ValueTypeName="color";class Co extends Ao{}function Po(e,t,n,r){Mo.call(this,e,t,n,r)}Co.prototype.ValueTypeName="number",Po.prototype=Object.assign(Object.create(Mo.prototype),{constructor:Po,interpolate_:function(e,t,n,r){var i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(n-t)/(r-t);let l=e*s;for(var c=l+s;l!==c;l+=4)f.slerpFlat(i,0,a,l-s,a,l,o);return i}});class Do extends Ao{InterpolantFactoryMethodLinear(e){return new Po(this.times,this.values,this.getValueSize(),e)}}Do.prototype.ValueTypeName="quaternion",Do.prototype.DefaultInterpolation=ce,Do.prototype.InterpolantFactoryMethodSmooth=void 0;class Io extends Ao{}Io.prototype.ValueTypeName="string",Io.prototype.ValueBufferType=Array,Io.prototype.DefaultInterpolation=le,Io.prototype.InterpolantFactoryMethodLinear=void 0,Io.prototype.InterpolantFactoryMethodSmooth=void 0;class No extends Ao{}class Bo{constructor(e,t=-1,n,r=2500){this.name=e,this.tracks=n,this.duration=t,this.blendMode=r,this.uuid=Ee.generateUUID(),this.duration<0&&this.resetDuration()}static parse(e){var n=[],r=e.tracks,i=1/(e.fps||1);for(let e=0,t=r.length;e!==t;++e)n.push(function(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Co;case"vector":case"vector2":case"vector3":case"vector4":return No;case"color":return Lo;case"quaternion":return Do;case"bool":case"boolean":return Ro;case"string":return Io}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){const t=[],n=[];y.flattenJSON(e.keys,t,n,"value"),e.times=t,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}(r[e]).scale(i));var t=new this(e.name,e.duration,n,e.blendMode);return t.uuid=e.uuid,t}static toJSON(e){var n=[],r=e.tracks,e={name:e.name,duration:e.duration,tracks:n,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,t=r.length;e!==t;++e)n.push(Ao.toJSON(r[e]));return e}static CreateFromMorphTargetSequence(e,r,i,a){var s=r.length,o=[];for(let n=0;n<s;n++){let e=[],t=[];e.push((n+s-1)%s,n,(n+1)%s),t.push(0,1,0);var l=y.getKeyframeOrder(e);e=y.sortedArray(e,1,l),t=y.sortedArray(t,1,l),a||0!==e[0]||(e.push(s),t.push(t[0])),o.push(new Co(".morphTargetInfluences["+r[n].name+"]",e,t).scale(1/i))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const t=e;n=t.geometry&&t.geometry.animations||t.animations}for(let e=0;e<n.length;e++)if(n[e].name===t)return n[e];return null}static CreateClipsFromMorphTargetSequences(n,e,r){var i={},a=/^([\w-]*?)([\d]+)$/;for(let e=0,t=n.length;e<t;e++){const r=n[e],s=r.name.match(a);if(s&&1<s.length){const n=s[1];let e=i[n];e||(i[n]=e=[]),e.push(r)}}const s=[];for(const n in i)s.push(this.CreateFromMorphTargetSequence(n,i[n],e,r));return s}static parseAnimation(n,t){if(!n)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const r=function(e,t,n,r,i){var a,s;0!==n.length&&(a=[],s=[],y.flattenJSON(n,a,s,r),0!==a.length)&&i.push(new e(t,a,s))},i=[],a=n.name||"default",s=n.fps||30,e=n.blendMode;let o=n.length||-1;var l=n.hierarchy||[];for(let e=0;e<l.length;e++){const a=l[e].keys;if(a&&0!==a.length)if(a[0].morphTargets){const n={};let t;for(t=0;t<a.length;t++)if(a[t].morphTargets)for(let e=0;e<a[t].morphTargets.length;e++)n[a[t].morphTargets[e]]=-1;for(const r in n){const n=[],s=[];for(let e=0;e!==a[t].morphTargets.length;++e){const i=a[t];n.push(i.time),s.push(i.morphTarget===r?1:0)}i.push(new Co(".morphTargetInfluence["+r+"]",n,s))}o=n.length*(s||1)}else{const s=".bones["+t[e].name+"]";r(No,s+".position",a,"pos",i),r(Do,s+".quaternion",a,"rot",i),r(No,s+".scale",a,"scl",i)}}return 0===i.length?null:new this(a,o,i,e)}resetDuration(){let n=0;for(let e=0,t=this.tracks.length;e!==t;++e){var r=this.tracks[e];n=Math.max(n,r.times[r.times.length-1])}return this.duration=n,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){var t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}const Ho={enabled:!(No.prototype.ValueTypeName="vector"),files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function Uo(e,t,n){const r=this;let i,a=!1,s=0,o=0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,!1===a&&void 0!==r.onStart&&r.onStart(e,s,o),a=!0},this.itemEnd=function(e){s++,void 0!==r.onProgress&&r.onProgress(e,s,o),s===o&&(a=!1,void 0!==r.onLoad)&&r.onLoad()},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return i?i(e):e},this.setURLModifier=function(e){return i=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){e=l.indexOf(e);return-1!==e&&l.splice(e,2),this},this.getHandler=function(n){for(let e=0,t=l.length;e<t;e+=2){var r=l[e],i=l[e+1];if(r.global&&(r.lastIndex=0),r.test(n))return i}return null}}const Oo=new Uo;function l(e){this.manager=void 0!==e?e:Oo,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(l.prototype,{load:function(){},loadAsync:function(n,r){const i=this;return new Promise(function(e,t){i.load(n,e,r,t)})},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});const zo={};function Fo(e){l.call(this,e)}function Go(e){l.call(this,e)}Fo.prototype=Object.assign(Object.create(l.prototype),{constructor:Fo,load:function(a,n,r,i){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);const s=this,o=Ho.get(a);if(void 0!==o)return s.manager.itemStart(a),setTimeout(function(){n&&n(o),s.manager.itemEnd(a)},0),o;if(void 0===zo[a]){var l=a.match(/^data:(.*?)(;base64)?,(.*)$/);let e;if(l){const r=l[1],o=!!l[2];let t=l[3];t=decodeURIComponent(t),o&&(t=atob(t));try{let e;const o=(this.responseType||"").toLowerCase();switch(o){case"arraybuffer":case"blob":const a=new Uint8Array(t.length);for(let e=0;e<t.length;e++)a[e]=t.charCodeAt(e);e="blob"===o?new Blob([a.buffer],{type:r}):a.buffer;break;case"document":const n=new DOMParser;e=n.parseFromString(t,r);break;case"json":e=JSON.parse(t);break;default:e=t}setTimeout(function(){n&&n(e),s.manager.itemEnd(a)},0)}catch(n){setTimeout(function(){i&&i(n),s.manager.itemError(a),s.manager.itemEnd(a)},0)}}else{zo[a]=[],zo[a].push({onLoad:n,onProgress:r,onError:i}),(e=new XMLHttpRequest).open("GET",a,!0),e.addEventListener("load",function(n){const r=this.response,i=zo[a];if(delete zo[a],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Ho.add(a,r);for(let e=0,t=i.length;e<t;e++){const n=i[e];n.onLoad&&n.onLoad(r)}}else{for(let e=0,t=i.length;e<t;e++){const r=i[e];r.onError&&r.onError(n)}s.manager.itemError(a)}s.manager.itemEnd(a)},!1),e.addEventListener("progress",function(n){var r=zo[a];for(let e=0,t=r.length;e<t;e++){var i=r[e];i.onProgress&&i.onProgress(n)}},!1),e.addEventListener("error",function(n){var r=zo[a];delete zo[a];for(let e=0,t=r.length;e<t;e++){var i=r[e];i.onError&&i.onError(n)}s.manager.itemError(a),s.manager.itemEnd(a)},!1),e.addEventListener("abort",function(n){var r=zo[a];delete zo[a];for(let e=0,t=r.length;e<t;e++){var i=r[e];i.onError&&i.onError(n)}s.manager.itemError(a),s.manager.itemEnd(a)},!1),void 0!==this.responseType&&(e.responseType=this.responseType),void 0!==this.withCredentials&&(e.withCredentials=this.withCredentials),e.overrideMimeType&&e.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const a in this.requestHeader)e.setRequestHeader(a,this.requestHeader[a]);e.send(null)}return s.manager.itemStart(a),e}zo[a].push({onLoad:n,onProgress:r,onError:i})},setResponseType:function(e){return this.responseType=e,this},setMimeType:function(e){return this.mimeType=e,this}}),Go.prototype=Object.assign(Object.create(l.prototype),{constructor:Go,load:function(n,r,i,a){const s=this,o=[],l=new vs,c=new Fo(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(s.withCredentials);let h=0;if(Array.isArray(n))for(let e=0,t=n.length;e<t;++e)!function(t){c.load(n[t],function(e){e=s.parse(e,!0);o[t]={width:e.width,height:e.height,format:e.format,mipmaps:e.mipmaps},6===(h+=1)&&(1===e.mipmapCount&&(l.minFilter=z),l.image=o,l.format=e.format,l.needsUpdate=!0,r)&&r(l)},i,a)}(e);else c.load(n,function(e){var n=s.parse(e,!0);if(n.isCubemap){const e=n.mipmaps.length/n.mipmapCount;for(let t=0;t<e;t++){o[t]={mipmaps:[]};for(let e=0;e<n.mipmapCount;e++)o[t].mipmaps.push(n.mipmaps[t*n.mipmapCount+e]),o[t].format=n.format,o[t].width=n.width,o[t].height=n.height}l.image=o}else l.image.width=n.width,l.image.height=n.height,l.mipmaps=n.mipmaps;1===n.mipmapCount&&(l.minFilter=z),l.format=n.format,l.needsUpdate=!0,r&&r(l)},i,a);return l}});class ko extends l{constructor(e){super(e)}load(t,e,n,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,a=Ho.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){e&&e(a),i.manager.itemEnd(t)},0),a;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),Ho.add(t,this),e&&e(this),i.manager.itemEnd(t)}function l(e){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),i.manager.itemStart(t),s.src=t,s}}class Vo extends l{constructor(e){super(e)}load(n,r,e,i){const a=new er,s=new ko(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;for(let e=0;e<n.length;++e)!function(t){s.load(n[t],function(e){a.images[t]=e,6===++o&&(a.needsUpdate=!0,r)&&r(a)},void 0,i)}(e);return a}}function Wo(e){l.call(this,e)}function jo(e){l.call(this,e)}function qo(){this.type="Curve",this.arcLengthDivisions=200}Wo.prototype=Object.assign(Object.create(l.prototype),{constructor:Wo,load:function(e,t,n,r){const i=this,a=new nr,s=new Fo(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(i.withCredentials),s.load(e,function(e){e=i.parse(e);e&&(void 0!==e.image?a.image=e.image:void 0!==e.data&&(a.image.width=e.width,a.image.height=e.height,a.image.data=e.data),a.wrapS=void 0!==e.wrapS?e.wrapS:G,a.wrapT=void 0!==e.wrapT?e.wrapT:G,a.magFilter=void 0!==e.magFilter?e.magFilter:z,a.minFilter=void 0!==e.minFilter?e.minFilter:z,a.anisotropy=void 0!==e.anisotropy?e.anisotropy:1,void 0!==e.encoding&&(a.encoding=e.encoding),void 0!==e.flipY&&(a.flipY=e.flipY),void 0!==e.format&&(a.format=e.format),void 0!==e.type&&(a.type=e.type),void 0!==e.mipmaps&&(a.mipmaps=e.mipmaps,a.minFilter=Y),1===e.mipmapCount&&(a.minFilter=z),void 0!==e.generateMipmaps&&(a.generateMipmaps=e.generateMipmaps),a.needsUpdate=!0,t)&&t(a,e)},n,r),a}}),jo.prototype=Object.assign(Object.create(l.prototype),{constructor:jo,load:function(t,n,e,r){const i=new h,a=new ko(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,function(e){i.image=e;e=0<t.search(/\.jpe?g($|\?)/i)||0===t.search(/^data\:image\/jpeg/);i.format=e?K:Ne,i.needsUpdate=!0,void 0!==n&&n(i)},e,r),i}}),Object.assign(qo.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){e=this.getUtoTmapping(e);return this.getPoint(e,t)},getPoints:function(t=5){var n=[];for(let e=0;e<=t;e++)n.push(this.getPoint(e/t));return n},getSpacedPoints:function(t=5){var n=[];for(let e=0;e<=t;e++)n.push(this.getPointAt(e/t));return n},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var n=[];let r,i=this.getPoint(0),a=0;n.push(0);for(let e=1;e<=t;e++)r=this.getPoint(e/t),a+=r.distanceTo(i),n.push(a),i=r;return this.cacheArcLengths=n},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){var n=this.getLengths();let r=0;var i=n.length,a=t||e*n[i-1];let s,o=0,l=i-1;for(;o<=l;)if((s=n[r=Math.floor(o+(l-o)/2)]-a)<0)o=r+1;else{if(!(0<s)){l=r;break}l=r-1}return n[r=l]===a?r/(i-1):(t=n[r],(r+(a-t)/(n[r+1]-t))/(i-1))},getTangent:function(e,t){let n=e-1e-4,r=e+1e-4;n<0&&(n=0),1<r&&(r=1);var e=this.getPoint(n),i=this.getPoint(r),t=t||new(e.isVector2?Se:Re);return t.copy(i).sub(e).normalize(),t},getTangentAt:function(e,t){e=this.getUtoTmapping(e);return this.getTangent(e,t)},computeFrenetFrames:function(n,e){const t=new Re,r=[],i=[],a=[],s=new Re,o=new Le;for(let e=0;e<=n;e++){const t=e/n;r[e]=this.getTangentAt(t,new Re),r[e].normalize()}i[0]=new Re,a[0]=new Re;let l=Number.MAX_VALUE;var c=Math.abs(r[0].x),h=Math.abs(r[0].y),u=Math.abs(r[0].z);c<=l&&(l=c,t.set(1,0,0)),h<=l&&(l=h,t.set(0,1,0)),u<=l&&t.set(0,0,1),s.crossVectors(r[0],t).normalize(),i[0].crossVectors(r[0],s),a[0].crossVectors(r[0],i[0]);for(let e=1;e<=n;e++){if(i[e]=i[e-1].clone(),a[e]=a[e-1].clone(),s.crossVectors(r[e-1],r[e]),s.length()>Number.EPSILON){s.normalize();const n=Math.acos(Ee.clamp(r[e-1].dot(r[e]),-1,1));i[e].applyMatrix4(o.makeRotationAxis(s,n))}a[e].crossVectors(r[e],i[e])}if(!0===e){let t=Math.acos(Ee.clamp(i[0].dot(i[n]),-1,1));t/=n,0<r[0].dot(s.crossVectors(i[0],i[n]))&&(t=-t);for(let e=1;e<=n;e++)i[e].applyMatrix4(o.makeRotationAxis(r[e],t*e)),a[e].crossVectors(r[e],i[e])}return{tangents:r,normals:i,binormals:a}},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){var e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}});class Xo extends qo{constructor(e=0,t=0,n=1,r=1,i=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){const n=t||new Se,r=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;for(t=Math.abs(i)<Number.EPSILON;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=t?0:r),!0!==this.aClockwise||t||(i===r?i=-r:i-=r);t=this.aStartAngle+e*i;let a=this.aX+this.xRadius*Math.cos(t),s=this.aY+this.yRadius*Math.sin(t);if(0!==this.aRotation){const e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),n=a-this.aX,r=s-this.aY;a=n*e-r*t+this.aX,s=n*t+r*e+this.aY}return n.set(a,s)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){var e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}Xo.prototype.isEllipseCurve=!0;class Yo extends Xo{constructor(e,t,n,r,i,a){super(e,t,n,n,r,i,a),this.type="ArcCurve"}}function Zo(){let i=0,a=0,s=0,o=0;function l(e,t,n,r){i=e,a=n,s=-3*e+3*t-2*n-r,o=2*e-2*t+n+r}return{initCatmullRom:function(e,t,n,r,i){l(t,n,i*(n-e),i*(r-t))},initNonuniformCatmullRom:function(e,t,n,r,i,a,s){e=(t-e)/i-(n-e)/(i+a)+(n-t)/a,i=(n-t)/a-(r-t)/(a+s)+(r-n)/s;l(t,n,e*=a,i*=a)},calc:function(e){var t=e*e;return i+a*e+s*t+o*(t*e)}}}Yo.prototype.isArcCurve=!0;const Jo=new Re,Qo=new Zo,Ko=new Zo,$o=new Zo;class el extends qo{constructor(e=[],t=!1,n="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=r}getPoint(r,e=new Re){var t=this.points,n=t.length,r=(n-(this.closed?0:1))*r;let i,a,s=Math.floor(r),o=r-s;this.closed?s+=0<s?0:(Math.floor(Math.abs(s)/n)+1)*n:0===o&&s===n-1&&(s=n-2,o=1),i=this.closed||0<s?t[(s-1)%n]:(Jo.subVectors(t[0],t[1]).add(t[0]),Jo);var l=t[s%n],c=t[(s+1)%n];if(a=this.closed||s+2<n?t[(s+2)%n]:(Jo.subVectors(t[n-1],t[n-2]).add(t[n-1]),Jo),"centripetal"===this.curveType||"chordal"===this.curveType){const r="chordal"===this.curveType?.5:.25;let e=Math.pow(i.distanceToSquared(l),r),t=Math.pow(l.distanceToSquared(c),r),n=Math.pow(c.distanceToSquared(a),r);t<1e-4&&(t=1),e<1e-4&&(e=t),n<1e-4&&(n=t),Qo.initNonuniformCatmullRom(i.x,l.x,c.x,a.x,e,t,n),Ko.initNonuniformCatmullRom(i.y,l.y,c.y,a.y,e,t,n),$o.initNonuniformCatmullRom(i.z,l.z,c.z,a.z,e,t,n)}else"catmullrom"===this.curveType&&(Qo.initCatmullRom(i.x,l.x,c.x,a.x,this.tension),Ko.initCatmullRom(i.y,l.y,c.y,a.y,this.tension),$o.initCatmullRom(i.z,l.z,c.z,a.z,this.tension));return e.set(Qo.calc(o),Ko.calc(o),$o.calc(o)),e}copy(n){super.copy(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){var r=n.points[e];this.points.push(r.clone())}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}toJSON(){var n=super.toJSON();n.points=[];for(let e=0,t=this.points.length;e<t;e++){var r=this.points[e];n.points.push(r.toArray())}return n.closed=this.closed,n.curveType=this.curveType,n.tension=this.tension,n}fromJSON(n){super.fromJSON(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){var r=n.points[e];this.points.push((new Re).fromArray(r))}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}}function tl(e,t,n,r,i){var t=.5*(r-t),i=.5*(i-n),a=e*e;return e*a*(2*n-2*r+t+i)+(-3*n+3*r-2*t-i)*a+t*e+n}function nl(e,t,n,r){return(i=1-e)*i*t+2*(1-e)*e*n+e*e*r;var i}function rl(e,t,n,r,i){return(a=1-e)*a*a*t+3*(a=1-e)*a*e*n+3*(1-e)*e*e*r+e*e*e*i;var a}class il extends qo{constructor(e=new Se,t=new Se,n=new Se,r=new Se){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new Se){var n=this.v0,r=this.v1,i=this.v2,a=this.v3;return t.set(rl(e,n.x,r.x,i.x,a.x),rl(e,n.y,r.y,i.y,a.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){var e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}il.prototype.isCubicBezierCurve=el.prototype.isCatmullRomCurve3=!0;class al extends qo{constructor(e=new Re,t=new Re,n=new Re,r=new Re){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new Re){var n=this.v0,r=this.v1,i=this.v2,a=this.v3;return t.set(rl(e,n.x,r.x,i.x,a.x),rl(e,n.y,r.y,i.y,a.y),rl(e,n.z,r.z,i.z,a.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){var e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class sl extends qo{constructor(e=new Se,t=new Se){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Se){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){t=t||new Se;return t.copy(this.v2).sub(this.v1).normalize(),t}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){var e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}sl.prototype.isLineCurve=al.prototype.isCubicBezierCurve3=!0;class ol extends qo{constructor(e=new Re,t=new Re){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new Re){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){var e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ll extends qo{constructor(e=new Se,t=new Se,n=new Se){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new Se){var n=this.v0,r=this.v1,i=this.v2;return t.set(nl(e,n.x,r.x,i.x),nl(e,n.y,r.y,i.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){var e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}ll.prototype.isQuadraticBezierCurve=!0;class cl extends qo{constructor(e=new Re,t=new Re,n=new Re){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new Re){var n=this.v0,r=this.v1,i=this.v2;return t.set(nl(e,n.x,r.x,i.x),nl(e,n.y,r.y,i.y),nl(e,n.z,r.z,i.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){var e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class hl extends qo{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new Se){var n=this.points,e=(n.length-1)*e,r=Math.floor(e),e=e-r,i=n[0===r?r:r-1],a=n[r],s=n[r>n.length-2?n.length-1:r+1],n=n[r>n.length-3?n.length-1:r+2];return t.set(tl(e,i.x,a.x,s.x,n.x),tl(e,i.y,a.y,s.y,n.y)),t}copy(n){super.copy(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){var r=n.points[e];this.points.push(r.clone())}return this}toJSON(){var n=super.toJSON();n.points=[];for(let e=0,t=this.points.length;e<t;e++){var r=this.points[e];n.points.push(r.toArray())}return n}fromJSON(n){super.fromJSON(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){var r=n.points[e];this.points.push((new Se).fromArray(r))}return this}}hl.prototype.isSplineCurve=cl.prototype.isQuadraticBezierCurve3=!0;var ul=Object.freeze({__proto__:null,ArcCurve:Yo,CatmullRomCurve3:el,CubicBezierCurve:il,CubicBezierCurve3:al,EllipseCurve:Xo,LineCurve:sl,LineCurve3:ol,QuadraticBezierCurve:ll,QuadraticBezierCurve3:cl,SplineCurve:hl});class dl extends qo{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new sl(t,e))}getPoint(e){var t=e*this.getLength(),n=this.getCurveLengths();let r=0;for(;r<n.length;){if(n[r]>=t){const e=n[r]-t,i=this.curves[r],a=i.getLength(),s=0===a?0:1-e/a;return i.getPointAt(s)}r++}return null}getLength(){var e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;var n=[];let r=0;for(let e=0,t=this.curves.length;e<t;e++)r+=this.curves[e].getLength(),n.push(r);return this.cacheLengths=n}getSpacedPoints(t=40){var n=[];for(let e=0;e<=t;e++)n.push(this.getPoint(e/t));return this.autoClose&&n.push(n[0]),n}getPoints(n=12){var r=[];let i;for(let e=0,t=this.curves;e<t.length;e++){var a=t[e],s=a&&a.isEllipseCurve?2*n:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?n*a.points.length:n,o=a.getPoints(s);for(let e=0;e<o.length;e++){var l=o[e];i&&i.equals(l)||(r.push(l),i=l)}}return this.autoClose&&1<r.length&&!r[r.length-1].equals(r[0])&&r.push(r[0]),r}copy(n){super.copy(n),this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){var r=n.curves[e];this.curves.push(r.clone())}return this.autoClose=n.autoClose,this}toJSON(){var n=super.toJSON();n.autoClose=this.autoClose,n.curves=[];for(let e=0,t=this.curves.length;e<t;e++){var r=this.curves[e];n.curves.push(r.toJSON())}return n}fromJSON(n){super.fromJSON(n),this.autoClose=n.autoClose,this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){var r=n.curves[e];this.curves.push((new ul[r.type]).fromJSON(r))}return this}}class pl extends dl{constructor(e){super(),this.type="Path",this.currentPoint=new Se,e&&this.setFromPoints(e)}setFromPoints(n){this.moveTo(n[0].x,n[0].y);for(let e=1,t=n.length;e<t;e++)this.lineTo(n[e].x,n[e].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){var n=new sl(this.currentPoint.clone(),new Se(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,r){e=new ll(this.currentPoint.clone(),new Se(e,t),new Se(n,r));return this.curves.push(e),this.currentPoint.set(n,r),this}bezierCurveTo(e,t,n,r,i,a){e=new il(this.currentPoint.clone(),new Se(e,t),new Se(n,r),new Se(i,a));return this.curves.push(e),this.currentPoint.set(i,a),this}splineThru(e){var t=[this.currentPoint.clone()].concat(e),t=new hl(t);return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,r,i,a){var s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,n,r,i,a),this}absarc(e,t,n,r,i,a){return this.absellipse(e,t,n,n,r,i,a),this}ellipse(e,t,n,r,i,a,s,o){var l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+l,t+c,n,r,i,a,s,o),this}absellipse(e,t,n,r,i,a,s,o){t=new Xo(e,t,n,r,i,a,s,o);if(0<this.curves.length){const e=t.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(t);e=t.getPoint(1);return this.currentPoint.copy(e),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){var e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class fl extends pl{constructor(e){super(e),this.uuid=Ee.generateUUID(),this.type="Shape",this.holes=[]}getPointsHoles(n){var r=[];for(let e=0,t=this.holes.length;e<t;e++)r[e]=this.holes[e].getPoints(n);return r}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(n){super.copy(n),this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){var r=n.holes[e];this.holes.push(r.clone())}return this}toJSON(){var n=super.toJSON();n.uuid=this.uuid,n.holes=[];for(let e=0,t=this.holes.length;e<t;e++){var r=this.holes[e];n.holes.push(r.toJSON())}return n}fromJSON(n){super.fromJSON(n),this.uuid=n.uuid,this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){var r=n.holes[e];this.holes.push((new pl).fromJSON(r))}return this}}class ml extends c{constructor(e,t=1){super(),this.type="Light",this.color=new Ce(e),this.intensity=t}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){e=super.toJSON(e);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}ml.prototype.isLight=!0;class gl extends ml{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(c.DefaultUp),this.updateMatrix(),this.groundColor=new Ce(t)}copy(e){return ml.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}gl.prototype.isHemisphereLight=!0;const vl=new Le,yl=new Re,xl=new Re;class _l{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Se(512,512),this.map=null,this.mapPass=null,this.matrix=new Le,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ar,this._frameExtents=new Se(1,1),this._viewportCount=1,this._viewports=[new Ae(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){var t=this.camera,n=this.matrix;yl.setFromMatrixPosition(e.matrixWorld),t.position.copy(yl),xl.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(xl),t.updateMatrixWorld(),vl.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(vl),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){var e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class bl extends _l{constructor(){super(new R(50,1,.5,500)),this.focus=1}updateMatrices(e){var t=this.camera,n=2*Ee.RAD2DEG*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;n===t.fov&&r===t.aspect&&i===t.far||(t.fov=n,t.aspect=r,t.far=i,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}bl.prototype.isSpotLightShadow=!0;class wl extends ml{constructor(e,t,n=0,r=Math.PI/3,i=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(c.DefaultUp),this.updateMatrix(),this.target=new c,this.distance=n,this.angle=r,this.penumbra=i,this.decay=a,this.shadow=new bl}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}wl.prototype.isSpotLight=!0;const Ml=new Le,Tl=new Re,El=new Re;class Sl extends _l{constructor(){super(new R(90,1,.5,500)),this._frameExtents=new Se(4,2),this._viewportCount=6,this._viewports=[new Ae(2,1,1,1),new Ae(0,1,1,1),new Ae(3,1,1,1),new Ae(1,1,1,1),new Ae(3,0,1,1),new Ae(1,0,1,1)],this._cubeDirections=[new Re(1,0,0),new Re(-1,0,0),new Re(0,0,1),new Re(0,0,-1),new Re(0,1,0),new Re(0,-1,0)],this._cubeUps=[new Re(0,1,0),new Re(0,1,0),new Re(0,1,0),new Re(0,1,0),new Re(0,0,1),new Re(0,0,-1)]}updateMatrices(e,t=0){var n=this.camera,r=this.matrix,i=e.distance||n.far;i!==n.far&&(n.far=i,n.updateProjectionMatrix()),Tl.setFromMatrixPosition(e.matrixWorld),n.position.copy(Tl),El.copy(n.position),El.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(El),n.updateMatrixWorld(),r.makeTranslation(-Tl.x,-Tl.y,-Tl.z),Ml.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ml)}}Sl.prototype.isPointLightShadow=!0;class Al extends ml{constructor(e,t,n=0,r=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new Sl}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}Al.prototype.isPointLight=!0;class Rl extends Kn{constructor(e=-1,t=1,n=1,r=-1,i=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-e,a=n+e,s=r+t,o=r-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=e*this.view.offsetX,a=i+e*this.view.width,s-=t*this.view.offsetY,o=s-t*this.view.height}this.projectionMatrix.makeOrthographic(i,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){e=c.prototype.toJSON.call(this,e);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}Rl.prototype.isOrthographicCamera=!0;class Ll extends _l{constructor(){super(new Rl(-5,5,5,-5,.5,500))}}Ll.prototype.isDirectionalLightShadow=!0;class Cl extends ml{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(c.DefaultUp),this.updateMatrix(),this.target=new c,this.shadow=new Ll}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Cl.prototype.isDirectionalLight=!0;class Pl extends ml{constructor(e,t){super(e,t),this.type="AmbientLight"}}Pl.prototype.isAmbientLight=!0;class Dl extends ml{constructor(e,t,n=10,r=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=r}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){e=super.toJSON(e);return e.object.width=this.width,e.object.height=this.height,e}}Dl.prototype.isRectAreaLight=!0;class Il{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new Re)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){var n=e.x,r=e.y,e=e.z,i=this.coefficients;return t.copy(i[0]).multiplyScalar(.282095),t.addScaledVector(i[1],.488603*r),t.addScaledVector(i[2],.488603*e),t.addScaledVector(i[3],.488603*n),t.addScaledVector(i[4],n*r*1.092548),t.addScaledVector(i[5],r*e*1.092548),t.addScaledVector(i[6],.315392*(3*e*e-1)),t.addScaledVector(i[7],n*e*1.092548),t.addScaledVector(i[8],.546274*(n*n-r*r)),t}getIrradianceAt(e,t){var n=e.x,r=e.y,e=e.z,i=this.coefficients;return t.copy(i[0]).multiplyScalar(.886227),t.addScaledVector(i[1],1.023328*r),t.addScaledVector(i[2],1.023328*e),t.addScaledVector(i[3],1.023328*n),t.addScaledVector(i[4],.858086*n*r),t.addScaledVector(i[5],.858086*r*e),t.addScaledVector(i[6],.743125*e*e-.247708),t.addScaledVector(i[7],.858086*n*e),t.addScaledVector(i[8],.429043*(n*n-r*r)),t}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,n){for(let e=0;e<9;e++)this.coefficients[e].addScaledVector(t.coefficients[e],n);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,n){for(let e=0;e<9;e++)this.coefficients[e].lerp(t.coefficients[e],n);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,n=0){var r=this.coefficients;for(let e=0;e<9;e++)r[e].fromArray(t,n+3*e);return this}toArray(t=[],n=0){var r=this.coefficients;for(let e=0;e<9;e++)r[e].toArray(t,n+3*e);return t}static getBasisAt(e,t){var n=e.x,r=e.y,e=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*e,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*e,t[6]=.315392*(3*e*e-1),t[7]=1.092548*n*e,t[8]=.546274*(n*n-r*r)}}Il.prototype.isSphericalHarmonics3=!0;class Nl extends ml{constructor(e=new Il,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){e=super.toJSON(e);return e.object.sh=this.sh.toArray(),e}}Nl.prototype.isLightProbe=!0;class Bl extends l{constructor(e){super(e),this.textures={}}load(t,n,e,r){const i=this,a=new Fo(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(t,function(e){try{n(i.parse(JSON.parse(e)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}},e,r)}parse(t){const n=this.textures;function e(e){return void 0===n[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),n[e]}var r=new wo[t.type];if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&void 0!==r.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.sheen&&(r.sheen=(new Ce).setHex(t.sheen)),void 0!==t.emissive&&void 0!==r.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==r.specular&&r.specular.setHex(t.specular),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearcoat&&(r.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(r.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.flatShading&&(r.flatShading=t.flatShading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.combine&&(r.combine=t.combine),void 0!==t.side&&(r.side=t.side),void 0!==t.shadowSide&&(r.shadowSide=t.shadowSide),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(r.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(r.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(r.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(r.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(r.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(r.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(r.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(r.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(r.rotation=t.rotation),1!==t.linewidth&&(r.linewidth=t.linewidth),void 0!==t.dashSize&&(r.dashSize=t.dashSize),void 0!==t.gapSize&&(r.gapSize=t.gapSize),void 0!==t.scale&&(r.scale=t.scale),void 0!==t.polygonOffset&&(r.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(r.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(r.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(r.skinning=t.skinning),void 0!==t.morphTargets&&(r.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(r.morphNormals=t.morphNormals),void 0!==t.dithering&&(r.dithering=t.dithering),void 0!==t.alphaToCoverage&&(r.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(r.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.vertexTangents&&(r.vertexTangents=t.vertexTangents),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.toneMapped&&(r.toneMapped=t.toneMapped),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?r.vertexColors=0<t.vertexColors:r.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const n in t.uniforms){var i=t.uniforms[n];switch(r.uniforms[n]={},i.type){case"t":r.uniforms[n].value=e(i.value);break;case"c":r.uniforms[n].value=(new Ce).setHex(i.value);break;case"v2":r.uniforms[n].value=(new Se).fromArray(i.value);break;case"v3":r.uniforms[n].value=(new Re).fromArray(i.value);break;case"v4":r.uniforms[n].value=(new Ae).fromArray(i.value);break;case"m3":r.uniforms[n].value=(new v).fromArray(i.value);break;case"m4":r.uniforms[n].value=(new Le).fromArray(i.value);break;default:r.uniforms[n].value=i.value}}if(void 0!==t.defines&&(r.defines=t.defines),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const n in t.extensions)r.extensions[n]=t.extensions[n];if(void 0!==t.shading&&(r.flatShading=1===t.shading),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=e(t.map)),void 0!==t.matcap&&(r.matcap=e(t.matcap)),void 0!==t.alphaMap&&(r.alphaMap=e(t.alphaMap)),void 0!==t.bumpMap&&(r.bumpMap=e(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=e(t.normalMap)),void 0!==t.normalMapType&&(r.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),r.normalScale=(new Se).fromArray(e)}return void 0!==t.displacementMap&&(r.displacementMap=e(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=e(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=e(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=e(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=e(t.specularMap)),void 0!==t.envMap&&(r.envMap=e(t.envMap)),void 0!==t.envMapIntensity&&(r.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(r.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(r.lightMap=e(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=e(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=e(t.gradientMap)),void 0!==t.clearcoatMap&&(r.clearcoatMap=e(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=e(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(r.clearcoatNormalMap=e(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(r.clearcoatNormalScale=(new Se).fromArray(t.clearcoatNormalScale)),void 0!==t.transmission&&(r.transmission=t.transmission),void 0!==t.transmissionMap&&(r.transmissionMap=e(t.transmissionMap)),r}setTextures(e){return this.textures=e,this}}const Hl={decodeText:function(n){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(n);let r="";for(let e=0,t=n.length;e<t;e++)r+=String.fromCharCode(n[e]);try{return decodeURIComponent(escape(r))}catch(n){return r}},extractUrlBase:function(e){var t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}};function Ul(){S.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function Ol(e,t,n,r){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),E.call(this,e,t,n),this.meshPerAttribute=r||1}Ul.prototype=Object.assign(Object.create(S.prototype),{constructor:Ul,isInstancedBufferGeometry:!0,copy:function(e){return S.prototype.copy.call(this,e),this.instanceCount=e.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var e=S.prototype.toJSON.call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}),Ol.prototype=Object.assign(Object.create(E.prototype),{constructor:Ol,isInstancedBufferAttribute:!0,copy:function(e){return E.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){var e=E.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}});class zl extends l{constructor(e){super(e)}load(t,n,e,r){const i=this,a=new Fo(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(t,function(e){try{n(i.parse(JSON.parse(e)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}},e,r)}parse(n){const i={},a={};function r(e,t){var n,r;return void 0!==i[t]?i[t]:(n=e.interleavedBuffers[t],e=e,r=n.buffer,r=void 0!==a[r]?a[r]:(e=e.arrayBuffers[r],e=new Uint32Array(e).buffer,a[r]=e),(e=new va(Mn(n.type,r),n.stride)).uuid=n.uuid,i[t]=e)}const s=new(n.isInstancedBufferGeometry?Ul:S),o=n.data.index;if(void 0!==o){const n=Mn(o.type,o.array);s.setIndex(new E(n,1))}var t=n.data.attributes;for(const i in t){const a=t[i];let e;if(a.isInterleavedBufferAttribute)e=new ya(r(n.data,a.data),a.itemSize,a.offset,a.normalized);else{const n=Mn(a.type,a.array);e=new(a.isInstancedBufferAttribute?Ol:E)(n,a.itemSize,a.normalized)}void 0!==a.name&&(e.name=a.name),void 0!==a.usage&&e.setUsage(a.usage),void 0!==a.updateRange&&(e.updateRange.offset=a.updateRange.offset,e.updateRange.count=a.updateRange.count),s.setAttribute(i,e)}var e=n.data.morphAttributes;if(e)for(const i in e){const a=e[i],o=[];for(let t=0,e=a.length;t<e;t++){const s=a[t];let e;e=s.isInterleavedBufferAttribute?new ya(r(n.data,s.data),s.itemSize,s.offset,s.normalized):new E(Mn(s.type,s.array),s.itemSize,s.normalized),void 0!==s.name&&(e.name=s.name),o.push(e)}s.morphAttributes[i]=o}n.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);var l=n.data.groups||n.data.drawcalls||n.data.offsets;if(void 0!==l)for(let e=0,t=l.length;e!==t;++e){const i=l[e];s.addGroup(i.start,i.count,i.materialIndex)}var c=n.data.boundingSphere;if(void 0!==c){const n=new Re;void 0!==c.center&&n.fromArray(c.center),s.boundingSphere=new ct(n,c.radius)}return n.name&&(s.name=n.name),n.userData&&(s.userData=n.userData),s}}const Fl={UVMapping:w,CubeReflectionMapping:L,CubeRefractionMapping:C,EquirectangularReflectionMapping:P,EquirectangularRefractionMapping:D,CubeUVReflectionMapping:I,CubeUVRefractionMapping:N},Gl={RepeatWrapping:F,ClampToEdgeWrapping:G,MirroredRepeatWrapping:W},kl={NearestFilter:O,NearestMipmapNearestFilter:j,NearestMipmapLinearFilter:q,LinearFilter:z,LinearMipmapNearestFilter:X,LinearMipmapLinearFilter:Y};function Vl(e){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),l.call(this,e),this.options={premultiplyAlpha:"none"}}Vl.prototype=Object.assign(Object.create(l.prototype),{constructor:Vl,isImageBitmapLoader:!0,setOptions:function(e){return this.options=e,this},load:function(t,n,e,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,a=Ho.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){n&&n(a),i.manager.itemEnd(t)},0),a;var s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(i.options,{colorSpaceConversion:"none"}))}).then(function(e){Ho.add(t,e),n&&n(e),i.manager.itemEnd(t)}).catch(function(e){r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}),i.manager.itemStart(t)}});class Wl{constructor(){this.type="ShapePath",this.color=new Ce,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new pl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,r){return this.currentPath.quadraticCurveTo(e,t,n,r),this}bezierCurveTo(e,t,n,r,i,a){return this.currentPath.bezierCurveTo(e,t,n,r,i,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(s,o){function e(n){var r=[];for(let e=0,t=n.length;e<t;e++){var i=n[e],a=new fl;a.curves=i.curves,r.push(a)}return r}const l=qs.isClockWise,c=this.subPaths;if(0===c.length)return[];if(!0===o)return e(c);let h,u,d;var t=[];if(1===c.length)u=c[0],(d=new fl).curves=u.curves,t.push(d);else{var p=!l(c[0].getPoints()),p=s?!p:p,f=[],m=[];let n,r,a=[],i=0;m[i]=void 0,a[i]=[];for(let e=0,t=c.length;e<t;e++)n=(u=c[e]).getPoints(),h=l(n),(h=s?!h:h)?(!p&&m[i]&&i++,m[i]={s:new fl,p:n},m[i].s.curves=u.curves,p&&i++,a[i]=[]):a[i].push({h:u,p:n[0]});if(!m[0])return e(c);if(1<m.length){let i=!1;const o=[];for(let e=0,t=m.length;e<t;e++)f[e]=[];for(let r=0,e=m.length;r<e;r++){const l=a[r];for(let n=0;n<l.length;n++){const h=l[n];let t=!0;for(let e=0;e<m.length;e++)!function(s,o){var e=o.length;let l=!1;for(let i=e-1,a=0;a<e;i=a++){let e=o[i],t=o[a],n=t.x-e.x,r=t.y-e.y;if(Math.abs(r)>Number.EPSILON){if(r<0&&(e=o[a],n=-n,t=o[i],r=-r),!(s.y<e.y||s.y>t.y))if(s.y===e.y){if(s.x===e.x)return 1}else{const o=r*(s.x-e.x)-n*(s.y-e.y);if(0==o)return 1;o<0||(l=!l)}}else if(s.y===e.y&&(t.x<=s.x&&s.x<=e.x||e.x<=s.x&&s.x<=t.x))return 1}return l}(h.p,m[e].p)||(r!==e&&o.push({froms:r,tos:e,hole:n}),t?(t=!1,f[e].push(h)):i=!0);t&&f[r].push(h)}}0<o.length&&(i||(a=f))}for(let n=0,e=m.length;n<e;n++){d=m[n].s,t.push(d);for(let e=0,t=(r=a[n]).length;e<t;e++)d.holes.push(r[e].h)}}return t}}class jl{constructor(e){this.type="Font",this.data=e}generateShapes(e,t=100){var n=[],r=function(t,n,r){var i=Array.from(t),a=n/r.resolution,s=(r.boundingBox.yMax-r.boundingBox.yMin+r.underlineThickness)*a,o=[];let l=0,c=0;for(let e=0;e<i.length;e++){const n=i[e];if("\n"===n)l=0,c-=s;else{const t=function(h,u,d,p,e){var t=e.glyphs[h]||e.glyphs["?"];if(t){var f=new Wl;let n,r,i,a,s,o,l,c;if(t.o){const h=t._cachedOutline||(t._cachedOutline=t.o.split(" "));for(let e=0,t=h.length;e<t;)switch(h[e++]){case"m":n=h[e++]*u+d,r=h[e++]*u+p,f.moveTo(n,r);break;case"l":n=h[e++]*u+d,r=h[e++]*u+p,f.lineTo(n,r);break;case"q":i=h[e++]*u+d,a=h[e++]*u+p,s=h[e++]*u+d,o=h[e++]*u+p,f.quadraticCurveTo(s,o,i,a);break;case"b":i=h[e++]*u+d,a=h[e++]*u+p,s=h[e++]*u+d,o=h[e++]*u+p,l=h[e++]*u+d,c=h[e++]*u+p,f.bezierCurveTo(s,o,l,c,i,a)}}return{offsetX:t.ha*u,path:f}}console.error('THREE.Font: character "'+h+'" does not exists in font family '+e.familyName+".")}(n,a,l,c,r);l+=t.offsetX,o.push(t.path)}}return o}(e,t,this.data);for(let e=0,t=r.length;e<t;e++)Array.prototype.push.apply(n,r[e].toShapes());return n}}jl.prototype.isFont=!0;let ql;const Xl={getContext:function(){return ql=void 0===ql?new(window.AudioContext||window.webkitAudioContext):ql},setContext:function(e){ql=e}};class Yl extends l{constructor(e){super(e)}load(t,n,e,r){const i=this,a=new Fo(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(e){try{const t=e.slice(0);Xl.getContext().decodeAudioData(t,function(e){n(e)})}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}},e,r)}}class Zl extends Nl{constructor(e,t,n=1){super(void 0,n);var n=(new Ce).set(e),e=(new Ce).set(t),t=new Re(n.r,n.g,n.b),n=new Re(e.r,e.g,e.b),e=Math.sqrt(Math.PI),r=e*Math.sqrt(.75);this.sh.coefficients[0].copy(t).add(n).multiplyScalar(e),this.sh.coefficients[1].copy(t).sub(n).multiplyScalar(r)}}class Jl extends Nl{constructor(e,t=1){super(void 0,t);t=(new Ce).set(e);this.sh.coefficients[0].set(t.r,t.g,t.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Jl.prototype.isAmbientLightProbe=Zl.prototype.isHemisphereLightProbe=!0;const Ql=new Le,Kl=new Le;class $l{constructor(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=ec(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;var t;return this.autoStart&&!this.running?(this.start(),0):(this.running&&(t=ec(),e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e),e)}}function ec(){return("undefined"==typeof performance?Date:performance).now()}const tc=new Re,nc=new f,rc=new Re,ic=new Re;class ac extends c{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)console.warn("THREE.Audio: Audio is already playing.");else{if(!1!==this.hasPlaybackControl)return this._startedAt=this.context.currentTime+e,(e=this.context.createBufferSource()).buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect();console.warn("THREE.Audio: this Audio has no playback control.")}}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e=e||[],!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const sc=new Re,oc=new f,lc=new Re,cc=new Re;class hc{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;var n=this.getFrequencyData();for(let e=0;e<n.length;e++)t+=n[e];return t/n.length}}class uc{constructor(e,t,n){let r,i,a;switch(this.binding=e,this.valueSize=n,t){case"quaternion":r=this._slerp,i=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,i=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,i=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=i,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){var n=this.buffer,r=this.valueSize,i=e*r+r;let a=this.cumulativeWeight;if(0===a){for(let e=0;e!==r;++e)n[i+e]=n[e];a=t}else{const e=t/(a+=t);this._mixBufferRegion(n,i,0,e,r)}this.cumulativeWeight=a}accumulateAdditive(e){var t=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){var n=this.valueSize,r=this.buffer,i=e*n+n,t=this.cumulativeWeight,e=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,t<1){const e=n*this._origIndex;this._mixBufferRegion(r,i,e,1-t,n)}0<e&&this._mixBufferRegionAdditive(r,i,this._addIndex*n,1,n);for(let e=n,t=n+n;e!==t;++e)if(r[e]!==r[e+n]){a.setValue(r,i);break}}saveOriginalState(){var e=this.binding,n=this.buffer,r=this.valueSize,i=r*this._origIndex;e.getValue(n,i);for(let e=r,t=i;e!==t;++e)n[e]=n[i+e%r];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){var t=this._addIndex*this.valueSize,n=t+this.valueSize;for(let e=t;e<n;e++)this.buffer[e]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){var t=this._origIndex*this.valueSize,n=this._addIndex*this.valueSize;for(let e=0;e<this.valueSize;e++)this.buffer[n+e]=this.buffer[t+e]}_select(t,n,r,e,i){if(.5<=e)for(let e=0;e!==i;++e)t[n+e]=t[r+e]}_slerp(e,t,n,r){f.slerpFlat(e,t,e,t,e,n,r)}_slerpAdditive(e,t,n,r,i){i=this._workIndex*i;f.multiplyQuaternionsFlat(e,i,e,t,e,n),f.slerpFlat(e,t,e,t,e,i,r)}_lerp(t,n,r,i,a){var s=1-i;for(let e=0;e!==a;++e){const a=n+e;t[a]=t[a]*s+t[r+e]*i}}_lerpAdditive(t,n,r,i,a){for(let e=0;e!==a;++e){const a=n+e;t[a]=t[a]+t[r+e]*i}}}const dc=new RegExp("[\\[\\]\\.:\\/]","g"),pc="[^\\[\\]\\.:\\/]",fc="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",mc=/((?:WC+[\/:])*)/.source.replace("WC",pc),gc=/(WCOD+)?/.source.replace("WCOD",fc),vc=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",pc),yc=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",pc),xc=new RegExp("^"+mc+gc+vc+yc+"$"),_c=["material","materials","bones"];function bc(e,t,n){n=n||x.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}function x(e,t,n){this.path=t,this.parsedPath=n||x.parseTrackName(t),this.node=x.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}Object.assign(bc.prototype,{getValue:function(e,t){this.bind();var n=this._targetGroup.nCachedObjects_,n=this._bindings[n];void 0!==n&&n.getValue(e,t)},setValue:function(n,r){var i=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=i.length;e!==t;++e)i[e].setValue(n,r)},bind:function(){var n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].bind()},unbind:function(){var n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].unbind()}}),Object.assign(x,{Composite:bc,create:function(e,t,n){return new(e&&e.isAnimationObjectGroup?x.Composite:x)(e,t,n)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(dc,"")},parseTrackName:function(e){var t=xc.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var t={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=t.nodeName&&t.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){const e=t.nodeName.substring(n+1);-1!==_c.indexOf(e)&&(t.nodeName=t.nodeName.substring(0,n),t.objectName=e)}if(null===t.propertyName||0===t.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return t},findNode:function(e,r){if(!r||""===r||"."===r||-1===r||r===e.name||r===e.uuid)return e;if(e.skeleton){var t=e.skeleton.getBoneByName(r);if(void 0!==t)return t}if(e.children){const i=function(t){for(let e=0;e<t.length;e++){var n=t[e];if(n.name===r||n.uuid===r)return n;n=i(n.children);if(n)return n}return null},n=i(e.children);if(n)return n}return null}}),Object.assign(x.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(n,r){var i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)n[r++]=i[e]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(n,r){var i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=n[r++]},function(n,r){var i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=n[r++];this.targetObject.needsUpdate=!0},function(n,r){var i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=n[r++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){let n=this.node;const e=this.parsedPath,r=e.objectName,i=e.propertyName;let a=e.propertyIndex;if(n||(n=x.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=n),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,n){if(r){let t=e.objectIndex;switch(r){case"materials":if(!n.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!n.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);n=n.material.materials;break;case"bones":if(!n.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);n=n.skeleton.bones;for(let e=0;e<n.length;e++)if(n[e].name===t){t=e;break}break;default:if(void 0===n[r])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);n=n[r]}if(void 0!==t){if(void 0===n[t])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,n);n=n[t]}}var s=n[i];if(void 0===s){const r=e.nodeName;void console.error("THREE.PropertyBinding: Trying to update property for track: "+r+"."+i+" but it wasn't found.",n)}else{let e=this.Versioning.None,t=(void 0!==(this.targetObject=n).needsUpdate?e=this.Versioning.NeedsUpdate:void 0!==n.matrixWorldNeedsUpdate&&(e=this.Versioning.MatrixWorldNeedsUpdate),this.BindingType.Direct);if(void 0!==a){if("morphTargetInfluences"===i){if(!n.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!n.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!n.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==n.morphTargetDictionary[a]&&(a=n.morphTargetDictionary[a])}t=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=a}else void 0!==s.fromArray&&void 0!==s.toArray?(t=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(t=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[t],this.setValue=this.SetterByBindingTypeAndVersioning[t][e]}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(x.prototype,{_getValue_unbound:x.prototype.getValue,_setValue_unbound:x.prototype.setValue});class wc{constructor(){this.uuid=Ee.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var n={};this._indicesByUUID=n;for(let e=0,t=arguments.length;e!==t;++e)n[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const r=this._objects,i=this._indicesByUUID,a=this._paths,s=this._parsedPaths,o=this._bindings,l=o.length;let c,h=r.length,u=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var d=arguments[e],p=d.uuid;let n=i[p];if(void 0===n){n=h++,i[p]=n,r.push(d);for(let e=0,t=l;e!==t;++e)o[e].push(new x(d,a[e],s[e]))}else if(n<u){c=r[n];const h=--u,f=r[h];i[f.uuid]=n,r[n]=f,i[p]=h,r[h]=d;for(let t=0,e=l;t!==e;++t){const i=o[t],l=i[h];let e=i[n];i[n]=l,void 0===e&&(e=new x(d,a[t],s[t])),i[h]=e}}else r[n]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=u}remove(){const n=this._objects,r=this._indicesByUUID,i=this._bindings,a=i.length;let s=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var o=arguments[e],l=o.uuid,c=r[l];if(void 0!==c&&c>=s){var h=s++,u=n[h];r[u.uuid]=c,n[c]=u,r[l]=h,n[h]=o;for(let e=0,t=a;e!==t;++e){const r=i[e],a=r[h],s=r[c];r[c]=a,r[h]=s}}}this.nCachedObjects_=s}uncache(){const n=this._objects,r=this._indicesByUUID,i=this._bindings,a=i.length;let s=this.nCachedObjects_,o=n.length;for(let e=0,t=arguments.length;e!==t;++e){var l=arguments[e].uuid,c=r[l];if(void 0!==c)if(delete r[l],c<s){var h=--s,l=n[h],u=--o,d=n[u];r[l.uuid]=c,n[c]=l,r[d.uuid]=h,n[h]=d,n.pop();for(let e=0,t=a;e!==t;++e){const r=i[e],a=r[h],s=r[u];r[c]=a,r[h]=s,r.pop()}}else{const s=--o,p=n[s];0<s&&(r[p.uuid]=c),n[c]=p,n.pop();for(let e=0,t=a;e!==t;++e){const r=i[e];r[c]=r[s],r.pop()}}}this.nCachedObjects_=s}subscribe_(n,r){var e=this._bindingsIndicesByPath;let i=e[n];var t=this._bindings;if(void 0!==i)return t[i];var a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,h=new Array(l);i=t.length,e[n]=i,a.push(n),s.push(r),t.push(h);for(let e=c,t=o.length;e!==t;++e){const i=o[e];h[e]=new x(i,n,r)}return h}unsubscribe_(e){var t,n,r,i,a,s=this._bindingsIndicesByPath,o=s[e];void 0!==o&&(t=this._paths,n=this._parsedPaths,a=(r=this._bindings)[i=r.length-1],r[s[e[i]]=o]=a,r.pop(),n[o]=n[i],n.pop(),t[o]=t[i],t.pop())}}wc.prototype.isAnimationObjectGroup=!0;class Mc{constructor(e,t,n=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=r;var i=t.tracks,a=i.length,s=new Array(a),o={endingStart:ue,endingEnd:ue};for(let e=0;e!==a;++e){const t=i[e].createInterpolant(null);(s[e]=t).settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const n=this._clip.duration,r=e._clip.duration,i=r/n,a=n/r;e.warp(1,i,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){var r=this._mixer,i=r.time,a=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=r._lendControlInterpolant(),this._timeScaleInterpolant=s);var r=s.parameterPositions,o=s.sampleValues;return r[0]=i,r[1]=i+n,o[0]=e/a,o[1]=t/a,this}stopWarping(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(n,r,e,i){if(this.enabled){var t=this._startTime;if(null!==t){const i=(n-t)*e;if(i<0||0===e)return;this._startTime=null,r=e*i}r*=this._updateTimeScale(n);var a=this._updateTime(r),s=this._updateWeight(n);if(0<s){const n=this._interpolants,r=this._propertyBindings;if(this.blendMode===me)for(let e=0,t=n.length;e!==t;++e)n[e].evaluate(a),r[e].accumulateAdditive(s);else{fe;for(let e=0,t=n.length;e!==t;++e)n[e].evaluate(a),r[e].accumulate(i,s)}}}else this._updateWeight(n)}_updateWeight(e){let t=0;var n,r;return this.enabled&&(t=this.weight,null!==(n=this._weightInterpolant))&&(r=n.evaluate(e)[0],t*=r,e>n.parameterPositions[1])&&(this.stopFading(),0===r)&&(this.enabled=!1),this._effectiveWeight=t}_updateTimeScale(e){let t=0;var n;return this.paused||(t=this.timeScale,null!==(n=this._timeScaleInterpolant)&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1])&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)),this._effectiveTimeScale=t}_updateTime(e){const t=this._clip.duration,n=this.loop;let r=this.time+e,i=this._loopCount;var a=2202===n;if(0===e)return-1!==i&&a&&1==(1&i)?t-r:r;if(2200===n){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else{if(!(r<0)){this.time=r;break e}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===i&&(0<=e?(i=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),r>=t||r<0){const n=Math.floor(r/t);r-=t*n,i+=Math.abs(n);var s=this.repetitions-i;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=0<e?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<e?1:-1});else{if(1==s){const t=e<0;this._setEndings(t,!t,a)}else this._setEndings(!1,!1,a);this._loopCount=i,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=r;if(a&&1==(1&i))return t-r}return r}_setEndings(e,t,n){var r=this._interpolantSettings;n?(r.endingStart=de,r.endingEnd=de):(r.endingStart=e?this.zeroSlopeAtStart?de:ue:pe,r.endingEnd=t?this.zeroSlopeAtEnd?de:ue:pe)}_scheduleFading(e,t,n){var r=this._mixer,i=r.time;let a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);var r=a.parameterPositions,s=a.sampleValues;return r[0]=i,s[0]=t,r[1]=i+e,s[1]=n,this}}class Tc extends Me{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,n){const r=e._localRoot||this._root,i=e._clip.tracks,a=i.length,s=e._propertyBindings,o=e._interpolants,l=r.uuid,c=this._bindingsByRootAndName;let h=c[l];void 0===h&&(h={},c[l]=h);for(let t=0;t!==a;++t){const a=i[t],c=a.name;let e=h[c];if(void 0===e){if(void 0!==(e=s[t])){null===e._cacheIndex&&(++e.referenceCount,this._addInactiveBinding(e,l,c));continue}const i=n&&n._propertyBindings[t].binding.parsedPath;++(e=new uc(x.create(r,c,i),a.ValueTypeName,a.getValueSize())).referenceCount,this._addInactiveBinding(e,l,c)}s[t]=e,o[t].resultBuffer=e.buffer}}_activateAction(e){if(!this._isActiveAction(e)){null===e._cacheIndex&&(t=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n],this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,t));var t,n,r,i=e._propertyBindings;for(let e=0,t=i.length;e!==t;++e){var a=i[e];0==a.useCount++&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){var n=e._propertyBindings;for(let e=0,t=n.length;e!==t;++e){var r=n[e];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){e=e._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(e,t,n){var r=this._actions,i=this._actionsByClip;let a=i[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=a;else{const t=a.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){var t=this._actions,n=t[t.length-1],r=e._cacheIndex,r=(t[n._cacheIndex=r]=n,t.pop(),e._cacheIndex=null,e._clip.uuid),n=this._actionsByClip,t=n[r],i=t.knownActions,a=i[i.length-1],s=e._byClipCacheIndex;i[a._byClipCacheIndex=s]=a,i.pop(),e._byClipCacheIndex=null,delete t.actionByRoot[(e._localRoot||this._root).uuid],0===i.length&&delete n[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){var n=e._propertyBindings;for(let e=0,t=n.length;e!==t;++e){var r=n[e];0==--r.referenceCount&&this._removeInactiveBinding(r)}}_lendAction(e){var t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,i=t[r];t[e._cacheIndex=r]=e,t[i._cacheIndex=n]=i}_takeBackAction(e){var t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,i=t[r];t[e._cacheIndex=r]=e,t[i._cacheIndex=n]=i}_addInactiveBinding(e,t,n){var r=this._bindingsByRootAndName,i=this._bindings;let a=r[t];void 0===a&&(a={},r[t]=a),(a[n]=e)._cacheIndex=i.length,i.push(e)}_removeInactiveBinding(e){var t=this._bindings,n=e.binding,r=n.rootNode.uuid,n=n.path,i=this._bindingsByRootAndName,a=i[r],s=t[t.length-1],e=e._cacheIndex;t[s._cacheIndex=e]=s,t.pop(),delete a[n],0===Object.keys(a).length&&delete i[r]}_lendBinding(e){var t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,i=t[r];t[e._cacheIndex=r]=e,t[i._cacheIndex=n]=i}_takeBackBinding(e){var t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,i=t[r];t[e._cacheIndex=r]=e,t[i._cacheIndex=n]=i}_lendControlInterpolant(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return void 0===n&&(e[(n=new Eo(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t]=n),n}_takeBackControlInterpolant(e){var t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,i=t[r];t[e.__cacheIndex=r]=e,t[i.__cacheIndex=n]=i}clipAction(e,t,n){var r=t||this._root,i=r.uuid;let a="string"==typeof e?Bo.findByName(r,e):e;var r=null!==a?a.uuid:e,s=this._actionsByClip[r];let o=null;if(void 0===n&&(n=null!==a?a.blendMode:fe),void 0!==s){const e=s.actionByRoot[i];if(void 0!==e&&e.blendMode===n)return e;o=s.knownActions[0],null===a&&(a=o._clip)}return null===a?null:(e=new Mc(this,a,t,n),this._bindAction(e,o),this._addInactiveAction(e,r,i),e)}existingAction(e,t){var t=t||this._root,n=t.uuid,t="string"==typeof e?Bo.findByName(t,e):e,t=t?t.uuid:e,e=this._actionsByClip[t];return void 0!==e&&e.actionByRoot[n]||null}stopAllAction(){var t=this._actions;for(let e=this._nActiveActions-1;0<=e;--e)t[e].stop();return this}update(t){t*=this.timeScale;var n=this._actions,r=this._nActiveActions,i=this.time+=t,a=Math.sign(t),s=this._accuIndex^=1;for(let e=0;e!==r;++e)n[e]._update(i,t,a,s);var o=this._bindings,l=this._nActiveBindings;for(let e=0;e!==l;++e)o[e].apply(s);return this}setTime(e){for(let e=this.time=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(n){const r=this._actions,e=n.uuid,i=this._actionsByClip,a=i[e];if(void 0!==a){const n=a.knownActions;for(let e=0,t=n.length;e!==t;++e){const i=n[e],a=(this._deactivateAction(i),i._cacheIndex),s=r[r.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,s._cacheIndex=a,r[a]=s,r.pop(),this._removeInactiveBindingsForAction(i)}delete i[e]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const e in n){const r=n[e].actionByRoot[t];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}const r=this._bindingsByRootAndName[t];if(void 0!==r)for(const e in r){const t=r[e];t.restoreOriginalState(),this._removeInactiveBinding(t)}}uncacheAction(e,t){e=this.existingAction(e,t);null!==e&&(this._deactivateAction(e),this._removeInactiveAction(e))}}Tc.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Ec{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Ec(void 0===this.value.clone?this.value:this.value.clone())}}function Sc(e,t,n){va.call(this,e,t),this.meshPerAttribute=n||1}function Ac(e,t,n,r,i){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=r,this.count=i,this.version=0}function Rc(e,t,n=0,r=1/0){this.ray=new vt(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new Rt,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Lc(e,t){return e.distance-t.distance}function Cc(e,n,r,i){if(e.layers.test(n.layers)&&e.raycast(n,r),!0===i){const i=e.children;for(let e=0,t=i.length;e<t;e++)Cc(i[e],n,r,!0)}}Sc.prototype=Object.assign(Object.create(va.prototype),{constructor:Sc,isInstancedInterleavedBuffer:!0,copy:function(e){return va.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},clone:function(e){e=va.prototype.clone.call(this,e);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(e){e=va.prototype.toJSON.call(this,e);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}),Object.defineProperty(Ac.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(Ac.prototype,{isGLBufferAttribute:!0,setBuffer:function(e){return this.buffer=e,this},setType:function(e,t){return this.type=e,this.elementSize=t,this},setItemSize:function(e){return this.itemSize=e,this},setCount:function(e){return this.count=e,this}}),Object.assign(Rc.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)},intersectObject:function(e,t=!1,n=[]){return Cc(e,this,n,t),n.sort(Lc),n},intersectObjects:function(n,r=!1,i=[]){for(let e=0,t=n.length;e<t;e++)Cc(n[e],this,i,r);return i.sort(Lc),i}});const Pc=new Se;class Dc{constructor(e=new Se(1/0,1/0),t=new Se(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(n){this.makeEmpty();for(let e=0,t=n.length;e<t;e++)this.expandByPoint(n[e]);return this}setFromCenterAndSize(e,t){t=Pc.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new Se),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new Se),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new Se),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new Se),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Pc.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Dc.prototype.isBox2=!0;const Ic=new Re,Nc=new Re;class Bc{constructor(e=new Re,t=new Re){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return void 0===e&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new Re),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return void 0===e&&(console.warn("THREE.Line3: .delta() target is now required"),e=new Re),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return void 0===t&&(console.warn("THREE.Line3: .at() target is now required"),t=new Re),this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Ic.subVectors(e,this.start),Nc.subVectors(this.end,this.start);e=Nc.dot(Nc);let n=Nc.dot(Ic)/e;return n=t?Ee.clamp(n,0,1):n}closestPointToPoint(e,t,n){e=this.closestPointToPointParameter(e,t);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new Re),this.delta(n).multiplyScalar(e).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}function Hc(e){c.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}((Hc.prototype=Object.create(c.prototype)).constructor=Hc).prototype.isImmediateRenderObject=!0;const Uc=new Re,Oc=new Re,zc=new Le,Fc=new Le;class Gc extends os{constructor(e){const t=function t(n){const r=[];n&&n.isBone&&r.push(n);for(let e=0;e<n.children.length;e++)r.push.apply(r,t(n.children[e]));return r}(e),n=new S,r=[],i=[],a=new Ce(0,0,1),s=new Ce(0,1,0);for(let e=0;e<t.length;e++){const n=t[e];n.parent&&n.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(a.r,a.g,a.b),i.push(s.r,s.g,s.b))}n.setAttribute("position",new k(r,3)),n.setAttribute("color",new k(i,3)),super(n,new g({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){var n=this.bones,t=this.geometry,r=t.getAttribute("position");Fc.copy(this.root.matrixWorld).invert();for(let e=0,t=0;e<n.length;e++){var i=n[e];i.parent&&i.parent.isBone&&(zc.multiplyMatrices(Fc,i.matrixWorld),Oc.setFromMatrixPosition(zc),r.setXYZ(t,Oc.x,Oc.y,Oc.z),zc.multiplyMatrices(Fc,i.parent.matrixWorld),Oc.setFromMatrixPosition(zc),r.setXYZ(t+1,Oc.x,Oc.y,Oc.z),t+=2)}t.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}const kc=new Re,Vc=new Ce,Wc=new Ce;class jc extends os{constructor(e=10,r=10,i=4473924,a=8947848){i=new Ce(i),a=new Ce(a);var s=r/2,o=e/r,l=e/2,c=[],h=[];for(let e=0,t=0,n=-l;e<=r;e++,n+=o){c.push(-l,0,n,l,0,n),c.push(n,0,-l,n,0,l);const r=e===s?i:a;r.toArray(h,t),t+=3,r.toArray(h,t),t+=3,r.toArray(h,t),t+=3,r.toArray(h,t),t+=3}e=new S;e.setAttribute("position",new k(c,3)),e.setAttribute("color",new k(h,3)),super(e,new g({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}const qc=new Re,Xc=new Re,Yc=new Re,Zc=new Re,d=new Kn;function _(n,e,t,r,i,a,s){Zc.set(i,a,s).unproject(r);var o=e[n];if(void 0!==o){const n=t.getAttribute("position");for(let e=0,t=o.length;e<t;e++)n.setXYZ(o[e],Zc.x,Zc.y,Zc.z)}}const Jc=new We;class Qc extends os{constructor(e,t=16776960){var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new S;i.setIndex(new E(n,1)),i.setAttribute("position",new E(r,3)),super(i,new g({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){var t,n,r;void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Jc.setFromObject(this.object),Jc.isEmpty()||(e=Jc.min,t=Jc.max,(r=(n=this.geometry.attributes.position).array)[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=e.x,r[4]=t.y,r[5]=t.z,r[6]=e.x,r[7]=e.y,r[8]=t.z,r[9]=t.x,r[10]=e.y,r[11]=t.z,r[12]=t.x,r[13]=t.y,r[14]=e.z,r[15]=e.x,r[16]=t.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=t.x,r[22]=e.y,r[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere())}setFromObject(e){return this.object=e,this.update(),this}copy(e){return os.prototype.copy.call(this,e),this.object=e.object,this}}const Kc=new Re;let $c,eh;class th extends os{constructor(e=1){var e=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],t=new S;t.setAttribute("position",new k(e,3)),t.setAttribute("color",new k([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(t,new g({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}}const nh=new Float32Array(1),rh=new Int32Array(nh.buffer),ih={toHalfFloat:function(e){nh[0]=e;e=rh[0];let t=e>>16&32768,n=e>>12&2047;var r=e>>23&255;return r<103||(142<r?t=t|31744|((255==r?0:1)&&8388607&e):r<113?(n|=2048,t|=(n>>114-r)+(n>>113-r&1)):t=(t|=r-112<<10|n>>1)+(1&n)),t}},ah=Math.pow(2,8),sh=[.125,.215,.35,.446,.526,.582],oh=5+sh.length,lh={[Be]:0,3001:1,3002:2,3004:3,3005:4,3006:5,3007:6},ch=new hn({side:1,depthWrite:!1,depthTest:!1}),hh=new A(new Yn,ch),uh=new Rl,{_lodPlanes:dh,_sizeLods:ph,_sigmas:fh}=function(){const n=[],r=[],i=[];let a=8;for(let t=0;t<oh;t++){var s=Math.pow(2,a);r.push(s);let e=1/s;4<t?e=sh[t-8+4-1]:0==t&&(e=0),i.push(e);var s=1/(s-1),o=-s/2,s=1+s/2,l=[o,o,s,o,s,s,o,o,s,s,o,s],c=new Float32Array(108),h=new Float32Array(72),u=new Float32Array(36);for(let e=0;e<6;e++){const r=e%3*2/3-1,i=2<e?0:-1,a=[r,i,0,r+2/3,i,0,r+2/3,1+i,0,r,i,0,r+2/3,1+i,0,r,1+i,0];c.set(a,18*e),h.set(l,12*e);var d=[e,e,e,e,e,e];u.set(d,6*e)}o=new S;o.setAttribute("position",new E(c,3)),o.setAttribute("uv",new E(h,2)),o.setAttribute("faceIndex",new E(u,1)),n.push(o),4<a&&a--}return{_lodPlanes:n,_sizeLods:r,_sigmas:i}}(),mh=new Ce;let gh=null;const vh=(1+Math.sqrt(5))/2,yh=1/vh,xh=[new Re(1,1,1),new Re(-1,1,1),new Re(1,1,-1),new Re(-1,1,-1),new Re(0,vh,yh),new Re(0,vh,-yh),new Re(yh,0,vh),new Re(-yh,0,vh),new Re(vh,yh,0),new Re(-vh,yh,0)];function _h(e){var t=Math.max(e.r,e.g,e.b),t=Math.min(Math.max(Math.ceil(Math.log2(t)),-128),127);return e.multiplyScalar(Math.pow(2,-t)),(t+128)/255}function bh(e){e=new Fe(3*ah,3*ah,e);return e.texture.mapping=I,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function wh(e,t,n,r,i){e.viewport.set(t,n,r,i),e.scissor.set(t,n,r,i)}function Mh(){var e=new Se(1,1);return new po({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:lh[3e3]},outputEncoding:{value:lh[3e3]}},vertexShader:Eh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${Sh()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function Th(){return new po({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:lh[3e3]},outputEncoding:{value:lh[3e3]}},vertexShader:Eh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${Sh()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function Eh(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function Sh(){return"\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t"}qo.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(qo.prototype),(e.prototype.constructor=e).prototype.getPoint=t,e},pl.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},jc.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Gc.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},l.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Hl.extractUrlBase(e)},l.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Dc.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},Dc.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Dc.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Dc.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},We.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},We.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},We.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},We.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},We.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},ct.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},ar.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Bc.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Ee.random16=function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},Ee.nearestPowerOfTwo=function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Ee.floorPowerOfTwo(e)},Ee.nextPowerOfTwo=function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Ee.ceilPowerOfTwo(e)},v.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},v.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},v.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},v.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},v.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},v.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Le.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},Le.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Le.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Re).setFromMatrixColumn(this,3)},Le.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},Le.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Le.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Le.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Le.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Le.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},Le.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Le.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Le.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Le.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Le.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Le.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Le.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Le.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Le.prototype.makeFrustum=function(e,t,n,r,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,n,i,a)},Le.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},jt.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},f.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},f.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},vt.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},vt.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},vt.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},p.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},p.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},p.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},p.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},p.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},p.barycoordFromPoint=function(e,t,n,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),p.getBarycoord(e,t,n,r,i)},p.normal=function(e,t,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),p.getNormal(e,t,n,r)},fl.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},fl.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Zs(this,e)},fl.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new no(this,e)},Se.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Se.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Se.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Re.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},Re.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},Re.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},Re.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},Re.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},Re.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},Re.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Re.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Re.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ae.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Ae.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},c.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},c.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},c.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},c.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},c.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(c.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),A.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(A.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Va.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(qo.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),R.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(ml.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(E.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===be},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(be)}}}),E.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?be:_e),this},E.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},E.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},S.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},S.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new E(t,arguments[2])))},S.prototype.addDrawCall=function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},S.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},S.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},S.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},S.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(S.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Ul.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=e}}}),Object.defineProperties(Rc.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}}),Object.defineProperties(va.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===be},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}}),va.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?be:_e),this},va.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Zs.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},Zs.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},Zs.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},ga.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Ec.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(a.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Ce}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(mo.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(e){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=e}}}),Object.defineProperties(Qn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),n.prototype.clearTarget=function(e,t,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,r)},n.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},n.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},n.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},n.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},n.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},n.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},n.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},n.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},n.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},n.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},n.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},n.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},n.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},n.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},n.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},n.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},n.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},n.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},n.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},n.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},n.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},n.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},n.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},n.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(n.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?ge:Be}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(ia.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(Fe.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),ac.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return(new Yl).load(e,function(e){t.setBuffer(e)}),this},hc.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},$n.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},$n.prototype.clear=function(e,t,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,r)},Ue.crossOrigin=void 0,Ue.loadTexture=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var i=new jo,i=(i.setCrossOrigin(this.crossOrigin),i.load(e,n,void 0,r));return t&&(i.mapping=t),i},Ue.loadTextureCube=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var i=new Vo,i=(i.setCrossOrigin(this.crossOrigin),i.load(e,n,void 0,r));return t&&(i.mapping=t),i},Ue.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Ue.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};var Ah={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:b}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=b),e.ACESFilmicToneMapping=4,e.AddEquation=V,e.AddOperation=2,e.AdditiveAnimationBlendMode=me,e.AdditiveBlending=2,e.AlphaFormat=1021,e.AlwaysDepth=1,e.AlwaysStencilFunc=519,e.AmbientLight=Pl,e.AmbientLightProbe=Jl,e.AnimationClip=Bo,e.AnimationLoader=class extends l{constructor(e){super(e)}load(t,n,e,r){const i=this,a=new Fo(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(e){try{n(i.parse(JSON.parse(e)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}},e,r)}parse(t){var n=[];for(let e=0;e<t.length;e++){var r=Bo.parse(t[e]);n.push(r)}return n}},e.AnimationMixer=Tc,e.AnimationObjectGroup=wc,e.AnimationUtils=y,e.ArcCurve=Yo,e.ArrayCamera=la,e.ArrowHelper=class extends c{constructor(e=new Re(0,0,1),t=new Re(0,0,0),n=1,r=16776960,i=.2*n,a=.2*i){super(),this.type="ArrowHelper",void 0===$c&&(($c=new S).setAttribute("position",new k([0,0,0,0,1,0],3)),(eh=new bs(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new is($c,new g({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new A(eh,new hn({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,i,a)}setDirection(e){.99999<e.y?this.quaternion.set(0,0,0,1):e.y<-.99999?this.quaternion.set(1,0,0,0):(Kc.set(e.z,0,-e.x).normalize(),e=Math.acos(e.y),this.quaternion.setFromAxisAngle(Kc,e))}setLength(e,t=.2*e,n=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}},e.Audio=ac,e.AudioAnalyser=hc,e.AudioContext=Xl,e.AudioListener=class extends c{constructor(){super(),this.type="AudioListener",this.context=Xl.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new $l}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return(null!==this.filter?(this.gain.disconnect(this.filter),this.filter):this.gain).disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);var t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(tc,nc,rc),ic.set(0,0,-1).applyQuaternion(nc),t.positionX){const e=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(tc.x,e),t.positionY.linearRampToValueAtTime(tc.y,e),t.positionZ.linearRampToValueAtTime(tc.z,e),t.forwardX.linearRampToValueAtTime(ic.x,e),t.forwardY.linearRampToValueAtTime(ic.y,e),t.forwardZ.linearRampToValueAtTime(ic.z,e),t.upX.linearRampToValueAtTime(n.x,e),t.upY.linearRampToValueAtTime(n.y,e),t.upZ.linearRampToValueAtTime(n.z,e)}else t.setPosition(tc.x,tc.y,tc.z),t.setOrientation(ic.x,ic.y,ic.z,n.x,n.y,n.z)}},e.AudioLoader=Yl,e.AxesHelper=th,e.AxisHelper=function(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new th(e)},e.BackSide=1,e.BasicDepthPacking=3200,e.BasicShadowMap=0,e.BinaryTextureLoader=function(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new Wo(e)},e.Bone=Wa,e.BooleanKeyframeTrack=Ro,e.BoundingBoxHelper=function(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new Qc(e,t)},e.Box2=Dc,e.Box3=We,e.Box3Helper=class extends os{constructor(e,t=16776960){var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new S;r.setIndex(new E(n,1)),r.setAttribute("position",new k([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(r,new g({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){var t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}},e.BoxBufferGeometry=Yn,e.BoxGeometry=Yn,e.BoxHelper=Qc,e.BufferAttribute=E,e.BufferGeometry=S,e.BufferGeometryLoader=zl,e.ByteType=1010,e.Cache=Ho,e.Camera=Kn,e.CameraHelper=class extends os{constructor(e){const t=new S,n=new g({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],i=[],a={},s=new Ce(16755200),o=new Ce(16711680),l=new Ce(43775),c=new Ce(16777215),h=new Ce(3355443);function u(e,t,n){d(e,n),d(t,n)}function d(e,t){r.push(0,0,0),i.push(t.r,t.g,t.b),void 0===a[e]&&(a[e]=[]),a[e].push(r.length/3-1)}u("n1","n2",s),u("n2","n4",s),u("n4","n3",s),u("n3","n1",s),u("f1","f2",s),u("f2","f4",s),u("f4","f3",s),u("f3","f1",s),u("n1","f1",s),u("n2","f2",s),u("n3","f3",s),u("n4","f4",s),u("p","n1",o),u("p","n2",o),u("p","n3",o),u("p","n4",o),u("u1","u2",l),u("u2","u3",l),u("u3","u1",l),u("c","t",c),u("p","c",h),u("cn1","cn2",h),u("cn3","cn4",h),u("cf1","cf2",h),u("cf3","cf4",h),t.setAttribute("position",new k(r,3)),t.setAttribute("color",new k(i,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){var e=this.geometry,t=this.pointMap;d.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),_("c",t,e,d,0,0,-1),_("t",t,e,d,0,0,1),_("n1",t,e,d,-1,-1,-1),_("n2",t,e,d,1,-1,-1),_("n3",t,e,d,-1,1,-1),_("n4",t,e,d,1,1,-1),_("f1",t,e,d,-1,-1,1),_("f2",t,e,d,1,-1,1),_("f3",t,e,d,-1,1,1),_("f4",t,e,d,1,1,1),_("u1",t,e,d,.7,1.1,-1),_("u2",t,e,d,-.7,1.1,-1),_("u3",t,e,d,0,2,-1),_("cf1",t,e,d,-1,0,1),_("cf2",t,e,d,1,0,1),_("cf3",t,e,d,0,-1,1),_("cf4",t,e,d,0,1,1),_("cn1",t,e,d,-1,0,-1),_("cn2",t,e,d,1,0,-1),_("cn3",t,e,d,0,-1,-1),_("cn4",t,e,d,0,1,-1),e.getAttribute("position").needsUpdate=!0}},e.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been removed")},e.CanvasTexture=ys,e.CatmullRomCurve3=el,e.CineonToneMapping=3,e.CircleBufferGeometry=_s,e.CircleGeometry=_s,e.ClampToEdgeWrapping=G,e.Clock=$l,e.Color=Ce,e.ColorKeyframeTrack=Lo,e.CompressedTexture=vs,e.CompressedTextureLoader=Go,e.ConeBufferGeometry=ws,e.ConeGeometry=ws,e.CubeCamera=$n,e.CubeReflectionMapping=L,e.CubeRefractionMapping=C,e.CubeTexture=er,e.CubeTextureLoader=Vo,e.CubeUVReflectionMapping=I,e.CubeUVRefractionMapping=N,e.CubicBezierCurve=il,e.CubicBezierCurve3=al,e.CubicInterpolant=To,e.CullFaceBack=1,e.CullFaceFront=2,e.CullFaceFrontBack=3,e.CullFaceNone=0,e.Curve=qo,e.CurvePath=dl,e.CustomBlending=5,e.CustomToneMapping=5,e.CylinderBufferGeometry=bs,e.CylinderGeometry=bs,e.Cylindrical=class{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return(new this.constructor).copy(this)}},e.DataTexture=nr,e.DataTexture2DArray=Tr,e.DataTexture3D=Er,e.DataTextureLoader=Wo,e.DataUtils=ih,e.DecrementStencilOp=7683,e.DecrementWrapStencilOp=34056,e.DefaultLoadingManager=Oo,e.DepthFormat=$,e.DepthStencilFormat=ee,e.DepthTexture=xs,e.DirectionalLight=Cl,e.DirectionalLightHelper=class extends c{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===t&&(t=1);let r=new S;r.setAttribute("position",new k([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));e=new g({fog:!1,toneMapped:!1});this.lightPlane=new is(r,e),this.add(this.lightPlane),(r=new S).setAttribute("position",new k([0,0,0,0,0,1],3)),this.targetLine=new is(r,e),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){qc.setFromMatrixPosition(this.light.matrixWorld),Xc.setFromMatrixPosition(this.light.target.matrixWorld),Yc.subVectors(Xc,qc),this.lightPlane.lookAt(Xc),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Xc),this.targetLine.scale.z=Yc.length()}},e.DiscreteInterpolant=So,e.DodecahedronBufferGeometry=Ts,e.DodecahedronGeometry=Ts,e.DoubleSide=2,e.DstAlphaFactor=206,e.DstColorFactor=208,e.DynamicBufferAttribute=function(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new E(e,t).setUsage(be)},e.DynamicCopyUsage=35050,e.DynamicDrawUsage=be,e.DynamicReadUsage=35049,e.EdgesGeometry=Ls,e.EdgesHelper=function(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new os(new Ls(e.geometry),new g({color:void 0!==t?t:16777215}))},e.EllipseCurve=Xo,e.EqualDepth=4,e.EqualStencilFunc=514,e.EquirectangularReflectionMapping=P,e.EquirectangularRefractionMapping=D,e.Euler=At,e.EventDispatcher=Me,e.ExtrudeBufferGeometry=Zs,e.ExtrudeGeometry=Zs,e.FaceColors=1,e.FileLoader=Fo,e.FlatShading=1,e.Float16BufferAttribute=xn,e.Float32Attribute=function(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new k(e,t)},e.Float32BufferAttribute=k,e.Float64Attribute=function(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new _n(e,t)},e.Float64BufferAttribute=_n,e.FloatType=De,e.Fog=ma,e.FogExp2=fa,e.Font=jl,e.FontLoader=class extends l{constructor(e){super(e)}load(e,r,t,n){const i=this,a=new Fo(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(i.withCredentials),a.load(e,function(t){let n;try{n=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(t.substring(65,t.length-2))}t=i.parse(n);r&&r(t)},t,n)}parse(e){return new jl(e)}},e.FrontSide=0,e.Frustum=ar,e.GLBufferAttribute=Ac,e.GLSL1="100",e.GLSL3=we,e.GammaEncoding=ve,e.GreaterDepth=6,e.GreaterEqualDepth=5,e.GreaterEqualStencilFunc=518,e.GreaterStencilFunc=516,e.GridHelper=jc,e.Group=ca,e.HalfFloatType=Ie,e.HemisphereLight=gl,e.HemisphereLightHelper=class extends c{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;e=new $s(t),e.rotateY(.5*Math.PI),this.material=new hn({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0),n=e.getAttribute("position"),t=new Float32Array(3*n.count);e.setAttribute("color",new E(t,3)),this.add(new A(e,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){var e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var n=e.geometry.getAttribute("color");Vc.copy(this.light.color),Wc.copy(this.light.groundColor);for(let e=0,t=n.count;e<t;e++){var r=e<t/2?Vc:Wc;n.setXYZ(e,r.r,r.g,r.b)}n.needsUpdate=!0}e.lookAt(kc.setFromMatrixPosition(this.light.matrixWorld).negate())}},e.HemisphereLightProbe=Zl,e.IcosahedronBufferGeometry=Qs,e.IcosahedronGeometry=Qs,e.ImageBitmapLoader=Vl,e.ImageLoader=ko,e.ImageUtils=Ue,e.ImmediateRenderObject=Hc,e.IncrementStencilOp=7682,e.IncrementWrapStencilOp=34055,e.InstancedBufferAttribute=Ol,e.InstancedBufferGeometry=Ul,e.InstancedInterleavedBuffer=Sc,e.InstancedMesh=Ka,e.Int16Attribute=function(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new mn(e,t)},e.Int16BufferAttribute=mn,e.Int32Attribute=function(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new vn(e,t)},e.Int32BufferAttribute=vn,e.Int8Attribute=function(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new dn(e,t)},e.Int8BufferAttribute=dn,e.IntType=1013,e.InterleavedBuffer=va,e.InterleavedBufferAttribute=ya,e.Interpolant=Mo,e.InterpolateDiscrete=le,e.InterpolateLinear=ce,e.InterpolateSmooth=he,e.InvertStencilOp=5386,e.JSONLoader=function(){console.error("THREE.JSONLoader has been removed.")},e.KeepStencilOp=7680,e.KeyframeTrack=Ao,e.LOD=Ua,e.LatheBufferGeometry=Ks,e.LatheGeometry=Ks,e.Layers=Rt,e.LensFlare=function(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")},e.LessDepth=2,e.LessEqualDepth=3,e.LessEqualStencilFunc=515,e.LessStencilFunc=513,e.Light=ml,e.LightProbe=Nl,e.Line=is,e.Line3=Bc,e.LineBasicMaterial=g,e.LineCurve=sl,e.LineCurve3=ol,e.LineDashedMaterial=bo,e.LineLoop=ls,e.LinePieces=1,e.LineSegments=os,e.LineStrip=0,e.LinearEncoding=Be,e.LinearFilter=z,e.LinearInterpolant=Eo,e.LinearMipMapLinearFilter=1008,e.LinearMipMapNearestFilter=1007,e.LinearMipmapLinearFilter=Y,e.LinearMipmapNearestFilter=X,e.LinearToneMapping=1,e.Loader=l,e.LoaderUtils=Hl,e.LoadingManager=Uo,e.LogLuvEncoding=3003,e.LoopOnce=2200,e.LoopPingPong=2202,e.LoopRepeat=2201,e.LuminanceAlphaFormat=1025,e.LuminanceFormat=1024,e.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},e.Material=a,e.MaterialLoader=Bl,e.Math=Ee,e.MathUtils=Ee,e.Matrix3=v,e.Matrix4=Le,e.MaxEquation=104,e.Mesh=A,e.MeshBasicMaterial=hn,e.MeshDepthMaterial=na,e.MeshDistanceMaterial=ra,e.MeshFaceMaterial=function(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e},e.MeshLambertMaterial=xo,e.MeshMatcapMaterial=_o,e.MeshNormalMaterial=yo,e.MeshPhongMaterial=go,e.MeshPhysicalMaterial=mo,e.MeshStandardMaterial=fo,e.MeshToonMaterial=vo,e.MinEquation=103,e.MirroredRepeatWrapping=W,e.MixOperation=1,e.MultiMaterial=function(e=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,(e.materials=e).clone=function(){return e.slice()},e},e.MultiplyBlending=4,e.MultiplyOperation=0,e.NearestFilter=O,e.NearestMipMapLinearFilter=1005,e.NearestMipMapNearestFilter=1004,e.NearestMipmapLinearFilter=q,e.NearestMipmapNearestFilter=j,e.NeverDepth=0,e.NeverStencilFunc=512,e.NoBlending=0,e.NoColors=0,e.NoToneMapping=0,e.NormalAnimationBlendMode=fe,e.NormalBlending=1,e.NotEqualDepth=7,e.NotEqualStencilFunc=517,e.NumberKeyframeTrack=Co,e.Object3D=c,e.ObjectLoader=class extends l{constructor(e){super(e)}load(n,r,e,i){const a=this,t=""===this.path?Hl.extractUrlBase(n):this.path;this.resourcePath=this.resourcePath||t;var s=new Fo(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(n,function(e){let t=null;try{t=JSON.parse(e)}catch(e){return void 0!==i&&i(e),void console.error("THREE:ObjectLoader: Can't parse "+n+".",e.message)}e=t.metadata;void 0!==e&&void 0!==e.type&&"geometry"!==e.type.toLowerCase()?a.parse(t,r):console.error("THREE.ObjectLoader: Can't load "+n)},e,i)}parse(e,t){const n=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,r),a=this.parseImages(e.images,function(){void 0!==t&&t(l)}),s=this.parseTextures(e.textures,a),o=this.parseMaterials(e.materials,s),l=this.parseObject(e.object,i,o,n),c=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,c),void 0!==t){let e=!1;for(const t in a)if(a[t]instanceof HTMLImageElement){e=!0;break}!1===e&&t(l)}return l}parseShapes(n){var r={};if(void 0!==n)for(let e=0,t=n.length;e<t;e++){var i=(new fl).fromJSON(n[e]);r[i.uuid]=i}return r}parseSkeletons(n,e){const r={},i={};if(e.traverse(function(e){e.isBone&&(i[e.uuid]=e)}),void 0!==n)for(let e=0,t=n.length;e<t;e++){var a=(new Xa).fromJSON(n[e],i);r[a.uuid]=a}return r}parseGeometries(n,r){const i={};let a;if(void 0!==n){var s=new zl;for(let t=0,e=n.length;t<e;t++){let e;var o=n[t];switch(o.type){case"PlaneGeometry":case"PlaneBufferGeometry":e=new ho[o.type](o.width,o.height,o.widthSegments,o.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":e=new ho[o.type](o.width,o.height,o.depth,o.widthSegments,o.heightSegments,o.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":e=new ho[o.type](o.radius,o.segments,o.thetaStart,o.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":e=new ho[o.type](o.radiusTop,o.radiusBottom,o.height,o.radialSegments,o.heightSegments,o.openEnded,o.thetaStart,o.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":e=new ho[o.type](o.radius,o.height,o.radialSegments,o.heightSegments,o.openEnded,o.thetaStart,o.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":e=new ho[o.type](o.radius,o.widthSegments,o.heightSegments,o.phiStart,o.phiLength,o.thetaStart,o.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":e=new ho[o.type](o.radius,o.detail);break;case"RingGeometry":case"RingBufferGeometry":e=new ho[o.type](o.innerRadius,o.outerRadius,o.thetaSegments,o.phiSegments,o.thetaStart,o.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":e=new ho[o.type](o.radius,o.tube,o.radialSegments,o.tubularSegments,o.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":e=new ho[o.type](o.radius,o.tube,o.tubularSegments,o.radialSegments,o.p,o.q);break;case"TubeGeometry":case"TubeBufferGeometry":e=new ho[o.type]((new ul[o.path.type]).fromJSON(o.path),o.tubularSegments,o.radius,o.radialSegments,o.closed);break;case"LatheGeometry":case"LatheBufferGeometry":e=new ho[o.type](o.points,o.segments,o.phiStart,o.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":e=new ho[o.type](o.vertices,o.indices,o.radius,o.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":a=[];for(let e=0,t=o.shapes.length;e<t;e++){const i=r[o.shapes[e]];a.push(i)}e=new ho[o.type](a,o.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":a=[];for(let e=0,t=o.shapes.length;e<t;e++){const i=r[o.shapes[e]];a.push(i)}const n=o.options.extrudePath;void 0!==n&&(o.options.extrudePath=(new ul[n.type]).fromJSON(n)),e=new ho[o.type](a,o.options);break;case"BufferGeometry":case"InstancedBufferGeometry":e=s.parse(o);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+o.type+'"');continue}e.uuid=o.uuid,void 0!==o.name&&(e.name=o.name),!0===e.isBufferGeometry&&void 0!==o.userData&&(e.userData=o.userData),i[o.uuid]=e}}return i}parseMaterials(n,e){const r={},i={};if(void 0!==n){var a=new Bl;a.setTextures(e);for(let e=0,t=n.length;e<t;e++){var s=n[e];if("MultiMaterial"===s.type){const n=[];for(let e=0;e<s.materials.length;e++){const i=s.materials[e];void 0===r[i.uuid]&&(r[i.uuid]=a.parse(i)),n.push(r[i.uuid])}i[s.uuid]=n}else void 0===r[s.uuid]&&(r[s.uuid]=a.parse(s)),i[s.uuid]=r[s.uuid]}}return i}parseAnimations(t){var n={};if(void 0!==t)for(let e=0;e<t.length;e++){var r=t[e],r=Bo.parse(r);n[r.uuid]=r}return n}parseImages(n,r){const i=this,a={};let s;function o(e){var t,n;return"string"==typeof e?(n=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t=e)?t:i.resourcePath+t,i.manager.itemStart(n),s.load(n,function(){i.manager.itemEnd(n)},void 0,function(){i.manager.itemError(n),i.manager.itemEnd(n)})):e.data?{data:Mn(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==n&&0<n.length){const i=new Uo(r);(s=new ko(i)).setCrossOrigin(this.crossOrigin);for(let e=0,t=n.length;e<t;e++){const i=n[e],s=i.url;if(Array.isArray(s)){a[i.uuid]=[];for(let e=0,t=s.length;e<t;e++){const r=o(s[e]);null!==r&&(r instanceof HTMLImageElement?a[i.uuid].push(r):a[i.uuid].push(new nr(r.data,r.width,r.height)))}}else{const n=o(i.url);null!==n&&(a[i.uuid]=n)}}}return a}parseTextures(n,r){function i(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}var a={};if(void 0!==n)for(let t=0,e=n.length;t<e;t++){var s=n[t];let e;void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===r[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);var o=r[s.image];Array.isArray(o)?(e=new er(o),6===o.length&&(e.needsUpdate=!0)):(e=o&&o.data?new nr(o.data,o.width,o.height):new h(o),o&&(e.needsUpdate=!0)),e.uuid=s.uuid,void 0!==s.name&&(e.name=s.name),void 0!==s.mapping&&(e.mapping=i(s.mapping,Fl)),void 0!==s.offset&&e.offset.fromArray(s.offset),void 0!==s.repeat&&e.repeat.fromArray(s.repeat),void 0!==s.center&&e.center.fromArray(s.center),void 0!==s.rotation&&(e.rotation=s.rotation),void 0!==s.wrap&&(e.wrapS=i(s.wrap[0],Gl),e.wrapT=i(s.wrap[1],Gl)),void 0!==s.format&&(e.format=s.format),void 0!==s.type&&(e.type=s.type),void 0!==s.encoding&&(e.encoding=s.encoding),void 0!==s.minFilter&&(e.minFilter=i(s.minFilter,kl)),void 0!==s.magFilter&&(e.magFilter=i(s.magFilter,kl)),void 0!==s.anisotropy&&(e.anisotropy=s.anisotropy),void 0!==s.flipY&&(e.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(e.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(e.unpackAlignment=s.unpackAlignment),a[s.uuid]=e}return a}parseObject(e,t,a,n){let r,i,s;function o(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function l(n){if(void 0!==n){if(Array.isArray(n)){var r=[];for(let e=0,t=n.length;e<t;e++){var i=n[e];void 0===a[i]&&console.warn("THREE.ObjectLoader: Undefined material",i),r.push(a[i])}return r}return void 0===a[n]&&console.warn("THREE.ObjectLoader: Undefined material",n),a[n]}}switch(e.type){case"Scene":r=new ga,void 0!==e.background&&Number.isInteger(e.background)&&(r.background=new Ce(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?r.fog=new ma(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(r.fog=new fa(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":r=new R(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(r.focus=e.focus),void 0!==e.zoom&&(r.zoom=e.zoom),void 0!==e.filmGauge&&(r.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(r.filmOffset=e.filmOffset),void 0!==e.view&&(r.view=Object.assign({},e.view));break;case"OrthographicCamera":r=new Rl(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(r.zoom=e.zoom),void 0!==e.view&&(r.view=Object.assign({},e.view));break;case"AmbientLight":r=new Pl(e.color,e.intensity);break;case"DirectionalLight":r=new Cl(e.color,e.intensity);break;case"PointLight":r=new Al(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":r=new Dl(e.color,e.intensity,e.width,e.height);break;case"SpotLight":r=new wl(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":r=new gl(e.color,e.groundColor,e.intensity);break;case"LightProbe":r=(new Nl).fromJSON(e);break;case"SkinnedMesh":i=o(e.geometry),s=l(e.material),r=new Va(i,s),void 0!==e.bindMode&&(r.bindMode=e.bindMode),void 0!==e.bindMatrix&&r.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(r.skeleton=e.skeleton);break;case"Mesh":i=o(e.geometry),s=l(e.material),r=new A(i,s);break;case"InstancedMesh":i=o(e.geometry),s=l(e.material);const t=e.count,a=e.instanceMatrix,n=e.instanceColor;(r=new Ka(i,s,t)).instanceMatrix=new E(new Float32Array(a.array),16),void 0!==n&&(r.instanceColor=new E(new Float32Array(n.array),n.itemSize));break;case"LOD":r=new Ua;break;case"Line":r=new is(o(e.geometry),l(e.material));break;case"LineLoop":r=new ls(o(e.geometry),l(e.material));break;case"LineSegments":r=new os(o(e.geometry),l(e.material));break;case"PointCloud":case"Points":r=new fs(o(e.geometry),l(e.material));break;case"Sprite":r=new Ia(l(e.material));break;case"Group":r=new ca;break;case"Bone":r=new Wa;break;default:r=new c}if(r.uuid=e.uuid,void 0!==e.name&&(r.name=e.name),void 0!==e.matrix?(r.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(r.matrixAutoUpdate=e.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(void 0!==e.position&&r.position.fromArray(e.position),void 0!==e.rotation&&r.rotation.fromArray(e.rotation),void 0!==e.quaternion&&r.quaternion.fromArray(e.quaternion),void 0!==e.scale&&r.scale.fromArray(e.scale)),void 0!==e.castShadow&&(r.castShadow=e.castShadow),void 0!==e.receiveShadow&&(r.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(r.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(r.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(r.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&r.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera)&&(r.shadow.camera=this.parseObject(e.shadow.camera)),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.frustumCulled&&(r.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(r.renderOrder=e.renderOrder),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.layers&&(r.layers.mask=e.layers),void 0!==e.children){const i=e.children;for(let e=0;e<i.length;e++)r.add(this.parseObject(i[e],t,a,n))}if(void 0!==e.animations){const t=e.animations;for(let e=0;e<t.length;e++){const a=t[e];r.animations.push(n[a])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(r.autoUpdate=e.autoUpdate);const t=e.levels;for(let e=0;e<t.length;e++){const a=t[e],n=r.getObjectByProperty("uuid",a.object);void 0!==n&&r.addLevel(n,a.distance)}}return r}bindSkeletons(e,n){0!==Object.keys(n).length&&e.traverse(function(e){var t;!0===e.isSkinnedMesh&&void 0!==e.skeleton&&(void 0===(t=n[e.skeleton])?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(t,e.bindMatrix))})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}},e.ObjectSpaceNormalMap=1,e.OctahedronBufferGeometry=$s,e.OctahedronGeometry=$s,e.OneFactor=201,e.OneMinusDstAlphaFactor=207,e.OneMinusDstColorFactor=209,e.OneMinusSrcAlphaFactor=205,e.OneMinusSrcColorFactor=203,e.OrthographicCamera=Rl,e.PCFShadowMap=1,e.PCFSoftShadowMap=2,e.PMREMGenerator=class{constructor(e){var t;this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=(e=new Float32Array(20),t=new Re(0,1,0),new po({name:"SphericalGaussianBlur",defines:{n:20},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:t},inputEncoding:{value:lh[3e3]},outputEncoding:{value:lh[3e3]}},vertexShader:Eh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${Sh()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){gh=this._renderer.getRenderTarget();var i=this._allocateTargets();return this._sceneToCubeUV(e,n,r,i),0<t&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=Th(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=Mh(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<dh.length;e++)dh[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(gh),e.scissorTest=!1,wh(e,0,0,e.width,e.height)}_fromTexture(e){gh=this._renderer.getRenderTarget();var t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){var t={magFilter:O,minFilter:O,generateMipmaps:!1,type:Pe,format:1023,encoding:void 0===(t=e)||t.type!==Pe||t.encoding!==Be&&t.encoding!==ge&&t.encoding!==ve?ye:e.encoding,depthBuffer:!1},n=bh(t);return n.depthBuffer=!e,this._pingPongRenderTarget=bh(t),n}_compileMaterial(e){e=new A(dh[0],e);this._renderer.compile(e,uh)}_sceneToCubeUV(t,e,n,r){var i=new R(90,1,e,n),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,e=o.autoClear,n=o.outputEncoding,l=o.toneMapping;o.getClearColor(mh),o.toneMapping=0,o.outputEncoding=Be;let c=o.autoClear=!1;var h=t.background;if(h){if(h.isColor){ch.color.copy(h).convertSRGBToLinear(),t.background=null;const e=_h(ch.color);ch.opacity=e,c=!0}}else{ch.color.copy(mh).convertSRGBToLinear();const t=_h(ch.color);ch.opacity=t,c=!0}for(let e=0;e<6;e++){const n=e%3;0==n?(i.up.set(0,a[e],0),i.lookAt(s[e],0,0)):1==n?(i.up.set(0,0,a[e]),i.lookAt(0,s[e],0)):(i.up.set(0,a[e],0),i.lookAt(0,0,s[e])),wh(r,n*ah,2<e?ah:0,ah,ah),o.setRenderTarget(r),c&&o.render(hh,i),o.render(t,i)}o.toneMapping=l,o.outputEncoding=n,o.autoClear=e}_textureToCubeUV(e,t){var n=this._renderer,r=(e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=Th()):null==this._equirectShader&&(this._equirectShader=Mh()),e.isCubeTexture?this._cubemapShader:this._equirectShader),i=new A(dh[0],r),r=r.uniforms;(r.envMap.value=e).isCubeTexture||r.texelSize.value.set(1/e.image.width,1/e.image.height),r.inputEncoding.value=lh[e.encoding],r.outputEncoding.value=lh[t.texture.encoding],wh(t,0,0,3*ah,2*ah),n.setRenderTarget(t),n.render(i,uh)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let e=1;e<oh;e++){const n=Math.sqrt(fh[e]*fh[e]-fh[e-1]*fh[e-1]),r=xh[(e-1)%xh.length];this._blur(t,e-1,e,n,r)}e.autoClear=n}_blur(e,t,n,r,i){var a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,r,"latitudinal",i),this._halfBlur(a,e,n,n,r,"longitudinal",i)}_halfBlur(e,t,n,r,i,a,s){var o=this._renderer,l=this._blurMaterial,c=("latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!"),new A(dh[r],l)),l=l.uniforms,h=ph[n]-1,h=isFinite(i)?Math.PI/(2*h):2*Math.PI/39,u=i/h,d=isFinite(i)?1+Math.floor(3*u):20,p=(20<d&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${d} samples when the maximum is set to 20`),[]);let f=0;for(let e=0;e<20;++e){const t=e/u,n=Math.exp(-t*t/2);p.push(n),0==e?f+=n:e<d&&(f+=2*n)}for(let e=0;e<p.length;e++)p[e]=p[e]/f;l.envMap.value=e.texture,l.samples.value=d,l.weights.value=p,l.latitudinal.value="latitudinal"===a,s&&(l.poleAxis.value=s),l.dTheta.value=h,l.mipInt.value=8-n,l.inputEncoding.value=lh[e.texture.encoding],l.outputEncoding.value=lh[e.texture.encoding];i=ph[r];wh(t,3*Math.max(0,ah-2*i),(0===r?0:2*ah)+2*i*(4<r?r-8+4:0),3*i,2*i),o.setRenderTarget(t),o.render(c,uh)}},e.ParametricBufferGeometry=eo,e.ParametricGeometry=eo,e.Particle=function(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Ia(e)},e.ParticleBasicMaterial=function(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new cs(e)},e.ParticleSystem=function(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new fs(e,t)},e.ParticleSystemMaterial=function(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new cs(e)},e.Path=pl,e.PerspectiveCamera=R,e.Plane=jt,e.PlaneBufferGeometry=lr,e.PlaneGeometry=lr,e.PlaneHelper=class extends is{constructor(e,t=1,n=16776960){var r=new S,r=(r.setAttribute("position",new k([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),super(r,new g({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t,new S);r.setAttribute("position",new k([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),r.computeBoundingSphere(),this.add(new A(r,new hn({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?1:0,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}},e.PointCloud=function(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new fs(e,t)},e.PointCloudMaterial=function(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new cs(e)},e.PointLight=Al,e.PointLightHelper=class extends A{constructor(e,t,n){super(new ro(t,4,2),new hn({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}},e.Points=fs,e.PointsMaterial=cs,e.PolarGridHelper=class extends os{constructor(t=10,n=16,r=8,i=64,a=4473924,s=8947848){a=new Ce(a),s=new Ce(s);var o=[],l=[];for(let e=0;e<=n;e++){const i=e/n*(2*Math.PI),p=Math.sin(i)*t,f=Math.cos(i)*t;o.push(0,0,0),o.push(p,0,f);var c=1&e?a:s;l.push(c.r,c.g,c.b),l.push(c.r,c.g,c.b)}for(let e=0;e<=r;e++){const p=1&e?a:s,m=t-t/r*e;for(let e=0;e<i;e++){var h=e/i*(2*Math.PI),u=Math.sin(h)*m,d=Math.cos(h)*m;o.push(u,0,d),l.push(p.r,p.g,p.b),h=(e+1)/i*(2*Math.PI),u=Math.sin(h)*m,d=Math.cos(h)*m,o.push(u,0,d),l.push(p.r,p.g,p.b)}}const p=new S;p.setAttribute("position",new k(o,3)),p.setAttribute("color",new k(l,3)),super(p,new g({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}},e.PolyhedronBufferGeometry=Ms,e.PolyhedronGeometry=Ms,e.PositionalAudio=class extends ac{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(sc,oc,lc),cc.set(0,0,1).applyQuaternion(oc);var t=this.panner;if(t.positionX){const e=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(sc.x,e),t.positionY.linearRampToValueAtTime(sc.y,e),t.positionZ.linearRampToValueAtTime(sc.z,e),t.orientationX.linearRampToValueAtTime(cc.x,e),t.orientationY.linearRampToValueAtTime(cc.y,e),t.orientationZ.linearRampToValueAtTime(cc.z,e)}else t.setPosition(sc.x,sc.y,sc.z),t.setOrientation(cc.x,cc.y,cc.z)}}},e.PropertyBinding=x,e.PropertyMixer=uc,e.QuadraticBezierCurve=ll,e.QuadraticBezierCurve3=cl,e.Quaternion=f,e.QuaternionKeyframeTrack=Do,e.QuaternionLinearInterpolant=Po,e.REVISION=b,e.RGBADepthPacking=3201,e.RGBAFormat=Ne,e.RGBAIntegerFormat=1033,e.RGBA_ASTC_10x10_Format=37819,e.RGBA_ASTC_10x5_Format=37816,e.RGBA_ASTC_10x6_Format=37817,e.RGBA_ASTC_10x8_Format=37818,e.RGBA_ASTC_12x10_Format=37820,e.RGBA_ASTC_12x12_Format=37821,e.RGBA_ASTC_4x4_Format=37808,e.RGBA_ASTC_5x4_Format=37809,e.RGBA_ASTC_5x5_Format=37810,e.RGBA_ASTC_6x5_Format=37811,e.RGBA_ASTC_6x6_Format=37812,e.RGBA_ASTC_8x5_Format=37813,e.RGBA_ASTC_8x6_Format=37814,e.RGBA_ASTC_8x8_Format=37815,e.RGBA_BPTC_Format=36492,e.RGBA_ETC2_EAC_Format=oe,e.RGBA_PVRTC_2BPPV1_Format=ae,e.RGBA_PVRTC_4BPPV1_Format=ie,e.RGBA_S3TC_DXT1_Format=H,e.RGBA_S3TC_DXT3_Format=U,e.RGBA_S3TC_DXT5_Format=te,e.RGBDEncoding=3006,e.RGBEEncoding=ye,e.RGBEFormat=1023,e.RGBFormat=K,e.RGBIntegerFormat=1032,e.RGBM16Encoding=3005,e.RGBM7Encoding=xe,e.RGB_ETC1_Format=36196,e.RGB_ETC2_Format=se,e.RGB_PVRTC_2BPPV1_Format=re,e.RGB_PVRTC_4BPPV1_Format=ne,e.RGB_S3TC_DXT1_Format=B,e.RGFormat=1030,e.RGIntegerFormat=1031,e.RawShaderMaterial=po,e.Ray=vt,e.Raycaster=Rc,e.RectAreaLight=Dl,e.RedFormat=1028,e.RedIntegerFormat=1029,e.ReinhardToneMapping=2,e.RepeatWrapping=F,e.ReplaceStencilOp=7681,e.ReverseSubtractEquation=102,e.RingBufferGeometry=to,e.RingGeometry=to,e.SRGB8_ALPHA8_ASTC_10x10_Format=37851,e.SRGB8_ALPHA8_ASTC_10x5_Format=37848,e.SRGB8_ALPHA8_ASTC_10x6_Format=37849,e.SRGB8_ALPHA8_ASTC_10x8_Format=37850,e.SRGB8_ALPHA8_ASTC_12x10_Format=37852,e.SRGB8_ALPHA8_ASTC_12x12_Format=37853,e.SRGB8_ALPHA8_ASTC_4x4_Format=37840,e.SRGB8_ALPHA8_ASTC_5x4_Format=37841,e.SRGB8_ALPHA8_ASTC_5x5_Format=37842,e.SRGB8_ALPHA8_ASTC_6x5_Format=37843,e.SRGB8_ALPHA8_ASTC_6x6_Format=37844,e.SRGB8_ALPHA8_ASTC_8x5_Format=37845,e.SRGB8_ALPHA8_ASTC_8x6_Format=37846,e.SRGB8_ALPHA8_ASTC_8x8_Format=37847,e.Scene=ga,e.SceneUtils=Ah,e.ShaderChunk=M,e.ShaderLib=cr,e.ShaderMaterial=Qn,e.ShadowMaterial=uo,e.Shape=fl,e.ShapeBufferGeometry=no,e.ShapeGeometry=no,e.ShapePath=Wl,e.ShapeUtils=qs,e.ShortType=1011,e.Skeleton=Xa,e.SkeletonHelper=Gc,e.SkinnedMesh=Va,e.SmoothShading=2,e.Sphere=ct,e.SphereBufferGeometry=ro,e.SphereGeometry=ro,e.Spherical=class{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Ee.clamp(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}},e.SphericalHarmonics3=Il,e.SplineCurve=hl,e.SpotLight=wl,e.SpotLightHelper=class extends c{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;var e=new S,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1;e<32;e++,t++){const r=e/32*Math.PI*2,i=t/32*Math.PI*2;n.push(Math.cos(r),Math.sin(r),1,Math.cos(i),Math.sin(i),1)}e.setAttribute("position",new k(n,3));const r=new g({fog:!1,toneMapped:!1});this.cone=new os(e,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();var e=this.light.distance||1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Uc.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Uc),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}},e.Sprite=Ia,e.SpriteMaterial=xa,e.SrcAlphaFactor=204,e.SrcAlphaSaturateFactor=210,e.SrcColorFactor=202,e.StaticCopyUsage=35046,e.StaticDrawUsage=_e,e.StaticReadUsage=35045,e.StereoCamera=class{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new R,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new R,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){var t,n,r,i,a,s=this._cache;s.focus===e.focus&&s.fov===e.fov&&s.aspect===e.aspect*this.aspect&&s.near===e.near&&s.far===e.far&&s.zoom===e.zoom&&s.eyeSep===this.eyeSep||(s.focus=e.focus,s.fov=e.fov,s.aspect=e.aspect*this.aspect,s.near=e.near,s.far=e.far,s.zoom=e.zoom,s.eyeSep=this.eyeSep,t=e.projectionMatrix.clone(),n=(i=s.eyeSep/2)*s.near/s.focus,r=s.near*Math.tan(Ee.DEG2RAD*s.fov*.5)/s.zoom,Kl.elements[12]=-i,Ql.elements[12]=i,i=-r*s.aspect+n,a=r*s.aspect+n,t.elements[0]=2*s.near/(a-i),t.elements[8]=(a+i)/(a-i),this.cameraL.projectionMatrix.copy(t),i=-r*s.aspect-n,a=r*s.aspect-n,t.elements[0]=2*s.near/(a-i),t.elements[8]=(a+i)/(a-i),this.cameraR.projectionMatrix.copy(t)),this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Kl),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Ql)}},e.StreamCopyUsage=35042,e.StreamDrawUsage=35040,e.StreamReadUsage=35041,e.StringKeyframeTrack=Io,e.SubtractEquation=101,e.SubtractiveBlending=3,e.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},e.TangentSpaceNormalMap=0,e.TetrahedronBufferGeometry=io,e.TetrahedronGeometry=io,e.TextBufferGeometry=ao,e.TextGeometry=ao,e.Texture=h,e.TextureLoader=jo,e.TorusBufferGeometry=so,e.TorusGeometry=so,e.TorusKnotBufferGeometry=oo,e.TorusKnotGeometry=oo,e.Triangle=p,e.TriangleFanDrawMode=2,e.TriangleStripDrawMode=1,e.TrianglesDrawMode=0,e.TubeBufferGeometry=lo,e.TubeGeometry=lo,e.UVMapping=w,e.Uint16Attribute=function(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new gn(e,t)},e.Uint16BufferAttribute=gn,e.Uint32Attribute=function(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new yn(e,t)},e.Uint32BufferAttribute=yn,e.Uint8Attribute=function(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new pn(e,t)},e.Uint8BufferAttribute=pn,e.Uint8ClampedAttribute=function(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new fn(e,t)},e.Uint8ClampedBufferAttribute=fn,e.Uniform=Ec,e.UniformsLib=T,e.UniformsUtils=Jn,e.UnsignedByteType=Pe,e.UnsignedInt248Type=Q,e.UnsignedIntType=J,e.UnsignedShort4444Type=1017,e.UnsignedShort5551Type=1018,e.UnsignedShort565Type=1019,e.UnsignedShortType=Z,e.VSMShadowMap=3,e.Vector2=Se,e.Vector3=Re,e.Vector4=Ae,e.VectorKeyframeTrack=No,e.Vertex=function(e,t,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new Re(e,t,n)},e.VertexColors=2,e.VideoTexture=gs,e.WebGL1Renderer=pa,e.WebGLCubeRenderTarget=tr,e.WebGLMultisampleRenderTarget=Ge,e.WebGLRenderTarget=Fe,e.WebGLRenderTargetCube=function(e,t,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new tr(e,n)},e.WebGLRenderer=n,e.WebGLUtils=oa,e.WireframeGeometry=co,e.WireframeHelper=function(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new os(new co(e.geometry),new g({color:void 0!==t?t:16777215}))},e.WrapAroundEnding=pe,e.XHRLoader=function(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Fo(e)},e.ZeroCurvatureEnding=ue,e.ZeroFactor=200,e.ZeroSlopeEnding=de,e.ZeroStencilOp=0,e.sRGBEncoding=ge,Object.defineProperty(e,"__esModule",{value:!0})}),THREE.CopyShader={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texel = texture2D( tDiffuse, vUv );\n\tgl_FragColor = opacity * texel;\n}"},THREE.EffectComposer=function(e,t){var n,r;this.renderer=e,void 0===t?(n={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat},r=e.getSize(new THREE.Vector2),this._pixelRatio=e.getPixelRatio(),this._width=r.width,this._height=r.height,(t=new THREE.WebGLRenderTarget(this._width*this._pixelRatio,this._height*this._pixelRatio,n)).texture.name="EffectComposer.rt1"):(this._pixelRatio=1,this._width=t.width,this._height=t.height),this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader"),void 0===THREE.ShaderPass&&console.error("THREE.EffectComposer relies on THREE.ShaderPass"),this.copyPass=new THREE.ShaderPass(THREE.CopyShader),this.clock=new THREE.Clock},Object.assign(THREE.EffectComposer.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)},insertPass:function(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)},removePass:function(e){e=this.passes.indexOf(e);-1!==e&&this.passes.splice(e,1)},isLastEnabledPass:function(e){for(var t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0},render:function(e){void 0===e&&(e=this.clock.getDelta());for(var t,n,r,i=this.renderer.getRenderTarget(),a=!1,s=this.passes.length,o=0;o<s;o++)!1!==(r=this.passes[o]).enabled&&(r.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(o),r.render(this.renderer,this.writeBuffer,this.readBuffer,e,a),r.needsSwap&&(a&&(t=this.renderer.getContext(),(n=this.renderer.state.buffers.stencil).setFunc(t.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),n.setFunc(t.EQUAL,1,4294967295)),this.swapBuffers()),void 0!==THREE.MaskPass)&&(r instanceof THREE.MaskPass?a=!0:r instanceof THREE.ClearMaskPass&&(a=!1));this.renderer.setRenderTarget(i)},reset:function(e){var t;void 0===e&&(t=this.renderer.getSize(new THREE.Vector2),this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)),this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this._width=e,this._height=t;var n=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget1.setSize(n,r),this.renderTarget2.setSize(n,r);for(var i=0;i<this.passes.length;i++)this.passes[i].setSize(n,r)},setPixelRatio:function(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}),THREE.Pass=function(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1},Object.assign(THREE.Pass.prototype,{setSize:function(){},render:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),THREE.Pass.FullScreenQuad=function(){function e(e){this._mesh=new THREE.Mesh(n,e)}var t=new THREE.OrthographicCamera(-1,1,1,-1,0,1),n=new THREE.BufferGeometry;n.setAttribute("position",new THREE.Float32BufferAttribute([-1,3,0,-1,-1,0,3,-1,0],3)),n.setAttribute("uv",new THREE.Float32BufferAttribute([0,2,0,0,2,0],2));return Object.defineProperty(e.prototype,"material",{get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}),Object.assign(e.prototype,{dispose:function(){this._mesh.geometry.dispose()},render:function(e){e.render(this._mesh,t)}}),e}(),THREE.RenderPass=function(e,t,n,r,i){THREE.Pass.call(this),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=r,this.clearAlpha=void 0===i?0:i,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new THREE.Color},THREE.RenderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.RenderPass,render:function(e,t,n){var r,i,a=e.autoClear;e.autoClear=!1,void 0!==this.overrideMaterial&&(i=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),r=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,r),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=i),e.autoClear=a}}),THREE.ShaderPass=function(e,t){THREE.Pass.call(this),this.textureID=void 0===t?"tDiffuse":t,e instanceof THREE.ShaderMaterial?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=THREE.UniformsUtils.clone(e.uniforms),this.material=new THREE.ShaderMaterial({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new THREE.Pass.FullScreenQuad(this.material)},THREE.ShaderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.ShaderPass,render:function(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?e.setRenderTarget(null):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil)),this.fsQuad.render(e)}}),THREE.BokehShader={defines:{DEPTH_PACKING:1,PERSPECTIVE_CAMERA:1},uniforms:{tColor:{value:null},tDepth:{value:null},focus:{value:1},aspect:{value:1},aperture:{value:.025},maxblur:{value:.01},nearClip:{value:1},farClip:{value:1e3}},vertexShader:"#if __VERSION__ < 130\n#define TEXTURE2D texture2D\n#else\n#define TEXTURE2D texture\n#endif\nvarying vec2 vUv;\nvoid main() {\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#include <common>\nvarying vec2 vUv;\nuniform sampler2D tColor;\nuniform sampler2D tDepth;\nuniform float maxblur;\nuniform float aperture;\nuniform float nearClip;\nuniform float farClip;\nuniform float focus;\nuniform float aspect;\n#include <packing>\nfloat getDepth( const in vec2 screenPosition ) {\n\t#if DEPTH_PACKING == 1\n\treturn unpackRGBAToDepth( TEXTURE2D( tDepth, screenPosition ) );\n\t#else\n\treturn TEXTURE2D( tDepth, screenPosition ).x;\n\t#endif\n}\nfloat getViewZ( const in float depth ) {\n\t#if PERSPECTIVE_CAMERA == 1\n\treturn perspectiveDepthToViewZ( depth, nearClip, farClip );\n\t#else\n\treturn orthographicDepthToViewZ( depth, nearClip, farClip );\n\t#endif\n}\nvoid main() {\n\tvec2 aspectcorrect = vec2( 1.0, aspect );\n\tfloat viewZ = getViewZ( getDepth( vUv ) );\n\tfloat factor = ( focus + viewZ );\n\tvec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );\n\tvec2 dofblur9 = dofblur * 0.9;\n\tvec2 dofblur7 = dofblur * 0.7;\n\tvec2 dofblur4 = dofblur * 0.4;\n\tvec4 col = vec4( 0.0 );\n\tcol += TEXTURE2D( tColor, vUv.xy );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\n\tcol += TEXTURE2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\n\tgl_FragColor = col / 41.0;\n\tgl_FragColor.a = 1.0;\n}"},THREE.BokehPass=function(e,t,n){THREE.Pass.call(this),this.scene=e,this.camera=t;var e=void 0===n.focus?1:n.focus,r=(void 0===n.aspect?t:n).aspect,i=void 0===n.aperture?.025:n.aperture,a=void 0===n.maxblur?1:n.maxblur,s=n.width||window.innerWidth||1,n=n.height||window.innerHeight||1,s=(this.renderTargetDepth=new THREE.WebGLRenderTarget(s,n,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter}),this.renderTargetDepth.texture.name="BokehPass.depth",this.materialDepth=new THREE.MeshDepthMaterial,this.materialDepth.depthPacking=THREE.RGBADepthPacking,this.materialDepth.blending=THREE.NoBlending,void 0===THREE.BokehShader&&console.error("THREE.BokehPass relies on THREE.BokehShader"),THREE.BokehShader),n=THREE.UniformsUtils.clone(s.uniforms);n.tDepth.value=this.renderTargetDepth.texture,n.focus.value=e,n.aspect.value=r,n.aperture.value=i,n.maxblur.value=a,n.nearClip.value=t.near,n.farClip.value=t.far,this.materialBokeh=new THREE.ShaderMaterial({defines:Object.assign({},s.defines),uniforms:n,vertexShader:s.vertexShader,fragmentShader:s.fragmentShader}),this.uniforms=n,this.needsSwap=!1,this.fsQuad=new THREE.Pass.FullScreenQuad(this.materialBokeh),this._oldClearColor=new THREE.Color},THREE.BokehPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.BokehPass,render:function(e,t,n){this.scene.overrideMaterial=this.materialDepth,e.getClearColor(this._oldClearColor);var r=e.getClearAlpha(),i=e.autoClear;e.autoClear=!1,e.setClearColor(16777215),e.setClearAlpha(1),e.setRenderTarget(this.renderTargetDepth),e.clear(),e.render(this.scene,this.camera),this.uniforms.tColor.value=n.texture,this.uniforms.nearClip.value=this.camera.near,this.uniforms.farClip.value=this.camera.far,this.renderToScreen?e.setRenderTarget(null):(e.setRenderTarget(t),e.clear()),this.fsQuad.render(e),this.scene.overrideMaterial=null,e.setClearColor(this._oldClearColor),e.setClearAlpha(r),e.autoClear=i}}),THREE.FilmShader={uniforms:{tDiffuse:{value:null},time:{value:0},nIntensity:{value:.5},sIntensity:{value:.05},sCount:{value:4096},grayscale:{value:1}},vertexShader:["#if __VERSION__ < 130\n#define TEXTURE2D texture2D\n#else\n#define TEXTURE2D texture\n#endif\nvarying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#include <common>","uniform float time;","uniform bool grayscale;","uniform float nIntensity;","uniform float sIntensity;","uniform float sCount;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","\tvec4 cTextureScreen = TEXTURE2D( tDiffuse, vUv );","\tfloat dx = rand( vUv + time );","\tvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx, 0.0, 1.0 );","\tvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );","\tcResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;","\tcResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );","\tif( grayscale ) {","\t\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );","\t}","\tgl_FragColor =  vec4( cResult, cTextureScreen.a );","}"].join("\n")},THREE.FilmPass=function(e,t,n,r){THREE.Pass.call(this),void 0===THREE.FilmShader&&console.error("THREE.FilmPass relies on THREE.FilmShader");var i=THREE.FilmShader;this.uniforms=THREE.UniformsUtils.clone(i.uniforms),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:i.vertexShader,fragmentShader:i.fragmentShader}),void 0!==r&&(this.uniforms.grayscale.value=r),void 0!==e&&(this.uniforms.nIntensity.value=e),void 0!==t&&(this.uniforms.sIntensity.value=t),void 0!==n&&(this.uniforms.sCount.value=n),this.fsQuad=new THREE.Pass.FullScreenQuad(this.material)},THREE.FilmPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.FilmPass,render:function(e,t,n,r){this.uniforms.tDiffuse.value=n.texture,this.uniforms.time.value+=r,this.renderToScreen?e.setRenderTarget(null):(e.setRenderTarget(t),this.clear&&e.clear()),this.fsQuad.render(e)}}),THREE.DigitalGlitch={uniforms:{tDiffuse:{value:null},tDisp:{value:null},byp:{value:0},amount:{value:.08},angle:{value:.02},seed:{value:.02},seed_x:{value:.02},seed_y:{value:.02},distortion_x:{value:.5},distortion_y:{value:.6},col_s:{value:.05}},vertexShader:"varying vec2 vUv;\nvoid main() {\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#if __VERSION__ < 130\n#define TEXTURE2D texture2D\n#else\n#define TEXTURE2D texture\n#endif\nuniform int byp;\nuniform sampler2D tDiffuse;\nuniform sampler2D tDisp;\nuniform float amount;\nuniform float angle;\nuniform float seed;\nuniform float seed_x;\nuniform float seed_y;\nuniform float distortion_x;\nuniform float distortion_y;\nuniform float col_s;\nvarying vec2 vUv;\nfloat rand(vec2 co){\n\treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nvoid main() {\n\tif(byp<1) {\n\t\tvec2 p = vUv;\n\t\tfloat xs = floor(gl_FragCoord.x / 0.5);\n\t\tfloat ys = floor(gl_FragCoord.y / 0.5);\n\t\tvec4 normal = texture2D (tDisp, p*seed*seed);\n\t\tif(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\n\t\t\tif(seed_x>0.){\n\t\t\t\tp.y = 1. - (p.y + distortion_y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tp.y = distortion_y;\n\t\t\t}\n\t\t}\n\t\tif(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\n\t\t\tif(seed_y>0.){\n\t\t\t\tp.x=distortion_x;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tp.x = 1. - (p.x + distortion_x);\n\t\t\t}\n\t\t}\n\t\tp.x+=normal.x*seed_x*(seed/5.);\n\t\tp.y+=normal.y*seed_y*(seed/5.);\n\t\tvec2 offset = amount * vec2( cos(angle), sin(angle));\n\t\tvec4 cr = TEXTURE2D(tDiffuse, p + offset);\n\t\tvec4 cga = TEXTURE2D(tDiffuse, p);\n\t\tvec4 cb = TEXTURE2D(tDiffuse, p - offset);\n\t\tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n\t\tvec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\n\t\tgl_FragColor = gl_FragColor+ snow;\n\t}\n\telse {\n\t\tgl_FragColor=texture2D (tDiffuse, vUv);\n\t}\n}"},THREE.GlitchPass=function(e,t){THREE.Pass.call(this),void 0===THREE.DigitalGlitch&&console.error("THREE.GlitchPass relies on THREE.DigitalGlitch");var n=THREE.DigitalGlitch;this.uniforms=THREE.UniformsUtils.clone(n.uniforms),"object"==typeof e&&(t={...e},e=64),this.uniforms.tDisp.value=this.generateHeightmap(e="object"!=typeof e&&null!=e?e:64),this.uniforms.damount=90,this.uniforms.dseed=.3,this.uniforms.drepeat=5,this.uniforms.dlen=120,t&&(t.damount&&(this.uniforms.damount=t.damount),t.dseed&&(this.uniforms.dseed=t.dseed),t.drepeat&&(this.uniforms.drepeat=t.drepeat),t.drepeat)&&(this.uniforms.dlen=t.dlen),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}),this.fsQuad=new THREE.Pass.FullScreenQuad(this.material),this.goWild=!1,this.curF=0,this.generateTrigger(this.uniforms.dlen)},THREE.GlitchPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.GlitchPass,render:function(e,t,n){this.uniforms.tDiffuse.value=n.texture,this.uniforms.seed.value=Math.random(),this.uniforms.byp.value=0,this.curF%this.randX<this.randX/this.uniforms.drepeat?(this.uniforms.amount.value=Math.random()/this.uniforms.damount,this.uniforms.angle.value=THREE.MathUtils.randFloat(-Math.PI,Math.PI),this.uniforms.distortion_x.value=THREE.MathUtils.randFloat(0,1),this.uniforms.distortion_y.value=THREE.MathUtils.randFloat(0,1),this.uniforms.seed_x.value=THREE.MathUtils.randFloat(-this.uniforms.dseed,this.uniforms.dseed),this.uniforms.seed_y.value=THREE.MathUtils.randFloat(-this.uniforms.dseed,this.uniforms.dseed)):0==this.goWild&&(this.uniforms.byp.value=1),this.curF++,this.renderToScreen?e.setRenderTarget(null):(e.setRenderTarget(t),this.clear&&e.clear()),this.fsQuad.render(e)},generateTrigger:function(e){this.randX=THREE.MathUtils.randInt(e,2*e)},generateHeightmap:function(e){for(var t=new Float32Array(e*e*3),n=e*e,r=0;r<n;r++){var i=THREE.MathUtils.randFloat(0,1);t[3*r+0]=i,t[3*r+1]=i,t[3*r+2]=i}return new THREE.DataTexture(t,e,e,THREE.RGBFormat,THREE.FloatType)}}),THREE.glitch2Shader={uniforms:{tColor:{value:null},progress:{value:0},duration:{value:1},width:{value:0},height:{value:0}},vertexShader:"varying vec2 vUv;void main() {vUv = uv;gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );}",fragmentShader:`#if __VERSION__ < 130
#define TEXTURE2D texture2D
#else
#define TEXTURE2D texture
#endif
varying vec2 vUv;uniform sampler2D tColor;uniform float progress;	uniform float duration;	uniform vec4 resolution;uniform float width;uniform float height;float random(vec2 c){return fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);}vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;}vec4 mod289(vec4 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;}vec4 permute(vec4 x) {return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}float snoise3(vec3 v){const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);vec3 i  = floor(v + dot(v, C.yyy) );vec3 x0 =   v - i + dot(i, C.xxx) ;vec3 g = step(x0.yzx, x0.xyz);vec3 l = 1.0 - g;vec3 i1 = min( g.xyz, l.zxy );vec3 i2 = max( g.xyz, l.zxy );vec3 x1 = x0 - i1 + C.xxx;vec3 x2 = x0 - i2 + C.yyy; vec3 x3 = x0 - D.yyy;i = mod289(i);vec4 p = permute( permute( permute(i.z + vec4(0.0, i1.z, i2.z, 1.0 ))+ i.y + vec4(0.0, i1.y, i2.y, 1.0 ))+ i.x + vec4(0.0, i1.x, i2.x, 1.0 ));float n_ = 0.142857142857; vec3  ns = n_ * D.wyz - D.xzx;vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  vec4 x_ = floor(j * ns.z);vec4 y_ = floor(j - 7.0 * x_ );vec4 x = x_ *ns.x + ns.yyyy;vec4 y = y_ *ns.x + ns.yyyy;vec4 h = 1.0 - abs(x) - abs(y);vec4 b0 = vec4( x.xy, y.xy );vec4 b1 = vec4( x.zw, y.zw );vec4 s0 = floor(b0)*2.0 + 1.0;vec4 s1 = floor(b1)*2.0 + 1.0;vec4 sh = -step(h, vec4(0.0));vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;vec3 p0 = vec3(a0.xy,h.x);vec3 p1 = vec3(a0.zw,h.y);vec3 p2 = vec3(a1.xy,h.z);vec3 p3 = vec3(a1.zw,h.w);vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));p0 *= norm.x;p1 *= norm.y;p2 *= norm.z;p3 *= norm.w;vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);m = m * m;return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),dot(p2,x2), dot(p3,x3) ) );}vec4 makeNoise(vec2 vUv,float progress, in sampler2D Texture, float interval,vec2 resolution ) {precision highp float;	progress *=interval/2.;		  float strength = smoothstep(interval * 0.5, interval, interval - mod(progress, interval));vec2 shake = vec2(strength * 8.0 + 0.5) * vec2( random(vec2(progress)) * 2.0 - 1.0,random(vec2(progress * 2.0)) * 2.0 - 1.0) / resolution.y ;float y = vUv.y * resolution.y;float rgbWave = (snoise3(vec3(0.0, y * 0.01, progress * 400.0)) * (2.0 + strength * 32.0)* snoise3(vec3(0.0, y * 0.02, progress * 200.0)) * (1.0 + strength * 4.0)+ step(0.9995, sin(y * 0.005 + progress * 1.6)) * 12.0+ step(0.9999, sin(y * 0.005 + progress * 2.0)) * -18.0) / resolution.x;float rgbDiff = (6.0 + sin(progress * 500.0 + vUv.y * 40.0) * (20.0 * strength + 1.0)) / resolution.x;float rgbUvX = vUv.x + rgbWave;float r = TEXTURE2D(Texture, vec2(rgbUvX + rgbDiff, vUv.y) + shake).r;float g = TEXTURE2D(Texture, vec2(rgbUvX, vUv.y) + shake).g;float b = TEXTURE2D(Texture, vec2(rgbUvX - rgbDiff, vUv.y) + shake).b;float whiteNoise = (random(vUv + mod(progress, 10.0)) * 2.0 - 1.0) * (0.15 + strength * 0.15);float bnTime = floor(progress * 20.0) * 200.0;float noiseX = step((snoise3(vec3(0.0, vUv.x * 3.0, bnTime)) + 1.0) / 2.0, 0.12 + strength * 0.3);float noiseY = step((snoise3(vec3(0.0, vUv.y * 3.0, bnTime)) + 1.0) / 2.0, 0.12 + strength * 0.3);float bnMask = noiseX * noiseY;float bnUvX = vUv.x + sin(bnTime) * 0.2 + rgbWave;float bnR = TEXTURE2D(Texture, vec2(bnUvX + rgbDiff, vUv.y)).r * bnMask;float bnG = TEXTURE2D(Texture, vec2(bnUvX, vUv.y)).g * bnMask;float bnB = TEXTURE2D(Texture, vec2(bnUvX - rgbDiff, vUv.y)).b * bnMask;vec4 blockNoise = vec4(bnR, bnG, bnB, 1.0);float bnTime2 = floor(progress * 25.0) * 300.0;float noiseX2 = step((snoise3(vec3(0.0, vUv.x * 2.0, bnTime2)) + 1.0) / 2.0, 0.12 + strength * 0.5);float noiseY2 = step((snoise3(vec3(0.0, vUv.y * 8.0, bnTime2)) + 1.0) / 2.0, 0.12 + strength * 0.3);float bnMask2 = noiseX2 * noiseY2;float bnR2 = TEXTURE2D(Texture, vec2(bnUvX + rgbDiff, vUv.y)).r * bnMask2;float bnG2 = TEXTURE2D(Texture, vec2(bnUvX, vUv.y)).g * bnMask2;float bnB2 = TEXTURE2D(Texture, vec2(bnUvX - rgbDiff, vUv.y)).b * bnMask2;vec4 blockNoise2 = vec4(bnR2, bnG2, bnB2, 1.0);float waveNoise = (sin(vUv.y * 1200.0) + 1.0) / 2.0 * (0.15 + strength * 0.2);return vec4(r, g, b, 1.0) * (1.0 - bnMask - bnMask2) + (whiteNoise + blockNoise + blockNoise2 - waveNoise);}void main() {	vec4 resolution = vec4(width,height,1.,width/height);gl_FragColor = makeNoise(vUv,progress,tColor,duration,resolution.xy);}`},THREE.glitch2=function(e,t,n){THREE.Pass.call(this),this.scene=e,this.camera=t,e=n.width||window.innerWidth||1,t=n.height||window.innerHeight||1,this.renderTargetDepth=new THREE.WebGLRenderTarget(e,t,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter}),this.renderTargetDepth.texture.name="glitch2.depth",void 0===THREE.glitch2Shader&&console.error("THREE.glitch2 relies on THREE.glitch2Shader"),e=THREE.glitch2Shader,(t=THREE.UniformsUtils.clone(e.uniforms)).progress.value=n.progress,t.duration.value=n.duration,t.width.value=n.width,t.height.value=n.height,this.materialglitch2=new THREE.ShaderMaterial({uniforms:t,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader}),this.uniforms=t,this.needsSwap=!1,this.fsQuad=new THREE.Pass.FullScreenQuad(this.materialglitch2),this._oldClearColor=new THREE.Color},THREE.glitch2.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.glitch2,render:function(e,t,n){e.getClearColor(this._oldClearColor);var r=e.getClearAlpha(),i=e.autoClear;e.autoClear=!1,e.setClearColor(16777215),e.setClearAlpha(1),e.setRenderTarget(this.renderTargetDepth),e.clear(),e.render(this.scene,this.camera),this.uniforms.tColor.value=n.texture,this.renderToScreen?e.setRenderTarget(null):(e.setRenderTarget(t),e.clear()),this.fsQuad.render(e),this.scene.overrideMaterial=null,e.setClearColor(this._oldClearColor),e.setClearAlpha(r),e.autoClear=i}}),THREE.Blur2dShader={uniforms:{tColor:{value:null},intensity:{value:0},progress:{value:0},left:{value:1},top:{value:0}},vertexShader:"varying vec2 vUv;void main() {vUv = uv;gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );}",fragmentShader:`#if __VERSION__ < 130
#define TEXTURE2D texture2D
#else
#define TEXTURE2D texture
#endif
varying vec2 vUv;uniform sampler2D tColor;uniform float progress;uniform float intensity;uniform float left;uniform float top;const int Samples = 64;vec4 DirectionalBlur(in vec2 UV, in vec2 Direction, in float Intensity, in sampler2D Texture) {vec4 Color = vec4(0.0);  for (int i=1; i<=Samples/2; i++){Color += TEXTURE2D(Texture,UV+float(i)*Intensity/float(Samples/2)*Direction);Color += TEXTURE2D(Texture,UV-float(i)*Intensity/float(Samples/2)*Direction);}return Color/float(Samples);}void main() {vec2 uv = vUv;vec2 Direction = vec2(left, top);float Intensity = intensity;float m = progress;m = smoothstep(0.1,0.9,m);float mult = (m -0.5)*2.;Intensity *= (-(mult * mult) + 1.);Intensity *= 1.0 - step(1.0,m);vec4 Color = DirectionalBlur(uv,normalize(Direction), Intensity, tColor);gl_FragColor = vec4(Color.xyz, 1.0);}`},THREE.Blur2D=function(e,t,n,r){THREE.Pass.call(this),this.scene=e,this.camera=t;var i=void 0===n.left?0:n.left,e=void 0===n.top?0:n.top;0===i&&0===e&&(i=1),t=n.width||window.innerWidth||1,n=n.height||window.innerHeight||1,this.renderTargetDepth=new THREE.WebGLRenderTarget(t,n,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter}),this.renderTargetDepth.texture.name="Blur2D.depth",void 0===THREE.Blur2dShader&&console.error("THREE.Blur2D relies on THREE.Blur2dShader"),t=THREE.Blur2dShader,n=THREE.UniformsUtils.clone(t.uniforms),void 0!==r.name&&void 0!==r.function&&(t.fragmentShader=t.fragmentShader.replace("/*easeName*/",r.name),t.fragmentShader=t.fragmentShader.replace("/*easeFunction*/",r.function)),n.intensity.value=.1,n.progress.value=0,n.left.value=i,n.top.value=e,this.materialBlur2d=new THREE.ShaderMaterial({uniforms:n,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader}),this.uniforms=n,this.needsSwap=!1,this.fsQuad=new THREE.Pass.FullScreenQuad(this.materialBlur2d),this._oldClearColor=new THREE.Color},THREE.Blur2D.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.Blur2D,render:function(e,t,n){e.getClearColor(this._oldClearColor);var r=e.getClearAlpha(),i=e.autoClear;e.autoClear=!1,e.setClearColor(16777215),e.setClearAlpha(1),e.setRenderTarget(this.renderTargetDepth),e.clear(),e.render(this.scene,this.camera),this.uniforms.tColor.value=n.texture,this.renderToScreen?e.setRenderTarget(null):(e.setRenderTarget(t),e.clear()),this.fsQuad.render(e),this.scene.overrideMaterial=null,e.setClearColor(this._oldClearColor),e.setClearAlpha(r),e.autoClear=i}}),function(e){e.fn.revolution=e.fn.revolution||{};e=window._R_is_Editor?RVS._R:e.fn.revolution;e.postProcessing=e.postProcessing||{},e.postProcessing.d3={init:function(e,t,n,r){var i={type:"d3"};return i.renderPass=new THREE.RenderPass(t,n),i.effectPass=new THREE.BokehPass(t,n,{focus:r.focus,aperture:r.aperture,maxblur:r.maxblur,width:r.width,height:r.height}),i.composer=new THREE.EffectComposer(e),i.composer.addPass(i.renderPass),i.composer.addPass(i.effectPass),i}},e.postProcessing.film={init:function(e,t,n,r){var i={type:"film"};return i.renderPass=new THREE.RenderPass(t,n),i.effectPass=new THREE.FilmPass(r.noise,r.scale,r.size,r.grayscale),i.effectPass.renderToScreen=!0,i.composer=new THREE.EffectComposer(e),i.composer.addPass(i.renderPass),i.composer.addPass(i.effectPass),i}},e.postProcessing.glitches={init:function(e,t,n,r){var i={type:"glitches"};return i.composer=new THREE.EffectComposer(e),i.renderPass=new THREE.RenderPass(t,n),i.effectPass=new THREE.GlitchPass({damount:parseInt(r.amount)||90,dseed:parseFloat(r.seed)||.3,drepeat:parseFloat(r.repeat)||5,dlen:parseInt(r.len)||120}),i.composer.addPass(i.renderPass),i.composer.addPass(i.effectPass),i}},e.postProcessing.glitch2={init:function(e,t,n,r){var i={type:"glitch2"};return i.renderPass=new THREE.RenderPass(t,n),i.effectPass=new THREE.glitch2(t,n,{progress:r.progress,duration:r.duration,width:r.width,height:r.height}),i.composer=new THREE.EffectComposer(e),i.composer.addPass(i.renderPass),i.composer.addPass(i.effectPass),i}},e.postProcessing.motion={init:function(e,t,n,r,i){var a={type:"motion"};return a.renderPass=new THREE.RenderPass(t,n),a.effectPass=new THREE.Blur2D(t,n,{progress:r.progress,intensity:r.intensity,left:r.left,top:r.top,width:r.width,height:r.height},i),a.composer=new THREE.EffectComposer(e),a.composer.addPass(a.renderPass),a.composer.addPass(a.effectPass),a}}}(jQuery),window.RS_MODULES=window.RS_MODULES||{},window.RS_MODULES.threejs={loaded:!0,version:"R128"},window.RS_MODULES.checkMinimal&&window.RS_MODULES.checkMinimal();